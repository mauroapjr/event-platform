{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\GeneratePDFButton.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratePDFButton = ({\n  eventId\n}) => {\n  const handleGeneratePDF = async () => {\n    try {\n      // Fetch the latest rounds data\n      const roundsResponse = await axios.get(`http://localhost:3000/event-admin/get-rounds/${eventId}`);\n      const rounds = roundsResponse.data;\n      console.log(\"Rounds data for PDF:\", rounds);\n      const response = await axios.post(`http://localhost:3000/event-admin/generate-rounds-pdf`, {\n        eventId,\n        rounds\n      }, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"rounds.pdf\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n        console.error(\"Response headers:\", error.response.headers);\n      } else if (error.request) {\n        console.error(\"Request data:\", error.request);\n      } else {\n        console.error(\"Error message:\", error.message);\n      }\n      alert(\"Error generating PDF\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-secondary mt-0\",\n    onClick: handleGeneratePDF,\n    children: \"Generate PDF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = GeneratePDFButton;\nexport default GeneratePDFButton;\nvar _c;\n$RefreshReg$(_c, \"GeneratePDFButton\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","GeneratePDFButton","eventId","handleGeneratePDF","roundsResponse","get","rounds","data","console","log","response","post","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","error","status","headers","request","message","alert","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/GeneratePDFButton.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GeneratePDFButton = ({ eventId }) => {\r\n  const handleGeneratePDF = async () => {\r\n    try {\r\n      // Fetch the latest rounds data\r\n      const roundsResponse = await axios.get(\r\n        `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n      );\r\n      const rounds = roundsResponse.data;\r\n\r\n      console.log(\"Rounds data for PDF:\", rounds);\r\n\r\n      const response = await axios.post(\r\n        `http://localhost:3000/event-admin/generate-rounds-pdf`,\r\n        {\r\n          eventId,\r\n          rounds,\r\n        },\r\n        { responseType: \"blob\" }\r\n      );\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", \"rounds.pdf\");\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Error generating PDF:\", error);\r\n      if (error.response) {\r\n        console.error(\"Response data:\", error.response.data);\r\n        console.error(\"Response status:\", error.response.status);\r\n        console.error(\"Response headers:\", error.response.headers);\r\n      } else if (error.request) {\r\n        console.error(\"Request data:\", error.request);\r\n      } else {\r\n        console.error(\"Error message:\", error.message);\r\n      }\r\n      alert(\"Error generating PDF\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-secondary mt-0\" onClick={handleGeneratePDF}>\r\n      Generate PDF\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default GeneratePDFButton;\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACzC,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF;MACA,MAAMC,cAAc,GAAG,MAAMN,KAAK,CAACO,GAAG,CACnC,gDAA+CH,OAAQ,EAC1D,CAAC;MACD,MAAMI,MAAM,GAAGF,cAAc,CAACG,IAAI;MAElCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,MAAM,CAAC;MAE3C,MAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC9B,uDAAsD,EACvD;QACET,OAAO;QACPI;MACF,CAAC,EACD;QAAEM,YAAY,EAAE;MAAO,CACzB,CAAC;MACD,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACP,QAAQ,CAACH,IAAI,CAAC,CAAC,CAAC;MACjE,MAAMW,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGR,GAAG;MACfK,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC;MAC3CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACd,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdlB,OAAO,CAACkB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,IAAIA,KAAK,CAAChB,QAAQ,EAAE;QAClBF,OAAO,CAACkB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAChB,QAAQ,CAACH,IAAI,CAAC;QACpDC,OAAO,CAACkB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAChB,QAAQ,CAACiB,MAAM,CAAC;QACxDnB,OAAO,CAACkB,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAChB,QAAQ,CAACkB,OAAO,CAAC;MAC5D,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;QACxBrB,OAAO,CAACkB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACG,OAAO,CAAC;MAC/C,CAAC,MAAM;QACLrB,OAAO,CAACkB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACI,OAAO,CAAC;MAChD;MACAC,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACE/B,OAAA;IAAQgC,SAAS,EAAC,wBAAwB;IAACC,OAAO,EAAE9B,iBAAkB;IAAA+B,QAAA,EAAC;EAEvE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GA7CItC,iBAAiB;AA+CvB,eAAeA,iBAAiB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}