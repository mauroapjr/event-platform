{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\RoundsDisplay.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const RoundsDisplay = ({ eventId }) => {\n//   const [rounds, setRounds] = useState([]);\n\n//   const fetchRounds = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//       );\n//       const roundsData = response.data;\n//       console.log(\"Rounds data:\", roundsData);\n\n//       const processedRounds = roundsData.map((round) => ({\n//         id: round.id,\n//         name: round.round_name,\n//         category: round.category,\n//         sub_category: round.sub_category,\n//         board_type: round.board_type,\n//         gender: round.gender,\n//         age_category: round.age_category,\n//         heats: (round.heats || []).map((heat) => ({\n//           id: heat.id,\n//           name: heat.heat_name,\n//           competitors: (heat.competitors || []).map((competitor) => ({\n//             id: competitor.id,\n//             name: competitor.name,\n//           })),\n//         })),\n//       }));\n\n//       console.log(\"Processed rounds:\", processedRounds);\n\n//       setRounds(processedRounds);\n//     } catch (error) {\n//       console.error(\"Error fetching rounds:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (eventId) {\n//       fetchRounds();\n//     }\n//   }, [eventId]);\n\n//   return (\n//     <div>\n//       <h3>Rounds</h3>\n//       {rounds.length === 0 ? (\n//         <p>No rounds with heats available.</p>\n//       ) : (\n//         rounds.map((round) => (\n//           <div key={round.id}>\n//             <h4>{round.name}</h4>\n//             {round.heats.map((heat) => (\n//               <div key={heat.id}>\n//                 <h5>{heat.name}</h5>\n//                 <ul>\n//                   {heat.competitors.map((competitor) => (\n//                     <li key={competitor.id}>{competitor.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ))}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default RoundsDisplay;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundsDisplay = ({\n  eventId\n}) => {\n  _s();\n  const [rounds, setRounds] = useState([]);\n  const fetchRounds = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-rounds/${eventId}`);\n      const roundsData = response.data;\n      console.log(\"Fetched rounds data:\", roundsData);\n      const processedRounds = roundsData.map(round => ({\n        id: round.id,\n        name: round.round_name,\n        category: round.category,\n        sub_category: round.sub_category,\n        board_type: round.board_type,\n        gender: round.gender,\n        age_category: round.age_category,\n        heats: (round.heats || []).map(heat => ({\n          id: heat.id,\n          name: heat.heat_name,\n          competitors: (heat.competitors || []).map(competitor => ({\n            id: competitor.id,\n            name: competitor.name\n          }))\n        }))\n      }));\n      console.log(\"Processed rounds:\", processedRounds);\n      setRounds(processedRounds);\n    } catch (error) {\n      console.error(\"Error fetching rounds:\", error);\n    }\n  };\n  useEffect(() => {\n    if (eventId) {\n      fetchRounds();\n    }\n  }, [eventId]);\n  useEffect(() => {\n    console.log(\"Updated rounds state:\", rounds);\n  }, [rounds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rounds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), rounds.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rounds with heats available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this) : rounds.map(round => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: round.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), round.heats.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No heats available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this) : round.heats.map(heat => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: heat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: heat.competitors.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No competitors available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 23\n          }, this) : heat.competitors.map(competitor => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: competitor.name\n          }, competitor.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }, this)]\n      }, heat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this))]\n    }, round.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(RoundsDisplay, \"dL6tZOkQzjaOjAHkJDdXYIqNJyg=\");\n_c = RoundsDisplay;\nexport default RoundsDisplay;\nvar _c;\n$RefreshReg$(_c, \"RoundsDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RoundsDisplay","eventId","_s","rounds","setRounds","fetchRounds","response","get","roundsData","data","console","log","processedRounds","map","round","id","name","round_name","category","sub_category","board_type","gender","age_category","heats","heat","heat_name","competitors","competitor","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/RoundsDisplay.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const RoundsDisplay = ({ eventId }) => {\r\n//   const [rounds, setRounds] = useState([]);\r\n\r\n//   const fetchRounds = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//       );\r\n//       const roundsData = response.data;\r\n//       console.log(\"Rounds data:\", roundsData);\r\n\r\n//       const processedRounds = roundsData.map((round) => ({\r\n//         id: round.id,\r\n//         name: round.round_name,\r\n//         category: round.category,\r\n//         sub_category: round.sub_category,\r\n//         board_type: round.board_type,\r\n//         gender: round.gender,\r\n//         age_category: round.age_category,\r\n//         heats: (round.heats || []).map((heat) => ({\r\n//           id: heat.id,\r\n//           name: heat.heat_name,\r\n//           competitors: (heat.competitors || []).map((competitor) => ({\r\n//             id: competitor.id,\r\n//             name: competitor.name,\r\n//           })),\r\n//         })),\r\n//       }));\r\n\r\n//       console.log(\"Processed rounds:\", processedRounds);\r\n\r\n//       setRounds(processedRounds);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rounds:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (eventId) {\r\n//       fetchRounds();\r\n//     }\r\n//   }, [eventId]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Rounds</h3>\r\n//       {rounds.length === 0 ? (\r\n//         <p>No rounds with heats available.</p>\r\n//       ) : (\r\n//         rounds.map((round) => (\r\n//           <div key={round.id}>\r\n//             <h4>{round.name}</h4>\r\n//             {round.heats.map((heat) => (\r\n//               <div key={heat.id}>\r\n//                 <h5>{heat.name}</h5>\r\n//                 <ul>\r\n//                   {heat.competitors.map((competitor) => (\r\n//                     <li key={competitor.id}>{competitor.name}</li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RoundsDisplay;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst RoundsDisplay = ({ eventId }) => {\r\n  const [rounds, setRounds] = useState([]);\r\n\r\n  const fetchRounds = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n      );\r\n      const roundsData = response.data;\r\n      console.log(\"Fetched rounds data:\", roundsData);\r\n\r\n      const processedRounds = roundsData.map((round) => ({\r\n        id: round.id,\r\n        name: round.round_name,\r\n        category: round.category,\r\n        sub_category: round.sub_category,\r\n        board_type: round.board_type,\r\n        gender: round.gender,\r\n        age_category: round.age_category,\r\n        heats: (round.heats || []).map((heat) => ({\r\n          id: heat.id,\r\n          name: heat.heat_name,\r\n          competitors: (heat.competitors || []).map((competitor) => ({\r\n            id: competitor.id,\r\n            name: competitor.name,\r\n          })),\r\n        })),\r\n      }));\r\n\r\n      console.log(\"Processed rounds:\", processedRounds);\r\n      setRounds(processedRounds);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rounds:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventId) {\r\n      fetchRounds();\r\n    }\r\n  }, [eventId]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Updated rounds state:\", rounds);\r\n  }, [rounds]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Rounds</h3>\r\n      {rounds.length === 0 ? (\r\n        <p>No rounds with heats available.</p>\r\n      ) : (\r\n        rounds.map((round) => (\r\n          <div key={round.id}>\r\n            <h4>{round.name}</h4>\r\n            {round.heats.length === 0 ? (\r\n              <p>No heats available.</p>\r\n            ) : (\r\n              round.heats.map((heat) => (\r\n                <div key={heat.id}>\r\n                  <h5>{heat.name}</h5>\r\n                  <ul>\r\n                    {heat.competitors.length === 0 ? (\r\n                      <li>No competitors available.</li>\r\n                    ) : (\r\n                      heat.competitors.map((competitor) => (\r\n                        <li key={competitor.id}>{competitor.name}</li>\r\n                      ))\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundsDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}