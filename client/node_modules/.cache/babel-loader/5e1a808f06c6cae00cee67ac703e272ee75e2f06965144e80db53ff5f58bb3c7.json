{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\EventManagement.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const EventManagement = () => {\n//   const [events, setEvents] = useState([]);\n//   const [competitors, setCompetitors] = useState([]);\n//   const [eventId, setEventId] = useState(null);\n//   const [name, setName] = useState('');\n//   const [date, setDate] = useState('');\n//   const [location, setLocation] = useState('');\n//   const [competitorName, setCompetitorName] = useState('');\n//   const [createdBy, setCreatedBy] = useState(1);  \n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const fetchCompetitors = async (eventId) => {\n//     try {\n//       const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\n//       setCompetitors(response.data);\n//       setEventId(eventId);\n//     } catch (error) {\n//       console.error('Error fetching competitors:', error);\n//     }\n//   };\n\n//   const handleCreateEvent = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:3000/event-admin/create-event', { name, date, location, created_by: createdBy });\n//       alert('Event created successfully');\n//       setName('');\n//       setDate('');\n//       setLocation('');\n//       fetchEvents();\n//     } catch (error) {\n//       console.error('Error creating event:', error);\n//       alert('Error creating event');\n//     }\n//   };\n\n//   const handleDeleteEvent = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\n//       alert('Event deleted successfully');\n//       fetchEvents();\n//     } catch (error) {\n//       console.error('Error deleting event:', error);\n//       alert('Error deleting event');\n//     }\n//   };\n\n//   const handleAddCompetitor = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:3000/event-admin/add-competitor', { name: competitorName, event_id: eventId });\n//       alert('Competitor added successfully');\n//       setCompetitorName('');\n//       fetchCompetitors(eventId);\n//     } catch (error) {\n//       console.error('Error adding competitor:', error);\n//       alert('Error adding competitor');\n//     }\n//   };\n\n//   const handleDeleteCompetitor = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\n//       alert('Competitor deleted successfully');\n//       fetchCompetitors(eventId);\n//     } catch (error) {\n//       console.error('Error deleting competitor:', error);\n//       alert('Error deleting competitor');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Manage Events</h2>\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\n//         <div className=\"form-group\">\n//           <label>Event Name:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group mt-3\">\n//           <label>Date:</label>\n//           <input\n//             type=\"date\"\n//             className=\"form-control\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group mt-3\">\n//           <label>Location:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Create Event</button>\n//       </form>\n\n//       <h3>Existing Events</h3>\n//       <ul className=\"list-group\">\n//         {events.map((event) => (\n//           <li key={event.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//             <span onClick={() => fetchCompetitors(event.id)}>{event.name}</span>\n//             <button className=\"btn btn-danger\" onClick={() => handleDeleteEvent(event.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {eventId && (\n//         <>\n//           <h3>Manage Competitors</h3>\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\n//             <div className=\"form-group\">\n//               <label>Competitor Name:</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 value={competitorName}\n//                 onChange={(e) => setCompetitorName(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">Add Competitor</button>\n//           </form>\n\n//           <h3>Existing Competitors</h3>\n//           <ul className=\"list-group\">\n//             {competitors.map((competitor) => (\n//               <li key={competitor.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//                 {competitor.name}\n//                 <button className=\"btn btn-danger\" onClick={() => handleDeleteCompetitor(competitor.id)}>Delete</button>\n//               </li>\n//             ))}\n//           </ul>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EventManagement;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const EventManagement = () => {\n//   const [events, setEvents] = useState([]);\n//   const [competitors, setCompetitors] = useState([]);\n//   const [eventId, setEventId] = useState(null);\n//   const [name, setName] = useState('');\n//   const [date, setDate] = useState('');\n//   const [location, setLocation] = useState('');\n//   const [competitorName, setCompetitorName] = useState('');\n//   const [createdBy, setCreatedBy] = useState(1);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const fetchCompetitors = async (eventId) => {\n//     try {\n//       const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\n//       setCompetitors(response.data);\n//       setEventId(eventId); \n//       console.log('Fetched competitors:', response.data); \n//       console.log('Set eventId:', eventId); \n//     } catch (error) {\n//       console.error('Error fetching competitors:', error);\n//     }\n//   };\n\n//   const handleCreateEvent = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:3000/event-admin/create-event', { name, date, location, created_by: createdBy });\n//       alert('Event created successfully');\n//       setName('');\n//       setDate('');\n//       setLocation('');\n//       fetchEvents();\n//     } catch (error) {\n//       console.error('Error creating event:', error);\n//       alert('Error creating event');\n//     }\n//   };\n\n//   const handleDeleteEvent = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\n//       alert('Event deleted successfully');\n//       fetchEvents();\n//     } catch (error) {\n//       console.error('Error deleting event:', error);\n//       alert('Error deleting event');\n//     }\n//   };\n\n//   const handleAddCompetitor = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:3000/event-admin/add-competitor', { name: competitorName, event_id: eventId });\n//       alert('Competitor added successfully');\n//       setCompetitorName('');\n//       fetchCompetitors(eventId);\n//     } catch (error) {\n//       console.error('Error adding competitor:', error);\n//       alert('Error adding competitor');\n//     }\n//   };\n\n//   const handleDeleteCompetitor = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\n//       alert('Competitor deleted successfully');\n//       fetchCompetitors(eventId);\n//     } catch (error) {\n//       console.error('Error deleting competitor:', error);\n//       alert('Error deleting competitor');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Manage Events</h2>\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\n//         <div className=\"form-group\">\n//           <label>Event Name:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group mt-3\">\n//           <label>Date:</label>\n//           <input\n//             type=\"date\"\n//             className=\"form-control\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group mt-3\">\n//           <label>Location:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Create Event</button>\n//       </form>\n\n//       <h3>Existing Events</h3>\n//       <ul className=\"list-group\">\n//         {events.map((event) => (\n//           <li key={event.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//             <span onClick={() => fetchCompetitors(event.id)}>{event.name}</span>\n//             <button className=\"btn btn-danger\" onClick={() => handleDeleteEvent(event.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {eventId && (\n//         <>\n//           <h3>Manage Competitors</h3>\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\n//             <div className=\"form-group\">\n//               <label>Competitor Name:</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 value={competitorName}\n//                 onChange={(e) => setCompetitorName(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">Add Competitor</button>\n//           </form>\n\n//           <h3>Existing Competitors</h3>\n//           <ul className=\"list-group\">\n//             {competitors.map((competitor) => (\n//               <li key={competitor.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//                 {competitor.name}\n//                 <button className=\"btn btn-danger\" onClick={() => handleDeleteCompetitor(competitor.id)}>Delete</button>\n//               </li>\n//             ))}\n//           </ul>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EventManagement;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventManagement = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [competitors, setCompetitors] = useState([]);\n  const [eventId, setEventId] = useState(null);\n  const [name, setName] = useState('');\n  const [date, setDate] = useState('');\n  const [location, setLocation] = useState('');\n  const [competitorName, setCompetitorName] = useState('');\n  const [createdBy, setCreatedBy] = useState(1);\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/event-admin/get-events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const fetchCompetitors = async eventId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\n      setCompetitors(response.data);\n      setEventId(eventId); // Update eventId state here\n      console.log('Fetched competitors:', response.data); // Debugging line\n      console.log('Set eventId:', eventId); // Debugging line\n    } catch (error) {\n      console.error('Error fetching competitors:', error);\n    }\n  };\n  const handleCreateEvent = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:3000/event-admin/create-event', {\n        name,\n        date,\n        location,\n        created_by: createdBy\n      });\n      alert('Event created successfully');\n      setName('');\n      setDate('');\n      setLocation('');\n      fetchEvents();\n    } catch (error) {\n      console.error('Error creating event:', error);\n      alert('Error creating event');\n    }\n  };\n  const handleDeleteEvent = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\n      alert('Event deleted successfully');\n      fetchEvents();\n    } catch (error) {\n      console.error('Error deleting event:', error);\n      alert('Error deleting event');\n    }\n  };\n  const handleAddCompetitor = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:3000/event-admin/add-competitor', {\n        name: competitorName,\n        event_id: eventId\n      });\n      alert('Competitor added successfully');\n      setCompetitorName('');\n      fetchCompetitors(eventId);\n    } catch (error) {\n      console.error('Error adding competitor:', error);\n      alert('Error adding competitor');\n    }\n  };\n  const handleDeleteCompetitor = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\n      alert('Competitor deleted successfully');\n      fetchCompetitors(eventId);\n    } catch (error) {\n      console.error('Error deleting competitor:', error);\n      alert('Error deleting competitor');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateEvent,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Event Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => fetchCompetitors(event.id),\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => handleDeleteEvent(event.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), !eventId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info mt-4\",\n      children: \"Please select an event to manage competitors.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this), eventId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage Competitors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddCompetitor,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Competitor Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: competitorName,\n            onChange: e => setCompetitorName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          children: \"Add Competitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Competitors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: competitors.map(competitor => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [competitor.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteCompetitor(competitor.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 17\n          }, this)]\n        }, competitor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 5\n  }, this);\n};\n_s(EventManagement, \"ehQ4HWWWF+fx5YiZxqzSgLrhvqU=\");\n_c = EventManagement;\nexport default EventManagement;\nvar _c;\n$RefreshReg$(_c, \"EventManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","EventManagement","_s","events","setEvents","competitors","setCompetitors","eventId","setEventId","name","setName","date","setDate","location","setLocation","competitorName","setCompetitorName","createdBy","setCreatedBy","fetchEvents","response","get","data","error","console","fetchCompetitors","log","handleCreateEvent","e","preventDefault","post","created_by","alert","handleDeleteEvent","id","delete","handleAddCompetitor","event_id","handleDeleteCompetitor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","map","event","onClick","competitor","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventManagement.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const EventManagement = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [competitors, setCompetitors] = useState([]);\r\n//   const [eventId, setEventId] = useState(null);\r\n//   const [name, setName] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [location, setLocation] = useState('');\r\n//   const [competitorName, setCompetitorName] = useState('');\r\n//   const [createdBy, setCreatedBy] = useState(1);  \r\n  \r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCompetitors = async (eventId) => {\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\r\n//       setCompetitors(response.data);\r\n//       setEventId(eventId);\r\n//     } catch (error) {\r\n//       console.error('Error fetching competitors:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateEvent = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('http://localhost:3000/event-admin/create-event', { name, date, location, created_by: createdBy });\r\n//       alert('Event created successfully');\r\n//       setName('');\r\n//       setDate('');\r\n//       setLocation('');\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error('Error creating event:', error);\r\n//       alert('Error creating event');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteEvent = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\r\n//       alert('Event deleted successfully');\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error('Error deleting event:', error);\r\n//       alert('Error deleting event');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddCompetitor = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('http://localhost:3000/event-admin/add-competitor', { name: competitorName, event_id: eventId });\r\n//       alert('Competitor added successfully');\r\n//       setCompetitorName('');\r\n//       fetchCompetitors(eventId);\r\n//     } catch (error) {\r\n//       console.error('Error adding competitor:', error);\r\n//       alert('Error adding competitor');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteCompetitor = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\r\n//       alert('Competitor deleted successfully');\r\n//       fetchCompetitors(eventId);\r\n//     } catch (error) {\r\n//       console.error('Error deleting competitor:', error);\r\n//       alert('Error deleting competitor');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2>Manage Events</h2>\r\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n//         <div className=\"form-group\">\r\n//           <label>Event Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             className=\"form-control\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Location:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={location}\r\n//             onChange={(e) => setLocation(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Create Event</button>\r\n//       </form>\r\n\r\n//       <h3>Existing Events</h3>\r\n//       <ul className=\"list-group\">\r\n//         {events.map((event) => (\r\n//           <li key={event.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//             <span onClick={() => fetchCompetitors(event.id)}>{event.name}</span>\r\n//             <button className=\"btn btn-danger\" onClick={() => handleDeleteEvent(event.id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {eventId && (\r\n//         <>\r\n//           <h3>Manage Competitors</h3>\r\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n//             <div className=\"form-group\">\r\n//               <label>Competitor Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 value={competitorName}\r\n//                 onChange={(e) => setCompetitorName(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">Add Competitor</button>\r\n//           </form>\r\n\r\n//           <h3>Existing Competitors</h3>\r\n//           <ul className=\"list-group\">\r\n//             {competitors.map((competitor) => (\r\n//               <li key={competitor.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//                 {competitor.name}\r\n//                 <button className=\"btn btn-danger\" onClick={() => handleDeleteCompetitor(competitor.id)}>Delete</button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EventManagement;\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const EventManagement = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [competitors, setCompetitors] = useState([]);\r\n//   const [eventId, setEventId] = useState(null);\r\n//   const [name, setName] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [location, setLocation] = useState('');\r\n//   const [competitorName, setCompetitorName] = useState('');\r\n//   const [createdBy, setCreatedBy] = useState(1);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCompetitors = async (eventId) => {\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\r\n//       setCompetitors(response.data);\r\n//       setEventId(eventId); \r\n//       console.log('Fetched competitors:', response.data); \r\n//       console.log('Set eventId:', eventId); \r\n//     } catch (error) {\r\n//       console.error('Error fetching competitors:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateEvent = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('http://localhost:3000/event-admin/create-event', { name, date, location, created_by: createdBy });\r\n//       alert('Event created successfully');\r\n//       setName('');\r\n//       setDate('');\r\n//       setLocation('');\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error('Error creating event:', error);\r\n//       alert('Error creating event');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteEvent = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\r\n//       alert('Event deleted successfully');\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error('Error deleting event:', error);\r\n//       alert('Error deleting event');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddCompetitor = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('http://localhost:3000/event-admin/add-competitor', { name: competitorName, event_id: eventId });\r\n//       alert('Competitor added successfully');\r\n//       setCompetitorName('');\r\n//       fetchCompetitors(eventId);\r\n//     } catch (error) {\r\n//       console.error('Error adding competitor:', error);\r\n//       alert('Error adding competitor');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteCompetitor = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\r\n//       alert('Competitor deleted successfully');\r\n//       fetchCompetitors(eventId);\r\n//     } catch (error) {\r\n//       console.error('Error deleting competitor:', error);\r\n//       alert('Error deleting competitor');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2>Manage Events</h2>\r\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n//         <div className=\"form-group\">\r\n//           <label>Event Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             className=\"form-control\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Location:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={location}\r\n//             onChange={(e) => setLocation(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Create Event</button>\r\n//       </form>\r\n\r\n//       <h3>Existing Events</h3>\r\n//       <ul className=\"list-group\">\r\n//         {events.map((event) => (\r\n//           <li key={event.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//             <span onClick={() => fetchCompetitors(event.id)}>{event.name}</span>\r\n//             <button className=\"btn btn-danger\" onClick={() => handleDeleteEvent(event.id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {eventId && (\r\n//         <>\r\n//           <h3>Manage Competitors</h3>\r\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n//             <div className=\"form-group\">\r\n//               <label>Competitor Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 value={competitorName}\r\n//                 onChange={(e) => setCompetitorName(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">Add Competitor</button>\r\n//           </form>\r\n\r\n//           <h3>Existing Competitors</h3>\r\n//           <ul className=\"list-group\">\r\n//             {competitors.map((competitor) => (\r\n//               <li key={competitor.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//                 {competitor.name}\r\n//                 <button className=\"btn btn-danger\" onClick={() => handleDeleteCompetitor(competitor.id)}>Delete</button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EventManagement;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst EventManagement = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [competitors, setCompetitors] = useState([]);\r\n  const [eventId, setEventId] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [competitorName, setCompetitorName] = useState('');\r\n  const [createdBy, setCreatedBy] = useState(1);  \r\n  \r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/event-admin/get-events');\r\n      setEvents(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCompetitors = async (eventId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\r\n      setCompetitors(response.data);\r\n      setEventId(eventId); // Update eventId state here\r\n      console.log('Fetched competitors:', response.data); // Debugging line\r\n      console.log('Set eventId:', eventId); // Debugging line\r\n    } catch (error) {\r\n      console.error('Error fetching competitors:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateEvent = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:3000/event-admin/create-event', { name, date, location, created_by: createdBy });\r\n      alert('Event created successfully');\r\n      setName('');\r\n      setDate('');\r\n      setLocation('');\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error('Error creating event:', error);\r\n      alert('Error creating event');\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\r\n      alert('Event deleted successfully');\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error('Error deleting event:', error);\r\n      alert('Error deleting event');\r\n    }\r\n  };\r\n\r\n  const handleAddCompetitor = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:3000/event-admin/add-competitor', { name: competitorName, event_id: eventId });\r\n      alert('Competitor added successfully');\r\n      setCompetitorName('');\r\n      fetchCompetitors(eventId);\r\n    } catch (error) {\r\n      console.error('Error adding competitor:', error);\r\n      alert('Error adding competitor');\r\n    }\r\n  };\r\n\r\n  const handleDeleteCompetitor = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\r\n      alert('Competitor deleted successfully');\r\n      fetchCompetitors(eventId);\r\n    } catch (error) {\r\n      console.error('Error deleting competitor:', error);\r\n      alert('Error deleting competitor');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Manage Events</h2>\r\n      <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n        <div className=\"form-group\">\r\n          <label>Event Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <label>Location:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">Create Event</button>\r\n      </form>\r\n\r\n      <h3>Existing Events</h3>\r\n      <ul className=\"list-group\">\r\n        {events.map((event) => (\r\n          <li key={event.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            <span onClick={() => fetchCompetitors(event.id)}>{event.name}</span>\r\n            <button className=\"btn btn-danger\" onClick={() => handleDeleteEvent(event.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {!eventId && (\r\n        <div className=\"alert alert-info mt-4\">\r\n          Please select an event to manage competitors.\r\n        </div>\r\n      )}\r\n\r\n      {eventId && (\r\n        <>\r\n          <h3>Manage Competitors</h3>\r\n          <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n            <div className=\"form-group\">\r\n              <label>Competitor Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={competitorName}\r\n                onChange={(e) => setCompetitorName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary mt-3\">Add Competitor</button>\r\n          </form>\r\n\r\n          <h3>Existing Competitors</h3>\r\n          <ul className=\"list-group\">\r\n            {competitors.map((competitor) => (\r\n              <li key={competitor.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                {competitor.name}\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteCompetitor(competitor.id)}>Delete</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventManagement;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}