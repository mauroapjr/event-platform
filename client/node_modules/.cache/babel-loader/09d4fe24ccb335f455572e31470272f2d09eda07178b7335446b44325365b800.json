{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\RoundsDisplay.jsx\";\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const RoundsDisplay = ({ eventId }) => {\n//   const [rounds, setRounds] = useState([]);\n\n//   const fetchRounds = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//       );\n//       const roundsData = response.data;\n//       console.log(\"Rounds data:\", roundsData);\n\n//       const processedRounds = roundsData.map((round) => ({\n//         id: round.id,\n//         name: round.name, \n//         category: round.category,\n//         sub_category: round.sub_category,\n//         board_type: round.board_type,\n//         gender: round.gender,\n//         age_category: round.age_category,\n//         heats: (round.heats || []).map((heat) => ({\n//           id: heat.id,\n//           name: heat.heat_name,\n//           competitors: (heat.competitors || []).map((competitor) => ({\n//             id: competitor.id,\n//             name: competitor.name,\n//           })),\n//         })),\n//       }));\n\n//       console.log(\"Processed rounds:\", processedRounds);\n\n//       const roundsWithHeats = processedRounds.filter(\n//         (round) => round.heats.length > 0\n//       );\n\n//       setRounds(roundsWithHeats);\n//     } catch (error) {\n//       console.error(\"Error fetching rounds:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (eventId) {\n//       fetchRounds();\n//     }\n//   }, [eventId]);\n\n//   return (\n//     <div>\n//       <h3>Rounds</h3>\n//       {rounds.length === 0 ? (\n//         <p>No rounds with heats available.</p>\n//       ) : (\n//         rounds.map((round) => (\n//           <div key={round.id}>\n//             <h4>{round.name}</h4>\n//             {round.heats.map((heat) => (\n//               <div key={heat.id}>\n//                 <h5>{heat.name}</h5>\n//                 <ul>\n//                   {heat.competitors.map((competitor) => (\n//                     <li key={competitor.id}>{competitor.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ))}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default RoundsDisplay;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const RoundsDisplay = ({ eventId }) => {\n//   const [rounds, setRounds] = useState([]);\n\n//   const fetchRounds = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//       );\n//       const roundsData = response.data;\n//       console.log(\"Rounds data:\", roundsData);\n\n//       const processedRounds = roundsData.map((round) => ({\n//         id: round.id,\n//         name: round.name, \n//         category: round.category,\n//         sub_category: round.sub_category,\n//         board_type: round.board_type,\n//         gender: round.gender,\n//         age_category: round.age_category,\n//         heats: (round.heats || []).map((heat) => ({\n//           id: heat.id,\n//           name: heat.heat.name,\n//           competitors: (heat.competitors || []).map((competitor) => ({\n//             id: competitor.id,\n//             name: competitor.name,\n//           })),\n//         })),\n//       }));\n\n//       console.log(\"Processed rounds:\", processedRounds);\n\n//       const roundsWithHeats = processedRounds.filter(\n//         (round) => round.heats.length > 0\n//       );\n\n//       console.log(\"Rounds with Heats:\", roundsWithHeats);\n\n//       setRounds(roundsWithHeats);\n//     } catch (error) {\n//       console.error(\"Error fetching rounds:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (eventId) {\n//       fetchRounds();\n//     }\n//   }, [eventId]);\n\n//   return (\n//     <div>\n//       <h3>Rounds</h3>\n//       {rounds.length === 0 ? (\n//         <p>No rounds with heats available.</p>\n//       ) : (\n//         rounds.map((round) => (\n//           <div key={round.id}>\n//             <h4>{round.name}</h4>\n//             {round.heats.map((heat) => (\n//               <div key={heat.id}>\n//                 <h5>{heat.name}</h5>\n//                 <ul>\n//                   {heat.competitors.map((competitor) => (\n//                     <li key={competitor.id}>{competitor.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ))}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default RoundsDisplay;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundsDisplay = ({\n  rounds = []\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rounds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), rounds.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rounds with heats available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this) : rounds.map((round, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: round.round_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), (round.heats || []).map((heat, heatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: heat.heat_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (heat.competitors || []).map((competitor, competitorIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", competitor.name]\n          }, competitor.id || `${heat.id}-${competitorIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)]\n      }, heat.id || `${round.id}-${heatIndex}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }, this))]\n    }, round.id || roundIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_c = RoundsDisplay;\nexport default RoundsDisplay;\nvar _c;\n$RefreshReg$(_c, \"RoundsDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RoundsDisplay","rounds","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","round","roundIndex","round_name","heats","heat","heatIndex","heat_name","competitors","competitor","competitorIndex","name","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/RoundsDisplay.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const RoundsDisplay = ({ eventId }) => {\r\n//   const [rounds, setRounds] = useState([]);\r\n\r\n//   const fetchRounds = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//       );\r\n//       const roundsData = response.data;\r\n//       console.log(\"Rounds data:\", roundsData);\r\n\r\n//       const processedRounds = roundsData.map((round) => ({\r\n//         id: round.id,\r\n//         name: round.name, \r\n//         category: round.category,\r\n//         sub_category: round.sub_category,\r\n//         board_type: round.board_type,\r\n//         gender: round.gender,\r\n//         age_category: round.age_category,\r\n//         heats: (round.heats || []).map((heat) => ({\r\n//           id: heat.id,\r\n//           name: heat.heat_name,\r\n//           competitors: (heat.competitors || []).map((competitor) => ({\r\n//             id: competitor.id,\r\n//             name: competitor.name,\r\n//           })),\r\n//         })),\r\n//       }));\r\n\r\n//       console.log(\"Processed rounds:\", processedRounds);\r\n\r\n//       const roundsWithHeats = processedRounds.filter(\r\n//         (round) => round.heats.length > 0\r\n//       );\r\n\r\n//       setRounds(roundsWithHeats);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rounds:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (eventId) {\r\n//       fetchRounds();\r\n//     }\r\n//   }, [eventId]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Rounds</h3>\r\n//       {rounds.length === 0 ? (\r\n//         <p>No rounds with heats available.</p>\r\n//       ) : (\r\n//         rounds.map((round) => (\r\n//           <div key={round.id}>\r\n//             <h4>{round.name}</h4>\r\n//             {round.heats.map((heat) => (\r\n//               <div key={heat.id}>\r\n//                 <h5>{heat.name}</h5>\r\n//                 <ul>\r\n//                   {heat.competitors.map((competitor) => (\r\n//                     <li key={competitor.id}>{competitor.name}</li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RoundsDisplay;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const RoundsDisplay = ({ eventId }) => {\r\n//   const [rounds, setRounds] = useState([]);\r\n\r\n//   const fetchRounds = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//       );\r\n//       const roundsData = response.data;\r\n//       console.log(\"Rounds data:\", roundsData);\r\n\r\n//       const processedRounds = roundsData.map((round) => ({\r\n//         id: round.id,\r\n//         name: round.name, \r\n//         category: round.category,\r\n//         sub_category: round.sub_category,\r\n//         board_type: round.board_type,\r\n//         gender: round.gender,\r\n//         age_category: round.age_category,\r\n//         heats: (round.heats || []).map((heat) => ({\r\n//           id: heat.id,\r\n//           name: heat.heat.name,\r\n//           competitors: (heat.competitors || []).map((competitor) => ({\r\n//             id: competitor.id,\r\n//             name: competitor.name,\r\n//           })),\r\n//         })),\r\n//       }));\r\n\r\n//       console.log(\"Processed rounds:\", processedRounds);\r\n\r\n//       const roundsWithHeats = processedRounds.filter(\r\n//         (round) => round.heats.length > 0\r\n//       );\r\n\r\n//       console.log(\"Rounds with Heats:\", roundsWithHeats);\r\n\r\n\r\n//       setRounds(roundsWithHeats);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rounds:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (eventId) {\r\n//       fetchRounds();\r\n//     }\r\n//   }, [eventId]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Rounds</h3>\r\n//       {rounds.length === 0 ? (\r\n//         <p>No rounds with heats available.</p>\r\n//       ) : (\r\n//         rounds.map((round) => (\r\n//           <div key={round.id}>\r\n//             <h4>{round.name}</h4>\r\n//             {round.heats.map((heat) => (\r\n//               <div key={heat.id}>\r\n//                 <h5>{heat.name}</h5>\r\n//                 <ul>\r\n//                   {heat.competitors.map((competitor) => (\r\n//                     <li key={competitor.id}>{competitor.name}</li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RoundsDisplay;\r\n\r\nimport React from \"react\";\r\n\r\nconst RoundsDisplay = ({ rounds = [] }) => {\r\n  return (\r\n    <div>\r\n      <h3>Rounds</h3>\r\n      {rounds.length === 0 ? (\r\n        <p>No rounds with heats available.</p>\r\n      ) : (\r\n        rounds.map((round, roundIndex) => (\r\n          <div key={round.id || roundIndex}> \r\n            <h4>{round.round_name}</h4>\r\n            {(round.heats || []).map((heat, heatIndex) => (\r\n              <div key={heat.id || `${round.id}-${heatIndex}`}> {/* Add unique key for each heat */}\r\n                <h5>{heat.heat_name}</h5>\r\n                <ul>\r\n                  {(heat.competitors || []).map((competitor, competitorIndex) => (\r\n                    <li key={competitor.id || `${heat.id}-${competitorIndex}`}> {/* Add unique key for each competitor */}\r\n                      {competitor.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundsDisplay;\r\n\r\n\r\n\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM,GAAG;AAAG,CAAC,KAAK;EACzC,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdL,MAAM,CAACM,MAAM,KAAK,CAAC,gBAClBR,OAAA;MAAAG,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEtCL,MAAM,CAACO,GAAG,CAAC,CAACC,KAAK,EAAEC,UAAU,kBAC3BX,OAAA;MAAAG,QAAA,gBACEH,OAAA;QAAAG,QAAA,EAAKO,KAAK,CAACE;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC1B,CAACG,KAAK,CAACG,KAAK,IAAI,EAAE,EAAEJ,GAAG,CAAC,CAACK,IAAI,EAAEC,SAAS,kBACvCf,OAAA;QAAAG,QAAA,GAAiD,GAAC,eAChDH,OAAA;UAAAG,QAAA,EAAKW,IAAI,CAACE;QAAS;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBP,OAAA;UAAAG,QAAA,EACG,CAACW,IAAI,CAACG,WAAW,IAAI,EAAE,EAAER,GAAG,CAAC,CAACS,UAAU,EAAEC,eAAe,kBACxDnB,OAAA;YAAAG,QAAA,GAA2D,GAAC,EACzDe,UAAU,CAACE,IAAI;UAAA,GADTF,UAAU,CAACG,EAAE,IAAK,GAAEP,IAAI,CAACO,EAAG,IAAGF,eAAgB,EAAC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAErD,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GARGO,IAAI,CAACO,EAAE,IAAK,GAAEX,KAAK,CAACW,EAAG,IAAGN,SAAU,EAAC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAS1C,CACN,CAAC;IAAA,GAbMG,KAAK,CAACW,EAAE,IAAIV,UAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAc3B,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACe,EAAA,GA3BIrB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}