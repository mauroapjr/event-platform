{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\AddCompetitorForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const categories = [\"Shortboard\", \"Longboard\"];\n// const subCategories = [\"Men\", \"Women\"];\n// const ageCategories = [\n//   \"Open\",\n//   \"Sub12\",\n//   \"Sub14\",\n//   \"Sub18\",\n//   \"Professional\",\n//   \"+40\",\n//   \"+45\",\n//   \"+50\",\n//   \"+60\",\n//   \"+65\",\n//   \"+70\",\n// ];\n\n// const AddCompetitorForm = ({ addCompetitorToHeat, eventId, fetchCompetitors, selectedEventName  }) => {\n//   const [competitorName, setCompetitorName] = useState(\"\");\n//   const [category, setCategory] = useState(categories[0]);\n//   const [subCategory, setSubCategory] = useState(subCategories[0]);\n//   const [boardType, setBoardType] = useState(categories[0]);\n//   const [gender, setGender] = useState(subCategories[0]);\n//   const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\n\n//   const handleAddCompetitor = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\n//         name: competitorName,\n//         event_id: eventId,\n//         category,\n//         sub_category: subCategory,\n//         board_type: boardType,\n//         gender,\n//         age_category: ageCategory,\n//       });\n//       alert(\"Competitor added successfully\");\n//       setCompetitorName(\"\");\n//       setCategory(categories[0]);\n//       setSubCategory(subCategories[0]);\n//       setBoardType(categories[0]);\n//       setGender(subCategories[0]);\n//       setAgeCategory(ageCategories[0]);\n//       fetchCompetitors(eventId, selectedEventName);\n//     } catch (error) {\n//       console.error(\"Error adding competitor:\", error);\n//       alert(\"Error adding competitor\");\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleAddCompetitor} className=\"mb-4\">\n//       <div className=\"form-group\">\n//         <label>Competitor Name:</label>\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           value={competitorName}\n//           onChange={(e) => setCompetitorName(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"form-group mt-3\">\n//         <label>Category:</label>\n//         <select\n//           className=\"form-control\"\n//           value={category}\n//           onChange={(e) => setCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\">Select Category</option>\n//           {categories.map((cat) => (\n//             <option key={cat} value={cat}>\n//               {cat}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"form-group mt-3\">\n//         <label>Sub Category:</label>\n//         <select\n//           className=\"form-control\"\n//           value={subCategory}\n//           onChange={(e) => setSubCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\">Select Sub Category</option>\n//           {subCategories.map((subCat) => (\n//             <option key={subCat} value={subCat}>\n//               {subCat}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"form-group mt-3\">\n//         <label>Board Type:</label>\n//         <select\n//           className=\"form-control\"\n//           value={boardType}\n//           onChange={(e) => setBoardType(e.target.value)}\n//           required\n//         >\n//           <option value=\"\">Select Board Type</option>\n//           {categories.map((type) => (\n//             <option key={type} value={type}>\n//               {type}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"form-group mt-3\">\n//         <label>Gender:</label>\n//         <select\n//           className=\"form-control\"\n//           value={gender}\n//           onChange={(e) => setGender(e.target.value)}\n//           required\n//         >\n//           <option value=\"\">Select Gender</option>\n//           {subCategories.map((g) => (\n//             <option key={g} value={g}>\n//               {g}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div className=\"form-group mt-3\">\n//         <label>Age Category:</label>\n//         <select\n//           className=\"form-control\"\n//           value={ageCategory}\n//           onChange={(e) => setAgeCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\">Select Age Category</option>\n//           {ageCategories.map((cat) => (\n//             <option key={cat} value={cat}>\n//               {cat}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <button type=\"submit\" className=\"btn btn-primary mt-3\">\n//         Add Competitor\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default AddCompetitorForm;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCompetitorForm = ({\n  addCompetitorToHeat\n}) => {\n  _s();\n  const [competitorName, setCompetitorName] = useState(\"\");\n  const handleAddCompetitor = e => {\n    e.preventDefault();\n    if (competitorName.trim() === \"\") {\n      alert(\"Competitor name cannot be empty\");\n      return;\n    }\n    const newCompetitor = {\n      id: Math.random().toString(36).substr(2, 9),\n      // Generate a random id\n      name: competitorName\n    };\n    addCompetitorToHeat(newCompetitor);\n    setCompetitorName(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleAddCompetitor,\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Competitor Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: competitorName,\n        onChange: e => setCompetitorName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mt-3\",\n      children: \"Add Competitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCompetitorForm, \"tFNZ8g8+s0VlL26FIMCr+lS51vU=\");\n_c = AddCompetitorForm;\nexport default AddCompetitorForm;\nvar _c;\n$RefreshReg$(_c, \"AddCompetitorForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddCompetitorForm","addCompetitorToHeat","_s","competitorName","setCompetitorName","handleAddCompetitor","e","preventDefault","trim","alert","newCompetitor","id","Math","random","toString","substr","name","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/AddCompetitorForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const categories = [\"Shortboard\", \"Longboard\"];\r\n// const subCategories = [\"Men\", \"Women\"];\r\n// const ageCategories = [\r\n//   \"Open\",\r\n//   \"Sub12\",\r\n//   \"Sub14\",\r\n//   \"Sub18\",\r\n//   \"Professional\",\r\n//   \"+40\",\r\n//   \"+45\",\r\n//   \"+50\",\r\n//   \"+60\",\r\n//   \"+65\",\r\n//   \"+70\",\r\n// ];\r\n\r\n// const AddCompetitorForm = ({ addCompetitorToHeat, eventId, fetchCompetitors, selectedEventName  }) => {\r\n//   const [competitorName, setCompetitorName] = useState(\"\");\r\n//   const [category, setCategory] = useState(categories[0]);\r\n//   const [subCategory, setSubCategory] = useState(subCategories[0]);\r\n//   const [boardType, setBoardType] = useState(categories[0]);\r\n//   const [gender, setGender] = useState(subCategories[0]);\r\n//   const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\r\n\r\n\r\n//   const handleAddCompetitor = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\r\n//         name: competitorName,\r\n//         event_id: eventId,\r\n//         category,\r\n//         sub_category: subCategory,\r\n//         board_type: boardType,\r\n//         gender,\r\n//         age_category: ageCategory,\r\n//       });\r\n//       alert(\"Competitor added successfully\");\r\n//       setCompetitorName(\"\");\r\n//       setCategory(categories[0]);\r\n//       setSubCategory(subCategories[0]);\r\n//       setBoardType(categories[0]);\r\n//       setGender(subCategories[0]);\r\n//       setAgeCategory(ageCategories[0]);\r\n//       fetchCompetitors(eventId, selectedEventName);\r\n//     } catch (error) {\r\n//       console.error(\"Error adding competitor:\", error);\r\n//       alert(\"Error adding competitor\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n//       <div className=\"form-group\">\r\n//         <label>Competitor Name:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           value={competitorName}\r\n//           onChange={(e) => setCompetitorName(e.target.value)}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div className=\"form-group mt-3\">\r\n//         <label>Category:</label>\r\n//         <select\r\n//           className=\"form-control\"\r\n//           value={category}\r\n//           onChange={(e) => setCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat} value={cat}>\r\n//               {cat}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n//       <div className=\"form-group mt-3\">\r\n//         <label>Sub Category:</label>\r\n//         <select\r\n//           className=\"form-control\"\r\n//           value={subCategory}\r\n//           onChange={(e) => setSubCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select Sub Category</option>\r\n//           {subCategories.map((subCat) => (\r\n//             <option key={subCat} value={subCat}>\r\n//               {subCat}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n//       <div className=\"form-group mt-3\">\r\n//         <label>Board Type:</label>\r\n//         <select\r\n//           className=\"form-control\"\r\n//           value={boardType}\r\n//           onChange={(e) => setBoardType(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select Board Type</option>\r\n//           {categories.map((type) => (\r\n//             <option key={type} value={type}>\r\n//               {type}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n//       <div className=\"form-group mt-3\">\r\n//         <label>Gender:</label>\r\n//         <select\r\n//           className=\"form-control\"\r\n//           value={gender}\r\n//           onChange={(e) => setGender(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select Gender</option>\r\n//           {subCategories.map((g) => (\r\n//             <option key={g} value={g}>\r\n//               {g}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n//       <div className=\"form-group mt-3\">\r\n//         <label>Age Category:</label>\r\n//         <select\r\n//           className=\"form-control\"\r\n//           value={ageCategory}\r\n//           onChange={(e) => setAgeCategory(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select Age Category</option>\r\n//           {ageCategories.map((cat) => (\r\n//             <option key={cat} value={cat}>\r\n//               {cat}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n//       <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//         Add Competitor\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default AddCompetitorForm;\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst AddCompetitorForm = ({ addCompetitorToHeat }) => {\r\n  const [competitorName, setCompetitorName] = useState(\"\");\r\n\r\n  const handleAddCompetitor = (e) => {\r\n    e.preventDefault();\r\n    if (competitorName.trim() === \"\") {\r\n      alert(\"Competitor name cannot be empty\");\r\n      return;\r\n    }\r\n\r\n    const newCompetitor = {\r\n      id: Math.random().toString(36).substr(2, 9), // Generate a random id\r\n      name: competitorName,\r\n    };\r\n\r\n    addCompetitorToHeat(newCompetitor);\r\n    setCompetitorName(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n      <div className=\"form-group\">\r\n        <label>Competitor Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={competitorName}\r\n          onChange={(e) => setCompetitorName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n        Add Competitor\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCompetitorForm;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMQ,mBAAmB,GAAIC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,cAAc,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAChCC,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEA,MAAMC,aAAa,GAAG;MACpBC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAAE;MAC7CC,IAAI,EAAEb;IACR,CAAC;IAEDF,mBAAmB,CAACS,aAAa,CAAC;IAClCN,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,oBACEL,OAAA;IAAMkB,QAAQ,EAAEZ,mBAAoB;IAACa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnDpB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpB,OAAA;QAAAoB,QAAA,EAAO;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/BxB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,cAAc;QACxBO,KAAK,EAAEtB,cAAe;QACtBuB,QAAQ,EAAGpB,CAAC,IAAKF,iBAAiB,CAACE,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QACnDG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAAC;IAEvD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACrB,EAAA,CApCIF,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAsCvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}