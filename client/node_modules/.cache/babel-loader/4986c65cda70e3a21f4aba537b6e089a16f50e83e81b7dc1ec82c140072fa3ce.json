{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\EventList.jsx\";\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { Container, Row, Col, Card, Badge } from \"react-bootstrap\";\n\n// const events = [\n//   { name: \"FESURFING JUNIOR AIR SHOW 2024\", status: \"LIVE\" },\n//   { name: \"Maresias Shootout 2024\", status: \"LIVE\" },\n//   { name: \"2024 Infratores da Divisa Contest\", status: \"LIVE\" },\n// ];\n\n// export default function EventList() {\n//   const [events, setEvents] = useState([]);\n\n//   useEffect (() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Container className=\"my-5\">\n//       <Row>\n//         {events.map((event) => (\n//           <Col key={event.id} sm={12} md={6} lg={4} className=\"mb-4\">\n//             <Card>\n//               <Card.Body>\n//                 <Badge bg=\"success\" className=\"mb-2\">\n//                   LIVE\n//                 </Badge>\n//                 <Card.Title>{event.name}</Card.Title>\n//                 <Card.Text>\n//                   Date: {new Date(event.date).toLocaleDateString()}\n//                   <br />\n//                   Location: {event.location}\n//                 </Card.Text>\n//               </Card.Body>\n//             </Card>\n//           </Col>\n//         ))}\n//       </Row>\n//     </Container>\n//     </>\n//   );\n// }\n\n// import React from 'react';\n\n// const EventsList = ({ events, fetchCompetitors, fetchJudges, handleDeleteEvent }) => {\n//   return (\n//     <div>\n//       <h3>Existing Events</h3>\n//       {events.length === 0 ? (\n//         <p>No events available. Please create an event.</p>\n//       ) : (\n//         <ul className=\"list-group\">\n//           {events.map((event) => (\n//             <li\n//               key={event.id}\n//               className=\"list-group-item d-flex justify-content-between align-items-center\"\n//               style={{ cursor: \"pointer\" }}\n//               onClick={() => {\n//                 fetchCompetitors(event.id, event.name);\n//                 fetchJudges(event.id);\n//               }}\n//             >\n//               {event.name}\n//               <button\n//                 className=\"btn btn-danger\"\n//                 onClick={(e) => {\n//                   e.stopPropagation(); // Prevent triggering the parent click event\n//                   handleDeleteEvent(event.id);\n//                 }}\n//               >\n//                 Delete\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EventsList;\n\nimport React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsList = ({\n  events = [],\n  fetchCompetitors,\n  fetchJudges,\n  handleDeleteEvent\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: events.map(event => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Location: \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            fetchCompetitors(event.id, event.name);\n            fetchJudges(event.id);\n          },\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          className: \"ml-2\",\n          onClick: () => handleDeleteEvent(event.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_c = EventsList;\nexport default EventsList;\nvar _c;\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"names":["React","Card","Button","jsxDEV","_jsxDEV","EventsList","events","fetchCompetitors","fetchJudges","handleDeleteEvent","children","map","event","className","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","Date","date","toLocaleDateString","location","variant","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventList.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Container, Row, Col, Card, Badge } from \"react-bootstrap\";\r\n\r\n// const events = [\r\n//   { name: \"FESURFING JUNIOR AIR SHOW 2024\", status: \"LIVE\" },\r\n//   { name: \"Maresias Shootout 2024\", status: \"LIVE\" },\r\n//   { name: \"2024 Infratores da Divisa Contest\", status: \"LIVE\" },\r\n// ];\r\n\r\n// export default function EventList() {\r\n//   const [events, setEvents] = useState([]);\r\n\r\n//   useEffect (() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Container className=\"my-5\">\r\n//       <Row>\r\n//         {events.map((event) => (\r\n//           <Col key={event.id} sm={12} md={6} lg={4} className=\"mb-4\">\r\n//             <Card>\r\n//               <Card.Body>\r\n//                 <Badge bg=\"success\" className=\"mb-2\">\r\n//                   LIVE\r\n//                 </Badge>\r\n//                 <Card.Title>{event.name}</Card.Title>\r\n//                 <Card.Text>\r\n//                   Date: {new Date(event.date).toLocaleDateString()}\r\n//                   <br />\r\n//                   Location: {event.location}\r\n//                 </Card.Text>\r\n//               </Card.Body>\r\n//             </Card>\r\n//           </Col>\r\n//         ))}\r\n//       </Row>\r\n//     </Container>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// import React from 'react';\r\n\r\n// const EventsList = ({ events, fetchCompetitors, fetchJudges, handleDeleteEvent }) => {\r\n//   return (\r\n//     <div>\r\n//       <h3>Existing Events</h3>\r\n//       {events.length === 0 ? (\r\n//         <p>No events available. Please create an event.</p>\r\n//       ) : (\r\n//         <ul className=\"list-group\">\r\n//           {events.map((event) => (\r\n//             <li\r\n//               key={event.id}\r\n//               className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n//               style={{ cursor: \"pointer\" }}\r\n//               onClick={() => {\r\n//                 fetchCompetitors(event.id, event.name);\r\n//                 fetchJudges(event.id);\r\n//               }}\r\n//             >\r\n//               {event.name}\r\n//               <button\r\n//                 className=\"btn btn-danger\"\r\n//                 onClick={(e) => {\r\n//                   e.stopPropagation(); // Prevent triggering the parent click event\r\n//                   handleDeleteEvent(event.id);\r\n//                 }}\r\n//               >\r\n//                 Delete\r\n//               </button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EventsList;\r\n\r\nimport React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nconst EventsList = ({\r\n  events = [],\r\n  fetchCompetitors,\r\n  fetchJudges,\r\n  handleDeleteEvent,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {events.map((event) => (\r\n        <Card key={event.id} className=\"mb-3\">\r\n          <Card.Body>\r\n            <Card.Title>{event.name}</Card.Title>\r\n            <Card.Text>\r\n              Date: {new Date(event.date).toLocaleDateString()}\r\n            </Card.Text>\r\n            <Card.Text>Location: {event.location}</Card.Text>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                fetchCompetitors(event.id, event.name);\r\n                fetchJudges(event.id);\r\n              }}\r\n            >\r\n              Manage\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"ml-2\"\r\n              onClick={() => handleDeleteEvent(event.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}