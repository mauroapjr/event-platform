{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\RoundsDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundsDisplay = ({\n  eventId\n}) => {\n  _s();\n  const [rounds, setRounds] = useState([]);\n  useEffect(() => {\n    const fetchRounds = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/event-admin/get-rounds/${eventId}`);\n        const roundsData = response.data;\n        console.log(\"Rounds data:\", roundsData);\n        if (!roundsData || !Array.isArray(roundsData)) {\n          throw new Error(\"Invalid rounds data\");\n        }\n        const processedRounds = roundsData.map(round => ({\n          id: round.id,\n          name: round.round_name,\n          category: round.category,\n          sub_category: round.sub_category,\n          board_type: round.board_type,\n          gender: round.gender,\n          age_category: round.age_category,\n          heats: round.heats.map(heat => ({\n            id: heat.id,\n            name: heat.heat_name,\n            competitors: heat.competitors.map(competitor => ({\n              id: competitor.id,\n              name: competitor.name\n            }))\n          }))\n        }));\n        console.log(\"Processed rounds:\", processedRounds);\n        setRounds(processedRounds);\n      } catch (error) {\n        console.error(\"Error fetching rounds:\", error);\n        alert(\"Error fetching rounds\");\n      }\n    };\n    fetchRounds();\n  }, [eventId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Rounds for Event ID: \", eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), rounds.map((round, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Round \", roundIndex + 1, \": \", round.name, \" (\", round.category, \", \", round.sub_category, \", \", round.board_type, \", \", round.gender, \", \", round.age_category, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), round.heats.map((heat, heatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Heat \", heatIndex + 1, \": \", heat.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: heat.competitors.map(competitor => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: competitor.name\n          }, competitor.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, heat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, round.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(RoundsDisplay, \"mcpu5iWVfb9q488nYSdJKBDnof4=\");\n_c = RoundsDisplay;\nexport default RoundsDisplay;\nvar _c;\n$RefreshReg$(_c, \"RoundsDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RoundsDisplay","eventId","_s","rounds","setRounds","fetchRounds","response","get","roundsData","data","console","log","Array","isArray","Error","processedRounds","map","round","id","name","round_name","category","sub_category","board_type","gender","age_category","heats","heat","heat_name","competitors","competitor","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","roundIndex","heatIndex","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/RoundsDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst RoundsDisplay = ({ eventId }) => {\r\n  const [rounds, setRounds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRounds = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n        );\r\n\r\n        const roundsData = response.data;\r\n        console.log(\"Rounds data:\", roundsData);\r\n\r\n        if (!roundsData || !Array.isArray(roundsData)) {\r\n          throw new Error(\"Invalid rounds data\");\r\n        }\r\n\r\n        const processedRounds = roundsData.map((round) => ({\r\n          id: round.id,\r\n          name: round.round_name,\r\n          category: round.category,\r\n          sub_category: round.sub_category,\r\n          board_type: round.board_type,\r\n          gender: round.gender,\r\n          age_category: round.age_category,\r\n          heats: round.heats.map((heat) => ({\r\n            id: heat.id,\r\n            name: heat.heat_name,\r\n            competitors: heat.competitors.map((competitor) => ({\r\n              id: competitor.id,\r\n              name: competitor.name,\r\n            })),\r\n          })),\r\n        }));\r\n\r\n        console.log(\"Processed rounds:\", processedRounds);\r\n        setRounds(processedRounds);\r\n      } catch (error) {\r\n        console.error(\"Error fetching rounds:\", error);\r\n        alert(\"Error fetching rounds\");\r\n      }\r\n    };\r\n\r\n    fetchRounds();\r\n  }, [eventId]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Rounds for Event ID: {eventId}</h2>\r\n      {rounds.map((round, roundIndex) => (\r\n        <div key={round.id} className=\"mb-4\">\r\n          <h4>\r\n            Round {roundIndex + 1}: {round.name} ({round.category}, {round.sub_category}, {round.board_type}, {round.gender}, {round.age_category})\r\n          </h4>\r\n          {round.heats.map((heat, heatIndex) => (\r\n            <div key={heat.id} className=\"mb-2\">\r\n              <h5>Heat {heatIndex + 1}: {heat.name}</h5>\r\n              <ul className=\"list-group\">\r\n                {heat.competitors.map((competitor) => (\r\n                  <li key={competitor.id} className=\"list-group-item\">\r\n                    {competitor.name}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundsDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}