{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\EventList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { Container, Row, Col, Card, Badge } from \"react-bootstrap\";\n\n// const events = [\n//   { name: \"FESURFING JUNIOR AIR SHOW 2024\", status: \"LIVE\" },\n//   { name: \"Maresias Shootout 2024\", status: \"LIVE\" },\n//   { name: \"2024 Infratores da Divisa Contest\", status: \"LIVE\" },\n// ];\n\n// export default function EventList() {\n//   const [events, setEvents] = useState([]);\n\n//   useEffect (() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Container className=\"my-5\">\n//       <Row>\n//         {events.map((event) => (\n//           <Col key={event.id} sm={12} md={6} lg={4} className=\"mb-4\">\n//             <Card>\n//               <Card.Body>\n//                 <Badge bg=\"success\" className=\"mb-2\">\n//                   LIVE\n//                 </Badge>\n//                 <Card.Title>{event.name}</Card.Title>\n//                 <Card.Text>\n//                   Date: {new Date(event.date).toLocaleDateString()}\n//                   <br />\n//                   Location: {event.location}\n//                 </Card.Text>\n//               </Card.Body>\n//             </Card>\n//           </Col>\n//         ))}\n//       </Row>\n//     </Container>\n//     </>\n//   );\n// }\n\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsList = ({\n  events,\n  setEvents,\n  fetchCompetitors,\n  fetchJudges,\n  handleDeleteEvent\n}) => {\n  _s();\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/event-admin/get-events\");\n      setEvents(response.data);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), events.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events available. Please create an event.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item d-flex justify-content-between align-items-center ${event.selected ? \"active\" : \"\"}`,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: () => {\n          fetchCompetitors(event.id, event.name);\n          fetchJudges(event.id);\n        },\n        children: [event.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: e => {\n            e.stopPropagation();\n            handleDeleteEvent(event.id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = EventsList;\nexport default EventsList;\nvar _c;\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","EventsList","events","setEvents","fetchCompetitors","fetchJudges","handleDeleteEvent","_s","fetchEvents","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","event","selected","style","cursor","onClick","id","name","e","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventList.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Container, Row, Col, Card, Badge } from \"react-bootstrap\";\r\n\r\n// const events = [\r\n//   { name: \"FESURFING JUNIOR AIR SHOW 2024\", status: \"LIVE\" },\r\n//   { name: \"Maresias Shootout 2024\", status: \"LIVE\" },\r\n//   { name: \"2024 Infratores da Divisa Contest\", status: \"LIVE\" },\r\n// ];\r\n\r\n// export default function EventList() {\r\n//   const [events, setEvents] = useState([]);\r\n\r\n//   useEffect (() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Container className=\"my-5\">\r\n//       <Row>\r\n//         {events.map((event) => (\r\n//           <Col key={event.id} sm={12} md={6} lg={4} className=\"mb-4\">\r\n//             <Card>\r\n//               <Card.Body>\r\n//                 <Badge bg=\"success\" className=\"mb-2\">\r\n//                   LIVE\r\n//                 </Badge>\r\n//                 <Card.Title>{event.name}</Card.Title>\r\n//                 <Card.Text>\r\n//                   Date: {new Date(event.date).toLocaleDateString()}\r\n//                   <br />\r\n//                   Location: {event.location}\r\n//                 </Card.Text>\r\n//               </Card.Body>\r\n//             </Card>\r\n//           </Col>\r\n//         ))}\r\n//       </Row>\r\n//     </Container>\r\n//     </>\r\n//   );\r\n// }\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EventsList = ({ events, setEvents, fetchCompetitors, fetchJudges, handleDeleteEvent }) => {\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3000/event-admin/get-events\");\r\n      setEvents(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching events:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Existing Events</h3>\r\n      {events.length === 0 ? (\r\n        <p>No events available. Please create an event.</p>\r\n      ) : (\r\n        <ul className=\"list-group\">\r\n          {events.map((event) => (\r\n            <li\r\n              key={event.id}\r\n              className={`list-group-item d-flex justify-content-between align-items-center ${\r\n                event.selected ? \"active\" : \"\"\r\n              }`}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                fetchCompetitors(event.id, event.name);\r\n                fetchJudges(event.id);\r\n              }}\r\n            >\r\n              {event.name}\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  handleDeleteEvent(event.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC,gBAAgB;EAAEC,WAAW;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC9FV,SAAS,CAAC,MAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,8CAA8C,CAAC;MAChFP,SAAS,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBhB,MAAM,CAACiB,MAAM,KAAK,CAAC,gBAClBnB,OAAA;MAAAc,QAAA,EAAG;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEnDlB,OAAA;MAAIoB,SAAS,EAAC,YAAY;MAAAN,QAAA,EACvBZ,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAChBtB,OAAA;QAEEoB,SAAS,EAAG,qEACVE,KAAK,CAACC,QAAQ,GAAG,QAAQ,GAAG,EAC7B,EAAE;QACHC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAE;QAC7BC,OAAO,EAAEA,CAAA,KAAM;UACbtB,gBAAgB,CAACkB,KAAK,CAACK,EAAE,EAAEL,KAAK,CAACM,IAAI,CAAC;UACtCvB,WAAW,CAACiB,KAAK,CAACK,EAAE,CAAC;QACvB,CAAE;QAAAb,QAAA,GAEDQ,KAAK,CAACM,IAAI,eACX5B,OAAA;UACEoB,SAAS,EAAC,gBAAgB;UAC1BM,OAAO,EAAGG,CAAC,IAAK;YACdA,CAAC,CAACC,eAAe,CAAC,CAAC;YACnBxB,iBAAiB,CAACgB,KAAK,CAACK,EAAE,CAAC;UAC7B,CAAE;UAAAb,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAnBJI,KAAK,CAACK,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CAjDIN,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}