{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const EventManagement = () => {\n//   const [events, setEvents] = useState([]);\n//   const [competitors, setCompetitors] = useState([]);\n//   const [eventId, setEventId] = useState(null);\n//   const [name, setName] = useState('');\n//   const [date, setDate] = useState('');\n//   const [location, setLocation] = useState('');\n//   const [competitorName, setCompetitorName] = useState('');\n//   const [createdBy, setCreatedBy] = useState(1);  \n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const fetchCompetitors = async (eventId) => {\n//     try {\n//       const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\n//       setCompetitors(response.data);\n//       setEventId(eventId);\n//     } catch (error) {\n//       console.error('Error fetching competitors:', error);\n//     }\n//   };\n\n//   const handleCreateEvent = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:3000/event-admin/create-event', { name, date, location, created_by: createdBy });\n//       alert('Event created successfully');\n//       setName('');\n//       setDate('');\n//       setLocation('');\n//       fetchEvents();\n//     } catch (error) {\n//       console.error('Error creating event:', error);\n//       alert('Error creating event');\n//     }\n//   };\n\n//   const handleDeleteEvent = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\n//       alert('Event deleted successfully');\n//       fetchEvents();\n//     } catch (error) {\n//       console.error('Error deleting event:', error);\n//       alert('Error deleting event');\n//     }\n//   };\n\n//   const handleAddCompetitor = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:3000/event-admin/add-competitor', { name: competitorName, event_id: eventId });\n//       alert('Competitor added successfully');\n//       setCompetitorName('');\n//       fetchCompetitors(eventId);\n//     } catch (error) {\n//       console.error('Error adding competitor:', error);\n//       alert('Error adding competitor');\n//     }\n//   };\n\n//   const handleDeleteCompetitor = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\n//       alert('Competitor deleted successfully');\n//       fetchCompetitors(eventId);\n//     } catch (error) {\n//       console.error('Error deleting competitor:', error);\n//       alert('Error deleting competitor');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Manage Events</h2>\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\n//         <div className=\"form-group\">\n//           <label>Event Name:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group mt-3\">\n//           <label>Date:</label>\n//           <input\n//             type=\"date\"\n//             className=\"form-control\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group mt-3\">\n//           <label>Location:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Create Event</button>\n//       </form>\n\n//       <h3>Existing Events</h3>\n//       <ul className=\"list-group\">\n//         {events.map((event) => (\n//           <li key={event.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//             <span onClick={() => fetchCompetitors(event.id)}>{event.name}</span>\n//             <button className=\"btn btn-danger\" onClick={() => handleDeleteEvent(event.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {eventId && (\n//         <>\n//           <h3>Manage Competitors</h3>\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\n//             <div className=\"form-group\">\n//               <label>Competitor Name:</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 value={competitorName}\n//                 onChange={(e) => setCompetitorName(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">Add Competitor</button>\n//           </form>\n\n//           <h3>Existing Competitors</h3>\n//           <ul className=\"list-group\">\n//             {competitors.map((competitor) => (\n//               <li key={competitor.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//                 {competitor.name}\n//                 <button className=\"btn btn-danger\" onClick={() => handleDeleteCompetitor(competitor.id)}>Delete</button>\n//               </li>\n//             ))}\n//           </ul>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EventManagement;","map":{"version":3,"names":[],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventManagement.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const EventManagement = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [competitors, setCompetitors] = useState([]);\r\n//   const [eventId, setEventId] = useState(null);\r\n//   const [name, setName] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [location, setLocation] = useState('');\r\n//   const [competitorName, setCompetitorName] = useState('');\r\n//   const [createdBy, setCreatedBy] = useState(1);  \r\n  \r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:3000/event-admin/get-events');\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCompetitors = async (eventId) => {\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\r\n//       setCompetitors(response.data);\r\n//       setEventId(eventId);\r\n//     } catch (error) {\r\n//       console.error('Error fetching competitors:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateEvent = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('http://localhost:3000/event-admin/create-event', { name, date, location, created_by: createdBy });\r\n//       alert('Event created successfully');\r\n//       setName('');\r\n//       setDate('');\r\n//       setLocation('');\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error('Error creating event:', error);\r\n//       alert('Error creating event');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteEvent = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\r\n//       alert('Event deleted successfully');\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error('Error deleting event:', error);\r\n//       alert('Error deleting event');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddCompetitor = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('http://localhost:3000/event-admin/add-competitor', { name: competitorName, event_id: eventId });\r\n//       alert('Competitor added successfully');\r\n//       setCompetitorName('');\r\n//       fetchCompetitors(eventId);\r\n//     } catch (error) {\r\n//       console.error('Error adding competitor:', error);\r\n//       alert('Error adding competitor');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteCompetitor = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\r\n//       alert('Competitor deleted successfully');\r\n//       fetchCompetitors(eventId);\r\n//     } catch (error) {\r\n//       console.error('Error deleting competitor:', error);\r\n//       alert('Error deleting competitor');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2>Manage Events</h2>\r\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n//         <div className=\"form-group\">\r\n//           <label>Event Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             className=\"form-control\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Location:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={location}\r\n//             onChange={(e) => setLocation(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Create Event</button>\r\n//       </form>\r\n\r\n//       <h3>Existing Events</h3>\r\n//       <ul className=\"list-group\">\r\n//         {events.map((event) => (\r\n//           <li key={event.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//             <span onClick={() => fetchCompetitors(event.id)}>{event.name}</span>\r\n//             <button className=\"btn btn-danger\" onClick={() => handleDeleteEvent(event.id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {eventId && (\r\n//         <>\r\n//           <h3>Manage Competitors</h3>\r\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n//             <div className=\"form-group\">\r\n//               <label>Competitor Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 value={competitorName}\r\n//                 onChange={(e) => setCompetitorName(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">Add Competitor</button>\r\n//           </form>\r\n\r\n//           <h3>Existing Competitors</h3>\r\n//           <ul className=\"list-group\">\r\n//             {competitors.map((competitor) => (\r\n//               <li key={competitor.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//                 {competitor.name}\r\n//                 <button className=\"btn btn-danger\" onClick={() => handleDeleteCompetitor(competitor.id)}>Delete</button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EventManagement;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}