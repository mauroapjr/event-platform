{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\RoundsDisplay.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const RoundsDisplay = ({ eventId }) => {\n//   const [rounds, setRounds] = useState([]);\n\n//   const fetchRounds = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//       );\n//       const roundsData = response.data;\n//       console.log(\"Rounds data:\", roundsData);\n\n//       const processedRounds = roundsData.map((round) => ({\n//         id: round.id,\n//         name: round.name, \n//         category: round.category,\n//         sub_category: round.sub_category,\n//         board_type: round.board_type,\n//         gender: round.gender,\n//         age_category: round.age_category,\n//         heats: (round.heats || []).map((heat) => ({\n//           id: heat.id,\n//           name: heat.heat_name,\n//           competitors: (heat.competitors || []).map((competitor) => ({\n//             id: competitor.id,\n//             name: competitor.name,\n//           })),\n//         })),\n//       }));\n\n//       console.log(\"Processed rounds:\", processedRounds);\n\n//       const roundsWithHeats = processedRounds.filter(\n//         (round) => round.heats.length > 0\n//       );\n\n//       setRounds(roundsWithHeats);\n//     } catch (error) {\n//       console.error(\"Error fetching rounds:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (eventId) {\n//       fetchRounds();\n//     }\n//   }, [eventId]);\n\n//   return (\n//     <div>\n//       <h3>Rounds</h3>\n//       {rounds.length === 0 ? (\n//         <p>No rounds with heats available.</p>\n//       ) : (\n//         rounds.map((round) => (\n//           <div key={round.id}>\n//             <h4>{round.name}</h4>\n//             {round.heats.map((heat) => (\n//               <div key={heat.id}>\n//                 <h5>{heat.name}</h5>\n//                 <ul>\n//                   {heat.competitors.map((competitor) => (\n//                     <li key={competitor.id}>{competitor.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ))}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default RoundsDisplay;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const RoundsDisplay = ({ eventId }) => {\n//   const [rounds, setRounds] = useState([]);\n\n//   const fetchRounds = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//       );\n//       const roundsData = response.data;\n//       console.log(\"Rounds data:\", roundsData);\n\n//       const processedRounds = roundsData.map((round) => ({\n//         id: round.id,\n//         name: round.name, \n//         category: round.category,\n//         sub_category: round.sub_category,\n//         board_type: round.board_type,\n//         gender: round.gender,\n//         age_category: round.age_category,\n//         heats: (round.heats || []).map((heat) => ({\n//           id: heat.id,\n//           name: heat.heat.name,\n//           competitors: (heat.competitors || []).map((competitor) => ({\n//             id: competitor.id,\n//             name: competitor.name,\n//           })),\n//         })),\n//       }));\n\n//       console.log(\"Processed rounds:\", processedRounds);\n\n//       const roundsWithHeats = processedRounds.filter(\n//         (round) => round.heats.length > 0\n//       );\n\n//       console.log(\"Rounds with Heats:\", roundsWithHeats);\n\n//       setRounds(roundsWithHeats);\n//     } catch (error) {\n//       console.error(\"Error fetching rounds:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (eventId) {\n//       fetchRounds();\n//     }\n//   }, [eventId]);\n\n//   return (\n//     <div>\n//       <h3>Rounds</h3>\n//       {rounds.length === 0 ? (\n//         <p>No rounds with heats available.</p>\n//       ) : (\n//         rounds.map((round) => (\n//           <div key={round.id}>\n//             <h4>{round.name}</h4>\n//             {round.heats.map((heat) => (\n//               <div key={heat.id}>\n//                 <h5>{heat.name}</h5>\n//                 <ul>\n//                   {heat.competitors.map((competitor) => (\n//                     <li key={competitor.id}>{competitor.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ))}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default RoundsDisplay;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundsDisplay = ({\n  eventId\n}) => {\n  _s();\n  const [rounds, setRounds] = useState([]);\n  const fetchRounds = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-rounds/${eventId}`);\n      const roundsData = response.data;\n      setRounds(roundsData);\n    } catch (error) {\n      console.error(\"Error fetching rounds:\", error);\n    }\n  };\n  useEffect(() => {\n    if (eventId) {\n      fetchRounds();\n    }\n  }, [eventId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rounds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), rounds.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rounds with heats available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this) : rounds.map(round => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: round.round_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), round.heats.map(heat => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: heat.heat_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: heat.competitors.map(competitor => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: competitor.name\n          }, competitor.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, heat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }, this))]\n    }, round.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(RoundsDisplay, \"mcpu5iWVfb9q488nYSdJKBDnof4=\");\n_c = RoundsDisplay;\nexport default RoundsDisplay;\nvar _c;\n$RefreshReg$(_c, \"RoundsDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RoundsDisplay","eventId","_s","rounds","setRounds","fetchRounds","response","get","roundsData","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","round","round_name","heats","heat","heat_name","competitors","competitor","name","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/RoundsDisplay.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const RoundsDisplay = ({ eventId }) => {\r\n//   const [rounds, setRounds] = useState([]);\r\n\r\n//   const fetchRounds = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//       );\r\n//       const roundsData = response.data;\r\n//       console.log(\"Rounds data:\", roundsData);\r\n\r\n//       const processedRounds = roundsData.map((round) => ({\r\n//         id: round.id,\r\n//         name: round.name, \r\n//         category: round.category,\r\n//         sub_category: round.sub_category,\r\n//         board_type: round.board_type,\r\n//         gender: round.gender,\r\n//         age_category: round.age_category,\r\n//         heats: (round.heats || []).map((heat) => ({\r\n//           id: heat.id,\r\n//           name: heat.heat_name,\r\n//           competitors: (heat.competitors || []).map((competitor) => ({\r\n//             id: competitor.id,\r\n//             name: competitor.name,\r\n//           })),\r\n//         })),\r\n//       }));\r\n\r\n//       console.log(\"Processed rounds:\", processedRounds);\r\n\r\n//       const roundsWithHeats = processedRounds.filter(\r\n//         (round) => round.heats.length > 0\r\n//       );\r\n\r\n//       setRounds(roundsWithHeats);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rounds:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (eventId) {\r\n//       fetchRounds();\r\n//     }\r\n//   }, [eventId]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Rounds</h3>\r\n//       {rounds.length === 0 ? (\r\n//         <p>No rounds with heats available.</p>\r\n//       ) : (\r\n//         rounds.map((round) => (\r\n//           <div key={round.id}>\r\n//             <h4>{round.name}</h4>\r\n//             {round.heats.map((heat) => (\r\n//               <div key={heat.id}>\r\n//                 <h5>{heat.name}</h5>\r\n//                 <ul>\r\n//                   {heat.competitors.map((competitor) => (\r\n//                     <li key={competitor.id}>{competitor.name}</li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RoundsDisplay;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const RoundsDisplay = ({ eventId }) => {\r\n//   const [rounds, setRounds] = useState([]);\r\n\r\n//   const fetchRounds = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//       );\r\n//       const roundsData = response.data;\r\n//       console.log(\"Rounds data:\", roundsData);\r\n\r\n//       const processedRounds = roundsData.map((round) => ({\r\n//         id: round.id,\r\n//         name: round.name, \r\n//         category: round.category,\r\n//         sub_category: round.sub_category,\r\n//         board_type: round.board_type,\r\n//         gender: round.gender,\r\n//         age_category: round.age_category,\r\n//         heats: (round.heats || []).map((heat) => ({\r\n//           id: heat.id,\r\n//           name: heat.heat.name,\r\n//           competitors: (heat.competitors || []).map((competitor) => ({\r\n//             id: competitor.id,\r\n//             name: competitor.name,\r\n//           })),\r\n//         })),\r\n//       }));\r\n\r\n//       console.log(\"Processed rounds:\", processedRounds);\r\n\r\n//       const roundsWithHeats = processedRounds.filter(\r\n//         (round) => round.heats.length > 0\r\n//       );\r\n\r\n//       console.log(\"Rounds with Heats:\", roundsWithHeats);\r\n\r\n\r\n//       setRounds(roundsWithHeats);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rounds:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (eventId) {\r\n//       fetchRounds();\r\n//     }\r\n//   }, [eventId]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Rounds</h3>\r\n//       {rounds.length === 0 ? (\r\n//         <p>No rounds with heats available.</p>\r\n//       ) : (\r\n//         rounds.map((round) => (\r\n//           <div key={round.id}>\r\n//             <h4>{round.name}</h4>\r\n//             {round.heats.map((heat) => (\r\n//               <div key={heat.id}>\r\n//                 <h5>{heat.name}</h5>\r\n//                 <ul>\r\n//                   {heat.competitors.map((competitor) => (\r\n//                     <li key={competitor.id}>{competitor.name}</li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RoundsDisplay;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst RoundsDisplay = ({ eventId }) => {\r\n  const [rounds, setRounds] = useState([]);\r\n\r\n  const fetchRounds = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n      );\r\n      const roundsData = response.data;\r\n\r\n      setRounds(roundsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rounds:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventId) {\r\n      fetchRounds();\r\n    }\r\n  }, [eventId]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Rounds</h3>\r\n      {rounds.length === 0 ? (\r\n        <p>No rounds with heats available.</p>\r\n      ) : (\r\n        rounds.map((round) => (\r\n          <div key={round.id}>\r\n            <h4>{round.round_name}</h4>\r\n            {round.heats.map((heat) => (\r\n              <div key={heat.id}>\r\n                <h5>{heat.heat_name}</h5>\r\n                <ul>\r\n                  {heat.competitors.map((competitor) => (\r\n                    <li key={competitor.id}>{competitor.name}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundsDisplay;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,gDAA+CN,OAAQ,EAC1D,CAAC;MACD,MAAMO,UAAU,GAAGF,QAAQ,CAACG,IAAI;MAEhCL,SAAS,CAACI,UAAU,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIK,OAAO,EAAE;MACXI,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdb,MAAM,CAACc,MAAM,KAAK,CAAC,gBAClBlB,OAAA;MAAAa,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEtCb,MAAM,CAACe,GAAG,CAAEC,KAAK,iBACfpB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKO,KAAK,CAACC;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC1BG,KAAK,CAACE,KAAK,CAACH,GAAG,CAAEI,IAAI,iBACpBvB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKU,IAAI,CAACC;QAAS;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBjB,OAAA;UAAAa,QAAA,EACGU,IAAI,CAACE,WAAW,CAACN,GAAG,CAAEO,UAAU,iBAC/B1B,OAAA;YAAAa,QAAA,EAAyBa,UAAU,CAACC;UAAI,GAA/BD,UAAU,CAACE,EAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuB,CAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GANGM,IAAI,CAACK,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACN,CAAC;IAAA,GAXMG,KAAK,CAACQ,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYb,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CA9CIF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}