{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\EventManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categories = [\"Shortboard\", \"Longboard\"];\nconst subCategories = [\"Men\", \"Women\"];\nconst ageCategories = [\"Open\", \"Sub12\", \"Sub14\", \"Sub18\", \"Professional\", \"+40\", \"+45\", \"+50\", \"+60\", \"+65\", \"+70\"];\nconst EventManagement = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [competitors, setCompetitors] = useState([]);\n  const [judges, setJudges] = useState([]);\n  const [rounds, setRounds] = useState([]);\n  const [heats, setHeats] = useState([]);\n  const [eventId, setEventId] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [competitorName, setCompetitorName] = useState(\"\");\n  const [category, setCategory] = useState(categories[0]);\n  const [subCategory, setSubCategory] = useState(subCategories[0]);\n  const [boardType, setBoardType] = useState(categories[0]);\n  const [gender, setGender] = useState(subCategories[0]);\n  const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\n  const [judgeName, setJudgeName] = useState(\"\");\n  const [createdBy, setCreatedBy] = useState(1);\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\n\n  // const [rounds, setRounds] = useState([\n  //   {\n  //     name: '',\n  //     category: '',\n  //     sub_category: '',\n  //     board_type: '',\n  //     gender: '',\n  //     age_category: '',\n  //     heats: [\n  //       {\n  //         name: '',\n  //         competitors: [],\n  //       },\n  //     ],\n  //   },\n  // ]);\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/event-admin/get-events\");\n      setEvents(response.data);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n    }\n  };\n  const fetchCompetitors = async (eventId, eventName) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\n      setCompetitors(response.data);\n      setEventId(eventId);\n      setSelectedEventName(eventName);\n    } catch (error) {\n      console.error(\"Error fetching competitors:\", error);\n    }\n  };\n  const fetchJudges = async eventId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-judges/${eventId}`);\n      setJudges(response.data);\n    } catch (error) {\n      console.error(\"Error fetching judges:\", error);\n    }\n  };\n  const handleCreateEvent = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/create-event\", {\n        name,\n        date,\n        location,\n        created_by: createdBy\n      });\n      alert(\"Event created successfully\");\n      setName(\"\");\n      setDate(\"\");\n      setLocation(\"\");\n      fetchEvents();\n    } catch (error) {\n      console.error(\"Error creating event:\", error);\n      alert(\"Error creating event\");\n    }\n  };\n  const handleDeleteEvent = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\n      alert(\"Event deleted successfully\");\n      fetchEvents();\n    } catch (error) {\n      console.error(\"Error deleting event:\", error);\n      alert(\"Error deleting event\");\n    }\n  };\n  const handleAddCompetitor = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\n        name: competitorName,\n        event_id: eventId,\n        category,\n        sub_category: subCategory,\n        board_type: boardType,\n        gender,\n        age_category: ageCategory\n      });\n      alert(\"Competitor added successfully\");\n      setCompetitorName(\"\");\n      setCategory(categories[0]);\n      setSubCategory(subCategories[0]);\n      setBoardType(categories[0]);\n      setGender(subCategories[0]);\n      setAgeCategory(ageCategories[0]);\n      fetchCompetitors(eventId, selectedEventName);\n    } catch (error) {\n      console.error(\"Error adding competitor:\", error);\n      alert(\"Error adding competitor\");\n    }\n  };\n  const handleDeleteCompetitor = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\n      alert(\"Competitor deleted successfully\");\n      fetchCompetitors(eventId, selectedEventName);\n    } catch (error) {\n      console.error(\"Error deleting competitor:\", error);\n      alert(\"Error deleting competitor\");\n    }\n  };\n  const handleAddJudge = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\n        name: judgeName,\n        event_id: eventId\n      });\n      alert(\"Judge added successfully\");\n      setJudgeName(\"\");\n      fetchJudges(eventId);\n    } catch (error) {\n      console.error(\"Error adding judge:\", error);\n      alert(\"Error adding judge\");\n    }\n  };\n  const handleDeleteJudge = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-judge/${id}`);\n      alert(\"Judge deleted successfully\");\n      fetchJudges(eventId);\n    } catch (error) {\n      console.error(\"Error deleting judge:\", error);\n      alert(\"Error deleting judge\");\n    }\n  };\n\n  // const handleSaveRounds = async () => {\n  //   try {\n  //     await axios.post(\"http://localhost:3000/event-admin/save-rounds\", {\n  //       rounds,\n  //       eventId,\n  //     });\n  //     alert(\"Rounds saved successfully\");\n  //   } catch (error) {\n  //     console.error(\"Error saving rounds:\", error);\n  //     alert(\"Error saving rounds\");\n  //   }\n  // };\n\n  const handleSaveRounds = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/event-admin/save-rounds', {\n        eventId,\n        rounds: rounds.map(round => ({\n          name: round.name,\n          category: round.category,\n          sub_category: round.sub_category,\n          board_type: round.board_type,\n          gender: round.gender,\n          age_category: round.age_category,\n          heats: round.heats.map(heat => ({\n            heat_name: heat.name,\n            competitors: heat.competitors\n          }))\n        }))\n      });\n      alert('Rounds saved successfully');\n    } catch (error) {\n      console.error('Error saving rounds:', error);\n      alert('Error saving rounds');\n    }\n  };\n\n  // const handleFetchRounds = async () => {\n  //   try {\n  //     const response = await axios.get(`http://localhost:3000/event-admin/get-all-rounds/${eventId}`);\n  //     const { rounds, heats } = response.data;\n\n  //     const processedRounds = rounds.map(round => {\n  //       return {\n  //         ...round,\n  //         heats: heats.filter(heat => heat.round_id === round.id).map(heat => ({\n  //           ...heat,\n  //           competitors: heat.competitors.map(h => ({\n  //             id: h.competitor_id,\n  //             name: h.competitor_name\n  //           }))\n  //         }))\n  //       };\n  //     });\n\n  //     setRounds(processedRounds);\n  //   } catch (error) {\n  //     console.error('Error fetching rounds:', error);\n  //     alert('Error fetching rounds');\n  //   }\n  // };\n\n  const handleGeneratePDF = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"rounds.pdf\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      alert(\"Error generating PDF\");\n    }\n  };\n  const handleCreateRounds = () => {\n    const newRounds = [];\n    const competitorsByCategory = {};\n\n    // Organize competitors by their categories and sub-categories\n    competitors.forEach(competitor => {\n      const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\n      if (!competitorsByCategory[key]) {\n        competitorsByCategory[key] = [];\n      }\n      competitorsByCategory[key].push(competitor);\n    });\n\n    // Create rounds and heats for each category\n    Object.keys(competitorsByCategory).forEach(key => {\n      const competitorsList = competitorsByCategory[key];\n      let roundNumber = 1;\n      let heatNumber = 1;\n      for (let i = 0; i < competitorsList.length; i += 4) {\n        const roundName = `Round ${roundNumber} (${key})`;\n        const heatCompetitors = competitorsList.slice(i, i + 4);\n        let round = newRounds.find(r => r.name === roundName);\n        if (!round) {\n          round = {\n            name: roundName,\n            category: competitorsList[0].category,\n            sub_category: competitorsList[0].sub_category,\n            board_type: competitorsList[0].board_type,\n            gender: competitorsList[0].gender,\n            age_category: competitorsList[0].age_category,\n            heats: []\n          };\n          newRounds.push(round);\n        }\n        round.heats.push({\n          id: `heat-${roundNumber}-${heatNumber}`,\n          name: `Heat ${heatNumber}`,\n          competitors: heatCompetitors\n        });\n        heatNumber++;\n        if (heatNumber > 4) {\n          heatNumber = 1;\n          roundNumber++;\n        }\n      }\n    });\n    setRounds(newRounds);\n  };\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const sourceHeatIndex = heats.findIndex(heat => heat.id === result.source.droppableId);\n    const destinationHeatIndex = heats.findIndex(heat => heat.id === result.destination.droppableId);\n    if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\n      return;\n    }\n    const sourceHeat = heats[sourceHeatIndex];\n    const destinationHeat = heats[destinationHeatIndex];\n    const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\n    destinationHeat.competitors.splice(result.destination.index, 0, movedItem);\n    const updatedHeats = heats.map(heat => {\n      if (heat.id === sourceHeat.id) {\n        return sourceHeat;\n      }\n      if (heat.id === destinationHeat.id) {\n        return destinationHeat;\n      }\n      return heat;\n    });\n    setHeats(updatedHeats);\n  };\n\n  //   return (\n  //     <div className=\"container mt-5\">\n  //       <h2>Manage Events</h2>\n  //       <form onSubmit={handleCreateEvent} className=\"mb-4\">\n  //         <div className=\"form-group\">\n  //           <label>Event Name:</label>\n  //           <input\n  //             type=\"text\"\n  //             className=\"form-control\"\n  //             value={name}\n  //             onChange={(e) => setName(e.target.value)}\n  //             required\n  //           />\n  //         </div>\n  //         <div className=\"form-group mt-3\">\n  //           <label>Date:</label>\n  //           <input\n  //             type=\"date\"\n  //             className=\"form-control\"\n  //             value={date}\n  //             onChange={(e) => setDate(e.target.value)}\n  //             required\n  //           />\n  //         </div>\n  //         <div className=\"form-group mt-3\">\n  //           <label>Location:</label>\n  //           <input\n  //             type=\"text\"\n  //             className=\"form-control\"\n  //             value={location}\n  //             onChange={(e) => setLocation(e.target.value)}\n  //             required\n  //           />\n  //         </div>\n  //         <button type=\"submit\" className=\"btn btn-primary mt-3\">\n  //           Create Event\n  //         </button>\n  //       </form>\n\n  //       <h3>Existing Events</h3>\n  //       {events.length === 0 ? (\n  //         <p>No events available. Please create an event.</p>\n  //       ) : (\n  //         <ul className=\"list-group\">\n  //           {events.map((event) => (\n  //             <li\n  //               key={event.id}\n  //               className={`list-group-item d-flex justify-content-between align-items-center ${\n  //                 eventId === event.id ? \"active\" : \"\"\n  //               }`}\n  //               style={{ cursor: \"pointer\" }}\n  //               onClick={() => {\n  //                 fetchCompetitors(event.id, event.name);\n  //                 fetchJudges(event.id);\n  //               }}\n  //             >\n  //               {event.name}\n  //               <button\n  //                 className=\"btn btn-danger\"\n  //                 onClick={() => handleDeleteEvent(event.id)}\n  //               >\n  //                 Delete\n  //               </button>\n  //             </li>\n  //           ))}\n  //         </ul>\n  //       )}\n\n  //       {eventId ? (\n  //         <>\n  //           <h3>Manage Competitors for {selectedEventName}</h3>\n  //           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\n  //             <div className=\"form-group\">\n  //               <label>Competitor Name:</label>\n  //               <input\n  //                 type=\"text\"\n  //                 className=\"form-control\"\n  //                 value={competitorName}\n  //                 onChange={(e) => setCompetitorName(e.target.value)}\n  //                 required\n  //               />\n  //             </div>\n  //             <div className=\"form-group mt-3\">\n  //               <label>Category:</label>\n  //               <select\n  //                 className=\"form-control\"\n  //                 value={category}\n  //                 onChange={(e) => setCategory(e.target.value)}\n  //                 required\n  //               >\n  //                 {categories.map((cat) => (\n  //                   <option key={cat} value={cat}>\n  //                     {cat}\n  //                   </option>\n  //                 ))}\n  //               </select>\n  //             </div>\n  //             <div className=\"form-group mt-3\">\n  //               <label>Sub Category:</label>\n  //               <select\n  //                 className=\"form-control\"\n  //                 value={subCategory}\n  //                 onChange={(e) => setSubCategory(e.target.value)}\n  //                 required\n  //               >\n  //                 {subCategories.map((subCat) => (\n  //                   <option key={subCat} value={subCat}>\n  //                     {subCat}\n  //                   </option>\n  //                 ))}\n  //               </select>\n  //             </div>\n  //             <div className=\"form-group mt-3\">\n  //               <label>Board Type:</label>\n  //               <select\n  //                 className=\"form-control\"\n  //                 value={boardType}\n  //                 onChange={(e) => setBoardType(e.target.value)}\n  //                 required\n  //               >\n  //                 {categories.map((type) => (\n  //                   <option key={type} value={type}>\n  //                     {type}\n  //                   </option>\n  //                 ))}\n  //               </select>\n  //             </div>\n  //             <div className=\"form-group mt-3\">\n  //               <label>Gender:</label>\n  //               <select\n  //                 className=\"form-control\"\n  //                 value={gender}\n  //                 onChange={(e) => setGender(e.target.value)}\n  //                 required\n  //               >\n  //                 {subCategories.map((g) => (\n  //                   <option key={g} value={g}>\n  //                     {g}\n  //                   </option>\n  //                 ))}\n  //               </select>\n  //             </div>\n  //             <div className=\"form-group mt-3\">\n  //               <label>Age Category:</label>\n  //               <select\n  //                 className=\"form-control\"\n  //                 value={ageCategory}\n  //                 onChange={(e) => setAgeCategory(e.target.value)}\n  //                 required\n  //               >\n  //                 {ageCategories.map((cat) => (\n  //                   <option key={cat} value={cat}>\n  //                     {cat}\n  //                   </option>\n  //                 ))}\n  //               </select>\n  //             </div>\n  //             <button type=\"submit\" className=\"btn btn-primary mt-3\">\n  //               Add Competitor\n  //             </button>\n  //           </form>\n\n  //           <h3>Existing Competitors</h3>\n  //           <ul className=\"list-group\">\n  //             {competitors.map((competitor) => (\n  //               <li\n  //                 key={competitor.id}\n  //                 className=\"list-group-item d-flex justify-content-between align-items-center\"\n  //               >\n  //                 {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\n  //                 {competitor.category}, Sub Category: {competitor.sub_category},\n  //                 Board Type: {competitor.board_type}, Gender: {competitor.gender}\n  //                 , Age Category: {competitor.age_category})\n  //                 <button\n  //                   className=\"btn btn-danger\"\n  //                   onClick={() => handleDeleteCompetitor(competitor.id)}\n  //                 >\n  //                   Delete\n  //                 </button>\n  //               </li>\n  //             ))}\n  //           </ul>\n\n  //           <h3>Manage Judges for {selectedEventName}</h3>\n  //           <form onSubmit={handleAddJudge} className=\"mb-4\">\n  //             <div className=\"form-group\">\n  //               <label>Judge Name:</label>\n  //               <input\n  //                 type=\"text\"\n  //                 className=\"form-control\"\n  //                 value={judgeName}\n  //                 onChange={(e) => setJudgeName(e.target.value)}\n  //                 required\n  //               />\n  //             </div>\n  //             <button type=\"submit\" className=\"btn btn-primary mt-3\">\n  //               Add Judge\n  //             </button>\n  //           </form>\n\n  //           <h3>Existing Judges</h3>\n  //           <ul className=\"list-group\">\n  //             {judges.map((judge) => (\n  //               <li\n  //                 key={judge.id}\n  //                 className=\"list-group-item d-flex justify-content-between align-items-center\"\n  //               >\n  //                 {judge.name} (Event: {selectedEventName})\n  //                 <button\n  //                   className=\"btn btn-danger\"\n  //                   onClick={() => handleDeleteJudge(judge.id)}\n  //                 >\n  //                   Delete\n  //                 </button>\n  //               </li>\n  //             ))}\n  //           </ul>\n\n  //           <h3>Rounds</h3>\n  //           <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\n  //             Create Rounds\n  //           </button>\n  //           <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\n  //             Save Rounds\n  //           </button>\n  //           <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\n  //             Show All Rounds\n  //           </button>\n  //           <button\n  //             className=\"btn btn-secondary mt-0\"\n  //             onClick={handleGeneratePDF}\n  //           >\n  //             Generate PDF\n  //           </button>\n\n  //           <DragDropContext onDragEnd={handleDragEnd}>\n  //             {rounds.map((round) => (\n  //               <Droppable droppableId={round.id} key={round.id}>\n  //                 {(provided) => (\n  //                   <div\n  //                     ref={provided.innerRef}\n  //                     {...provided.droppableProps}\n  //                     className=\"mb-4\"\n  //                   >\n  //                     <h4>{round.name}</h4>\n  //                     {heats\n  //                       .filter((heat) => heat.id.startsWith(`heat-${round.id}`))\n  //                       .map((heat, index) => (\n  //                         <div key={heat.id}>\n  //                           <h5>Heat {index + 1}</h5>\n  //                           <Droppable droppableId={heat.id}>\n  //                             {(provided) => (\n  //                               <div\n  //                                 ref={provided.innerRef}\n  //                                 {...provided.droppableProps}\n  //                                 className=\"list-group\"\n  //                               >\n  //                                 {heat.competitors.map((competitor, idx) => (\n  //                                   <Draggable\n  //                                     key={competitor.id}\n  //                                     draggableId={competitor.id.toString()}\n  //                                     index={idx}\n  //                                   >\n  //                                     {(provided) => (\n  //                                       <div\n  //                                         ref={provided.innerRef}\n  //                                         {...provided.draggableProps}\n  //                                         {...provided.dragHandleProps}\n  //                                         className=\"list-group-item\"\n  //                                       >\n  //                                         {competitor.name}\n  //                                       </div>\n  //                                     )}\n  //                                   </Draggable>\n  //                                 ))}\n  //                                 {provided.placeholder}\n  //                               </div>\n  //                             )}\n  //                           </Droppable>\n  //                         </div>\n  //                       ))}\n  //                     {provided.placeholder}\n  //                   </div>\n  //                 )}\n  //               </Droppable>\n  //             ))}\n  //           </DragDropContext>\n  //         </>\n  //       ) : (\n  //         <p className=\"mt-4\">\n  //           Please select an event to manage competitors and judges.\n  //         </p>\n  //       )}\n  //     </div>\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateEvent,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Event Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 5\n    }, this), events.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events available. Please create an event.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item d-flex justify-content-between align-items-center ${eventId === event.id ? \"active\" : \"\"}`,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: () => {\n          fetchCompetitors(event.id, event.name);\n          fetchJudges(event.id);\n        },\n        children: [event.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => handleDeleteEvent(event.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 7\n    }, this), eventId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Manage Competitors for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddCompetitor,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Competitor Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: competitorName,\n            onChange: e => setCompetitorName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 15\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sub Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: subCategory,\n            onChange: e => setSubCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Sub Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 15\n            }, this), subCategories.map(subCat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subCat,\n              children: subCat\n            }, subCat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Board Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: boardType,\n            onChange: e => setBoardType(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Board Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 15\n            }, this), categories.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: gender,\n            onChange: e => setGender(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 15\n            }, this), subCategories.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: g,\n              children: g\n            }, g, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Age Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: ageCategory,\n            onChange: e => setAgeCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Age Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 15\n            }, this), ageCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          children: \"Add Competitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Competitors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: competitors.map(competitor => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [competitor.name, \" (Event: \", selectedEventName, \", Category:\", \" \", competitor.category, \", Sub Category: \", competitor.sub_category, \", Board Type: \", competitor.board_type, \", Gender: \", competitor.gender, \", Age Category: \", competitor.age_category, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteCompetitor(competitor.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this)]\n        }, competitor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Manage Judges for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddJudge,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Judge Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: judgeName,\n            onChange: e => setJudgeName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          children: \"Add Judge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Judges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: judges.map(judge => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [judge.name, \" (Event: \", selectedEventName, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteJudge(judge.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this)]\n        }, judge.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mb-0\",\n        onClick: handleCreateRounds,\n        children: \"Create Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-0\",\n        onClick: handleSaveRounds,\n        children: \"Save Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info mt-0\",\n        onClick: handleFetchRounds,\n        children: \"Show All Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mt-0\",\n        onClick: handleGeneratePDF,\n        children: \"Generate PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: rounds.map(round => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: round.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: round.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 19\n            }, this), heats.filter(heat => heat.id.startsWith(`heat-${round.id}`)).map((heat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Heat \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: heat.id,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"list-group\",\n                  children: [heat.competitors.map((competitor, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: competitor.id.toString(),\n                    index: idx,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"list-group-item\",\n                      children: competitor.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 938,\n                      columnNumber: 37\n                    }, this)\n                  }, competitor.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 932,\n                    columnNumber: 33\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 25\n              }, this)]\n            }, heat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 23\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 17\n          }, this)\n        }, round.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Rounds for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 9\n      }, this), rounds.map((round, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Round \", roundIndex + 1, \" (\", round.category, \", \", round.sub_category, \", \", round.board_type, \", \", round.gender, \", \", round.age_category, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 5\n        }, this), round.heats.map((heat, heatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Heat \", heatIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: heat.competitors.map((competitor, competitorIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: competitor.name\n            }, competitorIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 9\n          }, this)]\n        }, heatIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 7\n        }, this))]\n      }, roundIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 3\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Please select an event to manage competitors and judges.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 670,\n    columnNumber: 3\n  }, this);\n};\n_s(EventManagement, \"oaWb9zM2YV2zTnPGuokIk4z2j74=\");\n_c = EventManagement;\nexport default EventManagement;\nvar _c;\n$RefreshReg$(_c, \"EventManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","categories","subCategories","ageCategories","EventManagement","_s","events","setEvents","competitors","setCompetitors","judges","setJudges","rounds","setRounds","heats","setHeats","eventId","setEventId","name","setName","date","setDate","location","setLocation","competitorName","setCompetitorName","category","setCategory","subCategory","setSubCategory","boardType","setBoardType","gender","setGender","ageCategory","setAgeCategory","judgeName","setJudgeName","createdBy","setCreatedBy","selectedEventName","setSelectedEventName","fetchEvents","response","get","data","error","console","fetchCompetitors","eventName","fetchJudges","handleCreateEvent","e","preventDefault","post","created_by","alert","handleDeleteEvent","id","delete","handleAddCompetitor","event_id","sub_category","board_type","age_category","handleDeleteCompetitor","handleAddJudge","handleDeleteJudge","handleSaveRounds","map","round","heat","heat_name","handleGeneratePDF","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","handleCreateRounds","newRounds","competitorsByCategory","forEach","competitor","key","push","Object","keys","competitorsList","roundNumber","heatNumber","i","length","roundName","heatCompetitors","slice","find","r","handleDragEnd","result","destination","sourceHeatIndex","findIndex","source","droppableId","destinationHeatIndex","sourceHeat","destinationHeat","movedItem","splice","index","updatedHeats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","event","style","cursor","onClick","cat","subCat","g","judge","handleFetchRounds","onDragEnd","provided","ref","innerRef","droppableProps","filter","startsWith","idx","draggableId","toString","draggableProps","dragHandleProps","placeholder","roundIndex","heatIndex","competitorIndex","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst categories = [\"Shortboard\", \"Longboard\"];\r\nconst subCategories = [\"Men\", \"Women\"];\r\nconst ageCategories = [\r\n  \"Open\",\r\n  \"Sub12\",\r\n  \"Sub14\",\r\n  \"Sub18\",\r\n  \"Professional\",\r\n  \"+40\",\r\n  \"+45\",\r\n  \"+50\",\r\n  \"+60\",\r\n  \"+65\",\r\n  \"+70\",\r\n];\r\n\r\n\r\n\r\nconst EventManagement = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [competitors, setCompetitors] = useState([]);\r\n  const [judges, setJudges] = useState([]);\r\n  const [rounds, setRounds] = useState([]);\r\n  const [heats, setHeats] = useState([]);\r\n  const [eventId, setEventId] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [competitorName, setCompetitorName] = useState(\"\");\r\n  const [category, setCategory] = useState(categories[0]);\r\n  const [subCategory, setSubCategory] = useState(subCategories[0]);\r\n  const [boardType, setBoardType] = useState(categories[0]);\r\n  const [gender, setGender] = useState(subCategories[0]);\r\n  const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\r\n  const [judgeName, setJudgeName] = useState(\"\");\r\n  const [createdBy, setCreatedBy] = useState(1);\r\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\r\n\r\n  // const [rounds, setRounds] = useState([\r\n  //   {\r\n  //     name: '',\r\n  //     category: '',\r\n  //     sub_category: '',\r\n  //     board_type: '',\r\n  //     gender: '',\r\n  //     age_category: '',\r\n  //     heats: [\r\n  //       {\r\n  //         name: '',\r\n  //         competitors: [],\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ]);\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:3000/event-admin/get-events\"\r\n      );\r\n      setEvents(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching events:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCompetitors = async (eventId, eventName) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-competitors/${eventId}`\r\n      );\r\n      setCompetitors(response.data);\r\n      setEventId(eventId);\r\n      setSelectedEventName(eventName);\r\n    } catch (error) {\r\n      console.error(\"Error fetching competitors:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchJudges = async (eventId) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-judges/${eventId}`\r\n      );\r\n      setJudges(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching judges:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCreateEvent = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/create-event\", {\r\n        name,\r\n        date,\r\n        location,\r\n        created_by: createdBy,\r\n      });\r\n      alert(\"Event created successfully\");\r\n      setName(\"\");\r\n      setDate(\"\");\r\n      setLocation(\"\");\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(\"Error creating event:\", error);\r\n      alert(\"Error creating event\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-event/${id}`\r\n      );\r\n      alert(\"Event deleted successfully\");\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error);\r\n      alert(\"Error deleting event\");\r\n    }\r\n  };\r\n\r\n  const handleAddCompetitor = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\r\n        name: competitorName,\r\n        event_id: eventId,\r\n        category,\r\n        sub_category: subCategory,\r\n        board_type: boardType,\r\n        gender,\r\n        age_category: ageCategory,\r\n      });\r\n      alert(\"Competitor added successfully\");\r\n      setCompetitorName(\"\");\r\n      setCategory(categories[0]);\r\n      setSubCategory(subCategories[0]);\r\n      setBoardType(categories[0]);\r\n      setGender(subCategories[0]);\r\n      setAgeCategory(ageCategories[0]);\r\n      fetchCompetitors(eventId, selectedEventName);\r\n    } catch (error) {\r\n      console.error(\"Error adding competitor:\", error);\r\n      alert(\"Error adding competitor\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteCompetitor = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-competitor/${id}`\r\n      );\r\n      alert(\"Competitor deleted successfully\");\r\n      fetchCompetitors(eventId, selectedEventName);\r\n    } catch (error) {\r\n      console.error(\"Error deleting competitor:\", error);\r\n      alert(\"Error deleting competitor\");\r\n    }\r\n  };\r\n\r\n  const handleAddJudge = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\r\n        name: judgeName,\r\n        event_id: eventId,\r\n      });\r\n      alert(\"Judge added successfully\");\r\n      setJudgeName(\"\");\r\n      fetchJudges(eventId);\r\n    } catch (error) {\r\n      console.error(\"Error adding judge:\", error);\r\n      alert(\"Error adding judge\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteJudge = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-judge/${id}`\r\n      );\r\n      alert(\"Judge deleted successfully\");\r\n      fetchJudges(eventId);\r\n    } catch (error) {\r\n      console.error(\"Error deleting judge:\", error);\r\n      alert(\"Error deleting judge\");\r\n    }\r\n  };\r\n\r\n  // const handleSaveRounds = async () => {\r\n  //   try {\r\n  //     await axios.post(\"http://localhost:3000/event-admin/save-rounds\", {\r\n  //       rounds,\r\n  //       eventId,\r\n  //     });\r\n  //     alert(\"Rounds saved successfully\");\r\n  //   } catch (error) {\r\n  //     console.error(\"Error saving rounds:\", error);\r\n  //     alert(\"Error saving rounds\");\r\n  //   }\r\n  // };\r\n\r\n  const handleSaveRounds = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/event-admin/save-rounds', {\r\n        eventId,\r\n        rounds: rounds.map(round => ({\r\n          name: round.name,\r\n          category: round.category,\r\n          sub_category: round.sub_category,\r\n          board_type: round.board_type,\r\n          gender: round.gender,\r\n          age_category: round.age_category,\r\n          heats: round.heats.map(heat => ({\r\n            heat_name: heat.name,\r\n            competitors: heat.competitors\r\n          }))\r\n        }))\r\n      });\r\n      alert('Rounds saved successfully');\r\n    } catch (error) {\r\n      console.error('Error saving rounds:', error);\r\n      alert('Error saving rounds');\r\n    }\r\n  };\r\n\r\n  // const handleFetchRounds = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(`http://localhost:3000/event-admin/get-all-rounds/${eventId}`);\r\n  //     const { rounds, heats } = response.data;\r\n  \r\n  //     const processedRounds = rounds.map(round => {\r\n  //       return {\r\n  //         ...round,\r\n  //         heats: heats.filter(heat => heat.round_id === round.id).map(heat => ({\r\n  //           ...heat,\r\n  //           competitors: heat.competitors.map(h => ({\r\n  //             id: h.competitor_id,\r\n  //             name: h.competitor_name\r\n  //           }))\r\n  //         }))\r\n  //       };\r\n  //     });\r\n  \r\n  //     setRounds(processedRounds);\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching rounds:', error);\r\n  //     alert('Error fetching rounds');\r\n  //   }\r\n  // };\r\n  \r\n  \r\n\r\n  const handleGeneratePDF = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`,\r\n        { responseType: \"blob\" }\r\n      );\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", \"rounds.pdf\");\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Error generating PDF:\", error);\r\n      alert(\"Error generating PDF\");\r\n    }\r\n  };\r\n\r\n  const handleCreateRounds = () => {\r\n    const newRounds = [];\r\n    const competitorsByCategory = {};\r\n  \r\n    // Organize competitors by their categories and sub-categories\r\n    competitors.forEach(competitor => {\r\n      const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\r\n      if (!competitorsByCategory[key]) {\r\n        competitorsByCategory[key] = [];\r\n      }\r\n      competitorsByCategory[key].push(competitor);\r\n    });\r\n  \r\n    // Create rounds and heats for each category\r\n    Object.keys(competitorsByCategory).forEach(key => {\r\n      const competitorsList = competitorsByCategory[key];\r\n      let roundNumber = 1;\r\n      let heatNumber = 1;\r\n  \r\n      for (let i = 0; i < competitorsList.length; i += 4) {\r\n        const roundName = `Round ${roundNumber} (${key})`;\r\n        const heatCompetitors = competitorsList.slice(i, i + 4);\r\n  \r\n        let round = newRounds.find(r => r.name === roundName);\r\n        if (!round) {\r\n          round = {\r\n            name: roundName,\r\n            category: competitorsList[0].category,\r\n            sub_category: competitorsList[0].sub_category,\r\n            board_type: competitorsList[0].board_type,\r\n            gender: competitorsList[0].gender,\r\n            age_category: competitorsList[0].age_category,\r\n            heats: [],\r\n          };\r\n          newRounds.push(round);\r\n        }\r\n  \r\n        round.heats.push({\r\n          id: `heat-${roundNumber}-${heatNumber}`,\r\n          name: `Heat ${heatNumber}`,\r\n          competitors: heatCompetitors,\r\n        });\r\n  \r\n        heatNumber++;\r\n        if (heatNumber > 4) {\r\n          heatNumber = 1;\r\n          roundNumber++;\r\n        }\r\n      }\r\n    });\r\n  \r\n    setRounds(newRounds);\r\n  };\r\n\r\n  const handleDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const sourceHeatIndex = heats.findIndex(\r\n      (heat) => heat.id === result.source.droppableId\r\n    );\r\n    const destinationHeatIndex = heats.findIndex(\r\n      (heat) => heat.id === result.destination.droppableId\r\n    );\r\n\r\n    if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    const sourceHeat = heats[sourceHeatIndex];\r\n    const destinationHeat = heats[destinationHeatIndex];\r\n\r\n    const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\r\n    destinationHeat.competitors.splice(result.destination.index, 0, movedItem);\r\n\r\n    const updatedHeats = heats.map((heat) => {\r\n      if (heat.id === sourceHeat.id) {\r\n        return sourceHeat;\r\n      }\r\n      if (heat.id === destinationHeat.id) {\r\n        return destinationHeat;\r\n      }\r\n      return heat;\r\n    });\r\n\r\n    setHeats(updatedHeats);\r\n  };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2>Manage Events</h2>\r\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n//         <div className=\"form-group\">\r\n//           <label>Event Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             className=\"form-control\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Location:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={location}\r\n//             onChange={(e) => setLocation(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//           Create Event\r\n//         </button>\r\n//       </form>\r\n\r\n//       <h3>Existing Events</h3>\r\n//       {events.length === 0 ? (\r\n//         <p>No events available. Please create an event.</p>\r\n//       ) : (\r\n//         <ul className=\"list-group\">\r\n//           {events.map((event) => (\r\n//             <li\r\n//               key={event.id}\r\n//               className={`list-group-item d-flex justify-content-between align-items-center ${\r\n//                 eventId === event.id ? \"active\" : \"\"\r\n//               }`}\r\n//               style={{ cursor: \"pointer\" }}\r\n//               onClick={() => {\r\n//                 fetchCompetitors(event.id, event.name);\r\n//                 fetchJudges(event.id);\r\n//               }}\r\n//             >\r\n//               {event.name}\r\n//               <button\r\n//                 className=\"btn btn-danger\"\r\n//                 onClick={() => handleDeleteEvent(event.id)}\r\n//               >\r\n//                 Delete\r\n//               </button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n\r\n//       {eventId ? (\r\n//         <>\r\n//           <h3>Manage Competitors for {selectedEventName}</h3>\r\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n//             <div className=\"form-group\">\r\n//               <label>Competitor Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 value={competitorName}\r\n//                 onChange={(e) => setCompetitorName(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Category:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={category}\r\n//                 onChange={(e) => setCategory(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 {categories.map((cat) => (\r\n//                   <option key={cat} value={cat}>\r\n//                     {cat}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Sub Category:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={subCategory}\r\n//                 onChange={(e) => setSubCategory(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 {subCategories.map((subCat) => (\r\n//                   <option key={subCat} value={subCat}>\r\n//                     {subCat}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Board Type:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={boardType}\r\n//                 onChange={(e) => setBoardType(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 {categories.map((type) => (\r\n//                   <option key={type} value={type}>\r\n//                     {type}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Gender:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={gender}\r\n//                 onChange={(e) => setGender(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 {subCategories.map((g) => (\r\n//                   <option key={g} value={g}>\r\n//                     {g}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Age Category:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={ageCategory}\r\n//                 onChange={(e) => setAgeCategory(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 {ageCategories.map((cat) => (\r\n//                   <option key={cat} value={cat}>\r\n//                     {cat}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//               Add Competitor\r\n//             </button>\r\n//           </form>\r\n\r\n//           <h3>Existing Competitors</h3>\r\n//           <ul className=\"list-group\">\r\n//             {competitors.map((competitor) => (\r\n//               <li\r\n//                 key={competitor.id}\r\n//                 className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n//               >\r\n//                 {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\r\n//                 {competitor.category}, Sub Category: {competitor.sub_category},\r\n//                 Board Type: {competitor.board_type}, Gender: {competitor.gender}\r\n//                 , Age Category: {competitor.age_category})\r\n//                 <button\r\n//                   className=\"btn btn-danger\"\r\n//                   onClick={() => handleDeleteCompetitor(competitor.id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n\r\n//           <h3>Manage Judges for {selectedEventName}</h3>\r\n//           <form onSubmit={handleAddJudge} className=\"mb-4\">\r\n//             <div className=\"form-group\">\r\n//               <label>Judge Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 value={judgeName}\r\n//                 onChange={(e) => setJudgeName(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//               Add Judge\r\n//             </button>\r\n//           </form>\r\n\r\n//           <h3>Existing Judges</h3>\r\n//           <ul className=\"list-group\">\r\n//             {judges.map((judge) => (\r\n//               <li\r\n//                 key={judge.id}\r\n//                 className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n//               >\r\n//                 {judge.name} (Event: {selectedEventName})\r\n//                 <button\r\n//                   className=\"btn btn-danger\"\r\n//                   onClick={() => handleDeleteJudge(judge.id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n\r\n//           <h3>Rounds</h3>\r\n//           <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\r\n//             Create Rounds\r\n//           </button>\r\n//           <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\r\n//             Save Rounds\r\n//           </button>\r\n//           <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\r\n//             Show All Rounds\r\n//           </button>\r\n//           <button\r\n//             className=\"btn btn-secondary mt-0\"\r\n//             onClick={handleGeneratePDF}\r\n//           >\r\n//             Generate PDF\r\n//           </button>\r\n\r\n//           <DragDropContext onDragEnd={handleDragEnd}>\r\n//             {rounds.map((round) => (\r\n//               <Droppable droppableId={round.id} key={round.id}>\r\n//                 {(provided) => (\r\n//                   <div\r\n//                     ref={provided.innerRef}\r\n//                     {...provided.droppableProps}\r\n//                     className=\"mb-4\"\r\n//                   >\r\n//                     <h4>{round.name}</h4>\r\n//                     {heats\r\n//                       .filter((heat) => heat.id.startsWith(`heat-${round.id}`))\r\n//                       .map((heat, index) => (\r\n//                         <div key={heat.id}>\r\n//                           <h5>Heat {index + 1}</h5>\r\n//                           <Droppable droppableId={heat.id}>\r\n//                             {(provided) => (\r\n//                               <div\r\n//                                 ref={provided.innerRef}\r\n//                                 {...provided.droppableProps}\r\n//                                 className=\"list-group\"\r\n//                               >\r\n//                                 {heat.competitors.map((competitor, idx) => (\r\n//                                   <Draggable\r\n//                                     key={competitor.id}\r\n//                                     draggableId={competitor.id.toString()}\r\n//                                     index={idx}\r\n//                                   >\r\n//                                     {(provided) => (\r\n//                                       <div\r\n//                                         ref={provided.innerRef}\r\n//                                         {...provided.draggableProps}\r\n//                                         {...provided.dragHandleProps}\r\n//                                         className=\"list-group-item\"\r\n//                                       >\r\n//                                         {competitor.name}\r\n//                                       </div>\r\n//                                     )}\r\n//                                   </Draggable>\r\n//                                 ))}\r\n//                                 {provided.placeholder}\r\n//                               </div>\r\n//                             )}\r\n//                           </Droppable>\r\n//                         </div>\r\n//                       ))}\r\n//                     {provided.placeholder}\r\n//                   </div>\r\n//                 )}\r\n//               </Droppable>\r\n//             ))}\r\n//           </DragDropContext>\r\n//         </>\r\n//       ) : (\r\n//         <p className=\"mt-4\">\r\n//           Please select an event to manage competitors and judges.\r\n//         </p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nreturn (\r\n  <div className=\"container mt-5\">\r\n    <h2>Manage Events</h2>\r\n    <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n      <div className=\"form-group\">\r\n        <label>Event Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-3\">\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          className=\"form-control\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-3\">\r\n        <label>Location:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={location}\r\n          onChange={(e) => setLocation(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n        Create Event\r\n      </button>\r\n    </form>\r\n\r\n    <h3>Existing Events</h3>\r\n    {events.length === 0 ? (\r\n      <p>No events available. Please create an event.</p>\r\n    ) : (\r\n      <ul className=\"list-group\">\r\n        {events.map((event) => (\r\n          <li\r\n            key={event.id}\r\n            className={`list-group-item d-flex justify-content-between align-items-center ${\r\n              eventId === event.id ? \"active\" : \"\"\r\n            }`}\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              fetchCompetitors(event.id, event.name);\r\n              fetchJudges(event.id);\r\n            }}\r\n          >\r\n            {event.name}\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => handleDeleteEvent(event.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n\r\n    {eventId ? (\r\n      <>\r\n        <h3>Manage Competitors for {selectedEventName}</h3>\r\n        <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n          <div className=\"form-group\">\r\n            <label>Competitor Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={competitorName}\r\n              onChange={(e) => setCompetitorName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Category:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Category</option>\r\n              {categories.map((cat) => (\r\n                <option key={cat} value={cat}>\r\n                  {cat}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Sub Category:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={subCategory}\r\n              onChange={(e) => setSubCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Sub Category</option>\r\n              {subCategories.map((subCat) => (\r\n                <option key={subCat} value={subCat}>\r\n                  {subCat}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Board Type:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={boardType}\r\n              onChange={(e) => setBoardType(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Board Type</option>\r\n              {categories.map((type) => (\r\n                <option key={type} value={type}>\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Gender:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={gender}\r\n              onChange={(e) => setGender(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Gender</option>\r\n              {subCategories.map((g) => (\r\n                <option key={g} value={g}>\r\n                  {g}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Age Category:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={ageCategory}\r\n              onChange={(e) => setAgeCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Age Category</option>\r\n              {ageCategories.map((cat) => (\r\n                <option key={cat} value={cat}>\r\n                  {cat}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n            Add Competitor\r\n          </button>\r\n        </form>\r\n\r\n        <h3>Existing Competitors</h3>\r\n        <ul className=\"list-group\">\r\n          {competitors.map((competitor) => (\r\n            <li\r\n              key={competitor.id}\r\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n              {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\r\n              {competitor.category}, Sub Category: {competitor.sub_category},\r\n              Board Type: {competitor.board_type}, Gender: {competitor.gender}\r\n              , Age Category: {competitor.age_category})\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDeleteCompetitor(competitor.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <h3>Manage Judges for {selectedEventName}</h3>\r\n        <form onSubmit={handleAddJudge} className=\"mb-4\">\r\n          <div className=\"form-group\">\r\n            <label>Judge Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={judgeName}\r\n              onChange={(e) => setJudgeName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n            Add Judge\r\n          </button>\r\n        </form>\r\n\r\n        <h3>Existing Judges</h3>\r\n        <ul className=\"list-group\">\r\n          {judges.map((judge) => (\r\n            <li\r\n              key={judge.id}\r\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n              {judge.name} (Event: {selectedEventName})\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDeleteJudge(judge.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <h3>Rounds</h3>\r\n        <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\r\n          Create Rounds\r\n        </button>\r\n        <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\r\n          Save Rounds\r\n        </button>\r\n        <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\r\n  Show All Rounds\r\n</button>\r\n        <button\r\n          className=\"btn btn-secondary mt-0\"\r\n          onClick={handleGeneratePDF}\r\n        >\r\n          Generate PDF\r\n        </button>\r\n\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          {rounds.map((round) => (\r\n            <Droppable droppableId={round.id} key={round.id}>\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className=\"mb-4\"\r\n                >\r\n                  <h4>{round.name}</h4>\r\n                  {heats\r\n                    .filter((heat) => heat.id.startsWith(`heat-${round.id}`))\r\n                    .map((heat, index) => (\r\n                      <div key={heat.id}>\r\n                        <h5>Heat {index + 1}</h5>\r\n                        <Droppable droppableId={heat.id}>\r\n                          {(provided) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.droppableProps}\r\n                              className=\"list-group\"\r\n                            >\r\n                              {heat.competitors.map((competitor, idx) => (\r\n                                <Draggable\r\n                                  key={competitor.id}\r\n                                  draggableId={competitor.id.toString()}\r\n                                  index={idx}\r\n                                >\r\n                                  {(provided) => (\r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                      className=\"list-group-item\"\r\n                                    >\r\n                                      {competitor.name}\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              ))}\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          )}\r\n                        </Droppable>\r\n                      </div>\r\n                    ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </DragDropContext>\r\n\r\n        <h3>Rounds for {selectedEventName}</h3>\r\n        {rounds.map((round, roundIndex) => (\r\n  <div key={roundIndex} className=\"mb-4\">\r\n    <h4>Round {roundIndex + 1} ({round.category}, {round.sub_category}, {round.board_type}, {round.gender}, {round.age_category})</h4>\r\n    {round.heats.map((heat, heatIndex) => (\r\n      <div key={heatIndex} className=\"mb-2\">\r\n        <h5>Heat {heatIndex + 1}</h5>\r\n        <ul className=\"list-group\">\r\n          {heat.competitors.map((competitor, competitorIndex) => (\r\n            <li key={competitorIndex} className=\"list-group-item\">\r\n              {competitor.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    ))}\r\n  </div>\r\n))}\r\n\r\n        {/* {rounds.length === 0 ? (\r\n          <p>No rounds available. Please create and save rounds.</p>\r\n        ) : (\r\n          rounds.map((round, roundIndex) => (\r\n            <div key={roundIndex} className=\"mb-4\">\r\n              <h4>Round {roundIndex + 1} ({round.category}, {round.sub_category}, {round.board_type}, {round.gender}, {round.age_category})</h4>\r\n              {round.heats.map((heat, heatIndex) => (\r\n                <div key={heatIndex} className=\"mb-2\">\r\n                  <h5>Heat {heatIndex + 1}</h5>\r\n                  <ul className=\"list-group\">\r\n                    {heat.competitors.map((competitor, competitorIndex) => (\r\n                      <li key={competitorIndex} className=\"list-group-item\">\r\n                        {competitor.name}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))\r\n        )} */}\r\n      </>\r\n    ) : (\r\n      <p className=\"mt-4\">\r\n        Please select an event to manage competitors and judges.\r\n      </p>\r\n    )}\r\n  </div>\r\n);\r\n};\r\n\r\nexport default EventManagement;\r\n"],"mappings":"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CA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE1H,OAAA;IAAK2H,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B5H,OAAA;MAAA4H,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBhI,OAAA;MAAMiI,QAAQ,EAAE5E,iBAAkB;MAACsE,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjD5H,OAAA;QAAK2H,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5H,OAAA;UAAA4H,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BhI,OAAA;UACEkI,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAE/G,IAAK;UACZgH,QAAQ,EAAG9E,CAAC,IAAKjC,OAAO,CAACiC,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhI,OAAA;QAAK2H,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B5H,OAAA;UAAA4H,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBhI,OAAA;UACEkI,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAE7G,IAAK;UACZ8G,QAAQ,EAAG9E,CAAC,IAAK/B,OAAO,CAAC+B,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhI,OAAA;QAAK2H,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B5H,OAAA;UAAA4H,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBhI,OAAA;UACEkI,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAE3G,QAAS;UAChB4G,QAAQ,EAAG9E,CAAC,IAAK7B,WAAW,CAAC6B,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhI,OAAA;QAAQkI,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEPhI,OAAA;MAAA4H,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBxH,MAAM,CAAC+F,MAAM,KAAK,CAAC,gBAClBvG,OAAA;MAAA4H,QAAA,EAAG;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEnDhI,OAAA;MAAI2H,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBpH,MAAM,CAAC+D,GAAG,CAAEgE,KAAK,iBAChBvI,OAAA;QAEE2H,SAAS,EAAG,qEACVzG,OAAO,KAAKqH,KAAK,CAAC3E,EAAE,GAAG,QAAQ,GAAG,EACnC,EAAE;QACH4E,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAE;QAC7BC,OAAO,EAAEA,CAAA,KAAM;UACbxF,gBAAgB,CAACqF,KAAK,CAAC3E,EAAE,EAAE2E,KAAK,CAACnH,IAAI,CAAC;UACtCgC,WAAW,CAACmF,KAAK,CAAC3E,EAAE,CAAC;QACvB,CAAE;QAAAgE,QAAA,GAEDW,KAAK,CAACnH,IAAI,eACXpB,OAAA;UACE2H,SAAS,EAAC,gBAAgB;UAC1Be,OAAO,EAAEA,CAAA,KAAM/E,iBAAiB,CAAC4E,KAAK,CAAC3E,EAAE,CAAE;UAAAgE,QAAA,EAC5C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAhBJO,KAAK,CAAC3E,EAAE;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,EAEA9G,OAAO,gBACNlB,OAAA,CAAAE,SAAA;MAAA0H,QAAA,gBACE5H,OAAA;QAAA4H,QAAA,GAAI,yBAAuB,EAAClF,iBAAiB;MAAA;QAAAmF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDhI,OAAA;QAAMiI,QAAQ,EAAEnE,mBAAoB;QAAC6D,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnD5H,OAAA;UAAK2H,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB5H,OAAA;YAAA4H,QAAA,EAAO;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/BhI,OAAA;YACEkI,IAAI,EAAC,MAAM;YACXP,SAAS,EAAC,cAAc;YACxBQ,KAAK,EAAEzG,cAAe;YACtB0G,QAAQ,EAAG9E,CAAC,IAAK3B,iBAAiB,CAAC2B,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;YACnDG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhI,OAAA;UAAK2H,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B5H,OAAA;YAAA4H,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBhI,OAAA;YACE2H,SAAS,EAAC,cAAc;YACxBQ,KAAK,EAAEvG,QAAS;YAChBwG,QAAQ,EAAG9E,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;YAAAV,QAAA,gBAER5H,OAAA;cAAQmI,KAAK,EAAC,EAAE;cAAAP,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxC7H,UAAU,CAACoE,GAAG,CAAEoE,GAAG,iBAClB3I,OAAA;cAAkBmI,KAAK,EAAEQ,GAAI;cAAAf,QAAA,EAC1Be;YAAG,GADOA,GAAG;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAER,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNhI,OAAA;UAAK2H,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B5H,OAAA;YAAA4H,QAAA,EAAO;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5BhI,OAAA;YACE2H,SAAS,EAAC,cAAc;YACxBQ,KAAK,EAAErG,WAAY;YACnBsG,QAAQ,EAAG9E,CAAC,IAAKvB,cAAc,CAACuB,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;YAChDG,QAAQ;YAAAV,QAAA,gBAER5H,OAAA;cAAQmI,KAAK,EAAC,EAAE;cAAAP,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC5C5H,aAAa,CAACmE,GAAG,CAAEqE,MAAM,iBACxB5I,OAAA;cAAqBmI,KAAK,EAAES,MAAO;cAAAhB,QAAA,EAChCgB;YAAM,GADIA,MAAM;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNhI,OAAA;UAAK2H,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B5H,OAAA;YAAA4H,QAAA,EAAO;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1BhI,OAAA;YACE2H,SAAS,EAAC,cAAc;YACxBQ,KAAK,EAAEnG,SAAU;YACjBoG,QAAQ,EAAG9E,CAAC,IAAKrB,YAAY,CAACqB,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;YAC9CG,QAAQ;YAAAV,QAAA,gBAER5H,OAAA;cAAQmI,KAAK,EAAC,EAAE;cAAAP,QAAA,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC1C7H,UAAU,CAACoE,GAAG,CAAE2D,IAAI,iBACnBlI,OAAA;cAAmBmI,KAAK,EAAED,IAAK;cAAAN,QAAA,EAC5BM;YAAI,GADMA,IAAI;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAET,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNhI,OAAA;UAAK2H,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B5H,OAAA;YAAA4H,QAAA,EAAO;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBhI,OAAA;YACE2H,SAAS,EAAC,cAAc;YACxBQ,KAAK,EAAEjG,MAAO;YACdkG,QAAQ,EAAG9E,CAAC,IAAKnB,SAAS,CAACmB,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;YAC3CG,QAAQ;YAAAV,QAAA,gBAER5H,OAAA;cAAQmI,KAAK,EAAC,EAAE;cAAAP,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtC5H,aAAa,CAACmE,GAAG,CAAEsE,CAAC,iBACnB7I,OAAA;cAAgBmI,KAAK,EAAEU,CAAE;cAAAjB,QAAA,EACtBiB;YAAC,GADSA,CAAC;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNhI,OAAA;UAAK2H,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B5H,OAAA;YAAA4H,QAAA,EAAO;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5BhI,OAAA;YACE2H,SAAS,EAAC,cAAc;YACxBQ,KAAK,EAAE/F,WAAY;YACnBgG,QAAQ,EAAG9E,CAAC,IAAKjB,cAAc,CAACiB,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;YAChDG,QAAQ;YAAAV,QAAA,gBAER5H,OAAA;cAAQmI,KAAK,EAAC,EAAE;cAAAP,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC5C3H,aAAa,CAACkE,GAAG,CAAEoE,GAAG,iBACrB3I,OAAA;cAAkBmI,KAAK,EAAEQ,GAAI;cAAAf,QAAA,EAC1Be;YAAG,GADOA,GAAG;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAER,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNhI,OAAA;UAAQkI,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEPhI,OAAA;QAAA4H,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BhI,OAAA;QAAI2H,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvBlH,WAAW,CAAC6D,GAAG,CAAEuB,UAAU,iBAC1B9F,OAAA;UAEE2H,SAAS,EAAC,mEAAmE;UAAAC,QAAA,GAE5E9B,UAAU,CAAC1E,IAAI,EAAC,WAAS,EAACsB,iBAAiB,EAAC,aAAW,EAAC,GAAG,EAC3DoD,UAAU,CAAClE,QAAQ,EAAC,kBAAgB,EAACkE,UAAU,CAAC9B,YAAY,EAAC,gBAClD,EAAC8B,UAAU,CAAC7B,UAAU,EAAC,YAAU,EAAC6B,UAAU,CAAC5D,MAAM,EAAC,kBAChD,EAAC4D,UAAU,CAAC5B,YAAY,EAAC,GACzC,eAAAlE,OAAA;YACE2H,SAAS,EAAC,gBAAgB;YAC1Be,OAAO,EAAEA,CAAA,KAAMvE,sBAAsB,CAAC2B,UAAU,CAAClC,EAAE,CAAE;YAAAgE,QAAA,EACtD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAZJlC,UAAU,CAAClC,EAAE;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAahB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAELhI,OAAA;QAAA4H,QAAA,GAAI,oBAAkB,EAAClF,iBAAiB;MAAA;QAAAmF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9ChI,OAAA;QAAMiI,QAAQ,EAAE7D,cAAe;QAACuD,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC9C5H,OAAA;UAAK2H,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB5H,OAAA;YAAA4H,QAAA,EAAO;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1BhI,OAAA;YACEkI,IAAI,EAAC,MAAM;YACXP,SAAS,EAAC,cAAc;YACxBQ,KAAK,EAAE7F,SAAU;YACjB8F,QAAQ,EAAG9E,CAAC,IAAKf,YAAY,CAACe,CAAC,CAAC+E,MAAM,CAACF,KAAK,CAAE;YAC9CG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhI,OAAA;UAAQkI,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEPhI,OAAA;QAAA4H,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhI,OAAA;QAAI2H,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvBhH,MAAM,CAAC2D,GAAG,CAAEuE,KAAK,iBAChB9I,OAAA;UAEE2H,SAAS,EAAC,mEAAmE;UAAAC,QAAA,GAE5EkB,KAAK,CAAC1H,IAAI,EAAC,WAAS,EAACsB,iBAAiB,EAAC,GACxC,eAAA1C,OAAA;YACE2H,SAAS,EAAC,gBAAgB;YAC1Be,OAAO,EAAEA,CAAA,KAAMrE,iBAAiB,CAACyE,KAAK,CAAClF,EAAE,CAAE;YAAAgE,QAAA,EAC5C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GATJc,KAAK,CAAClF,EAAE;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAELhI,OAAA;QAAA4H,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfhI,OAAA;QAAQ2H,SAAS,EAAC,sBAAsB;QAACe,OAAO,EAAEhD,kBAAmB;QAAAkC,QAAA,EAAC;MAEtE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThI,OAAA;QAAQ2H,SAAS,EAAC,sBAAsB;QAACe,OAAO,EAAEpE,gBAAiB;QAAAsD,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThI,OAAA;QAAQ2H,SAAS,EAAC,mBAAmB;QAACe,OAAO,EAAEK,iBAAkB;QAAAnB,QAAA,EAAC;MAE1E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACDhI,OAAA;QACE2H,SAAS,EAAC,wBAAwB;QAClCe,OAAO,EAAE/D,iBAAkB;QAAAiD,QAAA,EAC5B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEThI,OAAA,CAACJ,eAAe;QAACoJ,SAAS,EAAEnC,aAAc;QAAAe,QAAA,EACvC9G,MAAM,CAACyD,GAAG,CAAEC,KAAK,iBAChBxE,OAAA,CAACH,SAAS;UAACsH,WAAW,EAAE3C,KAAK,CAACZ,EAAG;UAAAgE,QAAA,EAC7BqB,QAAQ,iBACRjJ,OAAA;YACEkJ,GAAG,EAAED,QAAQ,CAACE,QAAS;YAAA,GACnBF,QAAQ,CAACG,cAAc;YAC3BzB,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAEhB5H,OAAA;cAAA4H,QAAA,EAAKpD,KAAK,CAACpD;YAAI;cAAAyG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACpBhH,KAAK,CACHqI,MAAM,CAAE5E,IAAI,IAAKA,IAAI,CAACb,EAAE,CAAC0F,UAAU,CAAE,QAAO9E,KAAK,CAACZ,EAAG,EAAC,CAAC,CAAC,CACxDW,GAAG,CAAC,CAACE,IAAI,EAAEgD,KAAK,kBACfzH,OAAA;cAAA4H,QAAA,gBACE5H,OAAA;gBAAA4H,QAAA,GAAI,OAAK,EAACH,KAAK,GAAG,CAAC;cAAA;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzBhI,OAAA,CAACH,SAAS;gBAACsH,WAAW,EAAE1C,IAAI,CAACb,EAAG;gBAAAgE,QAAA,EAC5BqB,QAAQ,iBACRjJ,OAAA;kBACEkJ,GAAG,EAAED,QAAQ,CAACE,QAAS;kBAAA,GACnBF,QAAQ,CAACG,cAAc;kBAC3BzB,SAAS,EAAC,YAAY;kBAAAC,QAAA,GAErBnD,IAAI,CAAC/D,WAAW,CAAC6D,GAAG,CAAC,CAACuB,UAAU,EAAEyD,GAAG,kBACpCvJ,OAAA,CAACF,SAAS;oBAER0J,WAAW,EAAE1D,UAAU,CAAClC,EAAE,CAAC6F,QAAQ,CAAC,CAAE;oBACtChC,KAAK,EAAE8B,GAAI;oBAAA3B,QAAA,EAETqB,QAAQ,iBACRjJ,OAAA;sBACEkJ,GAAG,EAAED,QAAQ,CAACE,QAAS;sBAAA,GACnBF,QAAQ,CAACS,cAAc;sBAAA,GACvBT,QAAQ,CAACU,eAAe;sBAC5BhC,SAAS,EAAC,iBAAiB;sBAAAC,QAAA,EAE1B9B,UAAU,CAAC1E;oBAAI;sBAAAyG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACb;kBACN,GAbIlC,UAAU,CAAClC,EAAE;oBAAAiE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAcT,CACZ,CAAC,EACDiB,QAAQ,CAACW,WAAW;gBAAA;kBAAA/B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClB;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ,CAAC;YAAA,GA9BJvD,IAAI,CAACb,EAAE;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA+BZ,CACN,CAAC,EACHiB,QAAQ,CAACW,WAAW;UAAA;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QACN,GA9CoCxD,KAAK,CAACZ,EAAE;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+CpC,CACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACa,CAAC,eAElBhI,OAAA;QAAA4H,QAAA,GAAI,aAAW,EAAClF,iBAAiB;MAAA;QAAAmF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACtClH,MAAM,CAACyD,GAAG,CAAC,CAACC,KAAK,EAAEqF,UAAU,kBACpC7J,OAAA;QAAsB2H,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACpC5H,OAAA;UAAA4H,QAAA,GAAI,QAAM,EAACiC,UAAU,GAAG,CAAC,EAAC,IAAE,EAACrF,KAAK,CAAC5C,QAAQ,EAAC,IAAE,EAAC4C,KAAK,CAACR,YAAY,EAAC,IAAE,EAACQ,KAAK,CAACP,UAAU,EAAC,IAAE,EAACO,KAAK,CAACtC,MAAM,EAAC,IAAE,EAACsC,KAAK,CAACN,YAAY,EAAC,GAAC;QAAA;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjIxD,KAAK,CAACxD,KAAK,CAACuD,GAAG,CAAC,CAACE,IAAI,EAAEqF,SAAS,kBAC/B9J,OAAA;UAAqB2H,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnC5H,OAAA;YAAA4H,QAAA,GAAI,OAAK,EAACkC,SAAS,GAAG,CAAC;UAAA;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7BhI,OAAA;YAAI2H,SAAS,EAAC,YAAY;YAAAC,QAAA,EACvBnD,IAAI,CAAC/D,WAAW,CAAC6D,GAAG,CAAC,CAACuB,UAAU,EAAEiE,eAAe,kBAChD/J,OAAA;cAA0B2H,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAClD9B,UAAU,CAAC1E;YAAI,GADT2I,eAAe;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEpB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GARG8B,SAAS;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASd,CACN,CAAC;MAAA,GAbM6B,UAAU;QAAAhC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcf,CACN,CAAC;IAAA,eAuBM,CAAC,gBAEHhI,OAAA;MAAG2H,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAEpB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAACzH,EAAA,CA19BID,eAAe;AAAA0J,EAAA,GAAf1J,eAAe;AA49BrB,eAAeA,eAAe;AAAC,IAAA0J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}