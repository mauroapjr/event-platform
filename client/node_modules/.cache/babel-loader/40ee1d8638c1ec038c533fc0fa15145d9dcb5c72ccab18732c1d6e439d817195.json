{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\EventManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport EventsList from \"./EventList\";\nimport CompetitorsList from \"./CompetitorList\";\nimport AddCompetitorForm from \"./AddCompetitorForm\";\nimport JudgesList from \"./JudgesList\";\nimport AddJudgeForm from \"./AddJudgeForm\";\nimport GeneratePDFButton from \"./GeneratePDFButton\";\nimport RoundsDisplay from \"./RoundsDisplay\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categories = [\"Shortboard\", \"Longboard\"];\nconst subCategories = [\"Men\", \"Women\"];\nconst ageCategories = [\"Open\", \"Sub12\", \"Sub14\", \"Sub18\", \"Professional\", \"+40\", \"+45\", \"+50\", \"+60\", \"+65\", \"+70\"];\nconst EventManagement = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [competitors, setCompetitors] = useState([]);\n  const [judges, setJudges] = useState([]);\n  const [rounds, setRounds] = useState([]);\n  const [eventId, setEventId] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\n  const [showRounds, setShowRounds] = useState(false);\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/event-admin/get-events\");\n      setEvents(response.data);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n    }\n  };\n  const fetchCompetitors = async (eventId, eventName) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\n      setCompetitors(response.data);\n      setEventId(eventId);\n      setSelectedEventName(eventName);\n    } catch (error) {\n      console.error(\"Error fetching competitors:\", error);\n    }\n  };\n  const fetchJudges = async eventId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-judges/${eventId}`);\n      setJudges(response.data);\n    } catch (error) {\n      console.error(\"Error fetching judges:\", error);\n    }\n  };\n  const handleCreateEvent = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/create-event\", {\n        name,\n        date,\n        location\n      });\n      alert(\"Event created successfully\");\n      setName(\"\");\n      setDate(\"\");\n      setLocation(\"\");\n      fetchEvents();\n    } catch (error) {\n      console.error(\"Error creating event:\", error);\n      alert(\"Error creating event\");\n    }\n  };\n  const handleDeleteEvent = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\n      alert(\"Event deleted successfully\");\n      fetchEvents();\n    } catch (error) {\n      console.error(\"Error deleting event:\", error);\n      alert(\"Error deleting event\");\n    }\n  };\n  const handleDeleteCompetitor = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\n      alert(\"Competitor deleted successfully\");\n      fetchCompetitors(eventId, selectedEventName);\n    } catch (error) {\n      console.error(\"Error deleting competitor:\", error);\n      alert(\"Error deleting competitor\");\n    }\n  };\n  const handleDeleteJudge = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-judge/${id}`);\n      alert(\"Judge deleted successfully\");\n      fetchJudges(eventId);\n    } catch (error) {\n      console.error(\"Error deleting judge:\", error);\n      alert(\"Error deleting judge\");\n    }\n  };\n  const handleSaveRounds = async () => {\n    try {\n      const roundsPayload = rounds.map(round => ({\n        name: round.name,\n        category: round.category,\n        sub_category: round.sub_category,\n        board_type: round.board_type,\n        gender: round.gender,\n        age_category: round.age_category,\n        heats: round.heats.map(heat => ({\n          id: heat.id,\n          heat_name: heat.name,\n          competitors: heat.competitors.map(competitor => ({\n            id: competitor.id,\n            name: competitor.name\n          }))\n        }))\n      }));\n      console.log(\"Rounds payload:\", roundsPayload);\n      await axios.post(\"http://localhost:3000/event-admin/save-rounds\", {\n        eventId,\n        rounds: roundsPayload\n      });\n      alert(\"Rounds saved successfully\");\n      fetchRoundsAfterSave();\n    } catch (error) {\n      console.error(\"Error saving rounds:\", error);\n      alert(\"Error saving rounds\");\n    }\n  };\n  const fetchRoundsAfterSave = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-rounds/${eventId}`);\n      const roundsData = response.data;\n      console.log(\"Fetched rounds data after save:\", roundsData);\n      const processedRounds = roundsData.map(round => {\n        const processedHeats = (round.heats || []).map(heat => {\n          const processedCompetitors = (heat.competitors || []).map(competitor => ({\n            id: competitor.id,\n            name: competitor.name\n          }));\n          return {\n            id: heat.id,\n            name: heat.heat_name,\n            competitors: processedCompetitors\n          };\n        });\n        console.log(\"Processed heats for round:\", processedHeats);\n        return {\n          id: round.id,\n          name: round.round_name,\n          category: round.category,\n          sub_category: round.sub_category,\n          board_type: round.board_type,\n          gender: round.gender,\n          age_category: round.age_category,\n          heats: processedHeats\n        };\n      });\n      console.log(\"Processed rounds after save:\", processedRounds);\n      setRounds(processedRounds);\n    } catch (error) {\n      console.error(\"Error fetching rounds after save:\", error);\n    }\n  };\n  const handleCreateRounds = () => {\n    if (!eventId) {\n      alert(\"Please select an event first.\");\n      return;\n    }\n    const competitorsByCategory = {};\n    competitors.forEach(competitor => {\n      const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\n      if (!competitorsByCategory[key]) {\n        competitorsByCategory[key] = [];\n      }\n      competitorsByCategory[key].push(competitor);\n    });\n    const newRounds = [];\n    Object.keys(competitorsByCategory).forEach(key => {\n      const competitorsList = competitorsByCategory[key];\n      const heats = [];\n      for (let i = 0; i < competitorsList.length; i += 4) {\n        const heatCompetitors = competitorsList.slice(i, i + 4);\n        heats.push({\n          id: `heat-${heats.length + 1}`,\n          name: `Heat ${heats.length + 1}`,\n          competitors: heatCompetitors\n        });\n      }\n      newRounds.push({\n        id: `round-${newRounds.length + 1}`,\n        name: `Round 1 (${key})`,\n        category: competitorsList[0].category,\n        sub_category: competitorsList[0].sub_category,\n        board_type: competitorsList[0].board_type,\n        gender: competitorsList[0].gender,\n        age_category: competitorsList[0].age_category,\n        heats\n      });\n    });\n    setRounds(newRounds);\n    console.log(\"Created rounds:\", newRounds);\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    const sourceRoundIndex = parseInt(source.droppableId.split(\"-\")[1]);\n    const sourceHeatIndex = parseInt(source.droppableId.split(\"-\")[3]);\n    const destRoundIndex = parseInt(destination.droppableId.split(\"-\")[1]);\n    const destHeatIndex = parseInt(destination.droppableId.split(\"-\")[3]);\n    const sourceRound = rounds[sourceRoundIndex];\n    const destRound = rounds[destRoundIndex];\n    const sourceHeat = sourceRound.heats[sourceHeatIndex];\n    const destHeat = destRound.heats[destHeatIndex];\n    const [movedCompetitor] = sourceHeat.competitors.splice(source.index, 1);\n    destHeat.competitors.splice(destination.index, 0, movedCompetitor);\n    const newRounds = [...rounds];\n    newRounds[sourceRoundIndex] = {\n      ...sourceRound,\n      heats: [...sourceRound.heats]\n    };\n    newRounds[destRoundIndex] = {\n      ...destRound,\n      heats: [...destRound.heats]\n    };\n    setRounds(newRounds);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateEvent,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Event Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events,\n      fetchCompetitors: (id, name) => {\n        setCompetitors([]);\n        fetchCompetitors(id, name);\n      },\n      fetchJudges: fetchJudges,\n      handleDeleteEvent: handleDeleteEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), eventId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Manage Competitors for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddCompetitorForm, {\n        eventId: eventId,\n        fetchCompetitors: fetchCompetitors,\n        selectedEventName: selectedEventName,\n        heats: rounds.flatMap(round => round.heats)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CompetitorsList, {\n        competitors: competitors,\n        selectedEventName: selectedEventName,\n        handleDeleteCompetitor: handleDeleteCompetitor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Manage Judges for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddJudgeForm, {\n        eventId: eventId,\n        fetchJudges: fetchJudges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(JudgesList, {\n        judges: judges,\n        selectedEventName: selectedEventName,\n        handleDeleteJudge: handleDeleteJudge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mb-0\",\n        onClick: handleCreateRounds,\n        children: \"Create Round and Heat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-0\",\n        onClick: handleSaveRounds,\n        children: \"Save Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GeneratePDFButton, {\n        eventId: eventId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-info mt-3\",\n        onClick: () => setShowRounds(!showRounds),\n        children: showRounds ? \"Hide Saved Rounds\" : \"View Saved Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), showRounds && /*#__PURE__*/_jsxDEV(RoundsDisplay, {\n        eventId: eventId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: rounds.map((round, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4 mb-3\",\n            children: round.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: round.heats.map((heat, heatIndex) => /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              md: 6,\n              lg: 4,\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: `round-${roundIndex}-heat-${heatIndex}`,\n                children: provided => /*#__PURE__*/_jsxDEV(Card, {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: [\"Heat \", heatIndex + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: [heat.competitors.map((competitor, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: `competitor-${competitor.id}`,\n                        index: idx,\n                        children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          children: competitor.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 39\n                        }, this)\n                      }, competitor.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 35\n                      }, this)), provided.placeholder]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this)\n            }, heatIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this)]\n        }, roundIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Please select an event to manage competitors and judges.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(EventManagement, \"QpMz5h/rPPcVbxZ9TOGfGBgzk6s=\");\n_c = EventManagement;\nexport default EventManagement;\nvar _c;\n$RefreshReg$(_c, \"EventManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Row","Col","Card","Button","DragDropContext","Droppable","Draggable","EventsList","CompetitorsList","AddCompetitorForm","JudgesList","AddJudgeForm","GeneratePDFButton","RoundsDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","categories","subCategories","ageCategories","EventManagement","_s","events","setEvents","competitors","setCompetitors","judges","setJudges","rounds","setRounds","eventId","setEventId","name","setName","date","setDate","location","setLocation","selectedEventName","setSelectedEventName","showRounds","setShowRounds","fetchEvents","response","get","data","error","console","fetchCompetitors","eventName","fetchJudges","handleCreateEvent","e","preventDefault","post","alert","handleDeleteEvent","id","delete","handleDeleteCompetitor","handleDeleteJudge","handleSaveRounds","roundsPayload","map","round","category","sub_category","board_type","gender","age_category","heats","heat","heat_name","competitor","log","fetchRoundsAfterSave","roundsData","processedRounds","processedHeats","processedCompetitors","round_name","handleCreateRounds","competitorsByCategory","forEach","key","push","newRounds","Object","keys","competitorsList","i","length","heatCompetitors","slice","onDragEnd","result","source","destination","sourceRoundIndex","parseInt","droppableId","split","sourceHeatIndex","destRoundIndex","destHeatIndex","sourceRound","destRound","sourceHeat","destHeat","movedCompetitor","splice","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","flatMap","onClick","roundIndex","heatIndex","sm","md","lg","provided","ref","innerRef","droppableProps","Body","Title","idx","draggableId","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport EventsList from \"./EventList\";\r\nimport CompetitorsList from \"./CompetitorList\";\r\nimport AddCompetitorForm from \"./AddCompetitorForm\";\r\nimport JudgesList from \"./JudgesList\";\r\nimport AddJudgeForm from \"./AddJudgeForm\";\r\nimport GeneratePDFButton from \"./GeneratePDFButton\";\r\nimport RoundsDisplay from \"./RoundsDisplay\";\r\n\r\nconst categories = [\"Shortboard\", \"Longboard\"];\r\nconst subCategories = [\"Men\", \"Women\"];\r\nconst ageCategories = [\r\n  \"Open\",\r\n  \"Sub12\",\r\n  \"Sub14\",\r\n  \"Sub18\",\r\n  \"Professional\",\r\n  \"+40\",\r\n  \"+45\",\r\n  \"+50\",\r\n  \"+60\",\r\n  \"+65\",\r\n  \"+70\",\r\n];\r\n\r\nconst EventManagement = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [competitors, setCompetitors] = useState([]);\r\n  const [judges, setJudges] = useState([]);\r\n  const [rounds, setRounds] = useState([]);\r\n  const [eventId, setEventId] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\r\n  const [showRounds, setShowRounds] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:3000/event-admin/get-events\"\r\n      );\r\n      setEvents(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching events:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCompetitors = async (eventId, eventName) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-competitors/${eventId}`\r\n      );\r\n      setCompetitors(response.data);\r\n      setEventId(eventId);\r\n      setSelectedEventName(eventName);\r\n    } catch (error) {\r\n      console.error(\"Error fetching competitors:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchJudges = async (eventId) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-judges/${eventId}`\r\n      );\r\n      setJudges(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching judges:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCreateEvent = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/create-event\", {\r\n        name,\r\n        date,\r\n        location,\r\n      });\r\n      alert(\"Event created successfully\");\r\n      setName(\"\");\r\n      setDate(\"\");\r\n      setLocation(\"\");\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(\"Error creating event:\", error);\r\n      alert(\"Error creating event\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-event/${id}`\r\n      );\r\n      alert(\"Event deleted successfully\");\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error);\r\n      alert(\"Error deleting event\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteCompetitor = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-competitor/${id}`\r\n      );\r\n      alert(\"Competitor deleted successfully\");\r\n      fetchCompetitors(eventId, selectedEventName);\r\n    } catch (error) {\r\n      console.error(\"Error deleting competitor:\", error);\r\n      alert(\"Error deleting competitor\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteJudge = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-judge/${id}`\r\n      );\r\n      alert(\"Judge deleted successfully\");\r\n      fetchJudges(eventId);\r\n    } catch (error) {\r\n      console.error(\"Error deleting judge:\", error);\r\n      alert(\"Error deleting judge\");\r\n    }\r\n  };\r\n\r\n  const handleSaveRounds = async () => {\r\n    try {\r\n      const roundsPayload = rounds.map((round) => ({\r\n        name: round.name,\r\n        category: round.category,\r\n        sub_category: round.sub_category,\r\n        board_type: round.board_type,\r\n        gender: round.gender,\r\n        age_category: round.age_category,\r\n        heats: round.heats.map((heat) => ({\r\n          id: heat.id,\r\n          heat_name: heat.name,\r\n          competitors: heat.competitors.map((competitor) => ({\r\n            id: competitor.id,\r\n            name: competitor.name,\r\n          })),\r\n        })),\r\n      }));\r\n\r\n      console.log(\"Rounds payload:\", roundsPayload);\r\n\r\n      await axios.post(\r\n        \"http://localhost:3000/event-admin/save-rounds\",\r\n        {\r\n          eventId,\r\n          rounds: roundsPayload,\r\n        }\r\n      );\r\n\r\n      alert(\"Rounds saved successfully\");\r\n      fetchRoundsAfterSave();\r\n    } catch (error) {\r\n      console.error(\"Error saving rounds:\", error);\r\n      alert(\"Error saving rounds\");\r\n    }\r\n  };\r\n\r\n  const fetchRoundsAfterSave = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n      );\r\n      const roundsData = response.data;\r\n      console.log(\"Fetched rounds data after save:\", roundsData);\r\n  \r\n      const processedRounds = roundsData.map((round) => {\r\n        const processedHeats = (round.heats || []).map((heat) => {\r\n          const processedCompetitors = (heat.competitors || []).map((competitor) => ({\r\n            id: competitor.id,\r\n            name: competitor.name,\r\n          }));\r\n          return {\r\n            id: heat.id,\r\n            name: heat.heat_name,\r\n            competitors: processedCompetitors,\r\n          };\r\n        });\r\n        console.log(\"Processed heats for round:\", processedHeats);\r\n        return {\r\n          id: round.id,\r\n          name: round.round_name,\r\n          category: round.category,\r\n          sub_category: round.sub_category,\r\n          board_type: round.board_type,\r\n          gender: round.gender,\r\n          age_category: round.age_category,\r\n          heats: processedHeats,\r\n        };\r\n      });\r\n  \r\n      console.log(\"Processed rounds after save:\", processedRounds);\r\n      setRounds(processedRounds);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rounds after save:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleCreateRounds = () => {\r\n    if (!eventId) {\r\n      alert(\"Please select an event first.\");\r\n      return;\r\n    }\r\n\r\n    const competitorsByCategory = {};\r\n\r\n    competitors.forEach((competitor) => {\r\n      const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\r\n      if (!competitorsByCategory[key]) {\r\n        competitorsByCategory[key] = [];\r\n      }\r\n      competitorsByCategory[key].push(competitor);\r\n    });\r\n\r\n    const newRounds = [];\r\n\r\n    Object.keys(competitorsByCategory).forEach((key) => {\r\n      const competitorsList = competitorsByCategory[key];\r\n      const heats = [];\r\n\r\n      for (let i = 0; i < competitorsList.length; i += 4) {\r\n        const heatCompetitors = competitorsList.slice(i, i + 4);\r\n\r\n        heats.push({\r\n          id: `heat-${heats.length + 1}`,\r\n          name: `Heat ${heats.length + 1}`,\r\n          competitors: heatCompetitors,\r\n        });\r\n      }\r\n\r\n      newRounds.push({\r\n        id: `round-${newRounds.length + 1}`,\r\n        name: `Round 1 (${key})`,\r\n        category: competitorsList[0].category,\r\n        sub_category: competitorsList[0].sub_category,\r\n        board_type: competitorsList[0].board_type,\r\n        gender: competitorsList[0].gender,\r\n        age_category: competitorsList[0].age_category,\r\n        heats,\r\n      });\r\n    });\r\n\r\n    setRounds(newRounds);\r\n    console.log(\"Created rounds:\", newRounds);\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    const sourceRoundIndex = parseInt(source.droppableId.split(\"-\")[1]);\r\n    const sourceHeatIndex = parseInt(source.droppableId.split(\"-\")[3]);\r\n    const destRoundIndex = parseInt(destination.droppableId.split(\"-\")[1]);\r\n    const destHeatIndex = parseInt(destination.droppableId.split(\"-\")[3]);\r\n\r\n    const sourceRound = rounds[sourceRoundIndex];\r\n    const destRound = rounds[destRoundIndex];\r\n    const sourceHeat = sourceRound.heats[sourceHeatIndex];\r\n    const destHeat = destRound.heats[destHeatIndex];\r\n\r\n    const [movedCompetitor] = sourceHeat.competitors.splice(source.index, 1);\r\n    destHeat.competitors.splice(destination.index, 0, movedCompetitor);\r\n\r\n    const newRounds = [...rounds];\r\n    newRounds[sourceRoundIndex] = {\r\n      ...sourceRound,\r\n      heats: [...sourceRound.heats],\r\n    };\r\n    newRounds[destRoundIndex] = { ...destRound, heats: [...destRound.heats] };\r\n\r\n    setRounds(newRounds);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2>Manage Events</h2>\r\n      <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n        <div className=\"form-group\">\r\n          <label>Event Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <label>Location:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n          Create Event\r\n        </button>\r\n      </form>\r\n\r\n      <EventsList\r\n        events={events}\r\n        fetchCompetitors={(id, name) => {\r\n          setCompetitors([]);\r\n          fetchCompetitors(id, name);\r\n        }}\r\n        fetchJudges={fetchJudges}\r\n        handleDeleteEvent={handleDeleteEvent}\r\n      />\r\n\r\n      {eventId ? (\r\n        <>\r\n          <h3>Manage Competitors for {selectedEventName}</h3>\r\n          <AddCompetitorForm\r\n            eventId={eventId}\r\n            fetchCompetitors={fetchCompetitors}\r\n            selectedEventName={selectedEventName}\r\n            heats={rounds.flatMap((round) => round.heats)}\r\n          />\r\n\r\n          <CompetitorsList\r\n            competitors={competitors}\r\n            selectedEventName={selectedEventName}\r\n            handleDeleteCompetitor={handleDeleteCompetitor}\r\n          />\r\n\r\n          <h3>Manage Judges for {selectedEventName}</h3>\r\n          <AddJudgeForm eventId={eventId} fetchJudges={fetchJudges} />\r\n\r\n          <JudgesList\r\n            judges={judges}\r\n            selectedEventName={selectedEventName}\r\n            handleDeleteJudge={handleDeleteJudge}\r\n          />\r\n\r\n          <h3>Rounds</h3>\r\n          <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\r\n            Create Round and Heat\r\n          </button>\r\n          <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\r\n            Save Rounds\r\n          </button>\r\n          <GeneratePDFButton eventId={eventId} />\r\n\r\n          <Button\r\n            className=\"btn btn-info mt-3\"\r\n            onClick={() => setShowRounds(!showRounds)}\r\n          >\r\n            {showRounds ? \"Hide Saved Rounds\" : \"View Saved Rounds\"}\r\n          </Button>\r\n\r\n          {showRounds && <RoundsDisplay eventId={eventId} />}\r\n\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n            {rounds.map((round, roundIndex) => (\r\n              <div key={roundIndex}>\r\n                <h4 className=\"mt-4 mb-3\">{round.name}</h4>\r\n                <Row>\r\n                  {round.heats.map((heat, heatIndex) => (\r\n                    <Col key={heatIndex} sm={12} md={6} lg={4} className=\"mb-4\">\r\n                      <Droppable\r\n                        droppableId={`round-${roundIndex}-heat-${heatIndex}`}\r\n                      >\r\n                        {(provided) => (\r\n                          <Card\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                          >\r\n                            <Card.Body>\r\n                              <Card.Title>Heat {heatIndex + 1}</Card.Title>\r\n                              <ul>\r\n                                {heat.competitors.map((competitor, idx) => (\r\n                                  <Draggable\r\n                                    key={competitor.id}\r\n                                    draggableId={`competitor-${competitor.id}`}\r\n                                    index={idx}\r\n                                  >\r\n                                    {(provided) => (\r\n                                      <li\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                      >\r\n                                        {competitor.name}\r\n                                      </li>\r\n                                    )}\r\n                                  </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                              </ul>\r\n                            </Card.Body>\r\n                          </Card>\r\n                        )}\r\n                      </Droppable>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              </div>\r\n            ))}\r\n          </DragDropContext>\r\n        </>\r\n      ) : (\r\n        <p className=\"mt-4\">\r\n          Please select an event to manage competitors and judges.\r\n        </p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventManagement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACnE,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,UAAU,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC;AAC9C,MAAMC,aAAa,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC;AACtC,MAAMC,aAAa,GAAG,CACpB,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,cAAc,EACd,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC6B,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqC,IAAI,EAAEC,OAAO,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACuC,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd8C,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM9C,KAAK,CAAC+C,GAAG,CAC9B,8CACF,CAAC;MACDrB,SAAS,CAACoB,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAAA,CAAOlB,OAAO,EAAEmB,SAAS,KAAK;IACrD,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAM9C,KAAK,CAAC+C,GAAG,CAC7B,qDAAoDd,OAAQ,EAC/D,CAAC;MACDL,cAAc,CAACkB,QAAQ,CAACE,IAAI,CAAC;MAC7Bd,UAAU,CAACD,OAAO,CAAC;MACnBS,oBAAoB,CAACU,SAAS,CAAC;IACjC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAMI,WAAW,GAAG,MAAOpB,OAAO,IAAK;IACrC,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAM9C,KAAK,CAAC+C,GAAG,CAC7B,gDAA+Cd,OAAQ,EAC1D,CAAC;MACDH,SAAS,CAACgB,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMxD,KAAK,CAACyD,IAAI,CAAC,gDAAgD,EAAE;QACjEtB,IAAI;QACJE,IAAI;QACJE;MACF,CAAC,CAAC;MACFmB,KAAK,CAAC,4BAA4B,CAAC;MACnCtB,OAAO,CAAC,EAAE,CAAC;MACXE,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;MACfK,WAAW,CAAC,CAAC;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CS,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACtC,IAAI;MACF,MAAM5D,KAAK,CAAC6D,MAAM,CACf,kDAAiDD,EAAG,EACvD,CAAC;MACDF,KAAK,CAAC,4BAA4B,CAAC;MACnCb,WAAW,CAAC,CAAC;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CS,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,MAAMI,sBAAsB,GAAG,MAAOF,EAAE,IAAK;IAC3C,IAAI;MACF,MAAM5D,KAAK,CAAC6D,MAAM,CACf,uDAAsDD,EAAG,EAC5D,CAAC;MACDF,KAAK,CAAC,iCAAiC,CAAC;MACxCP,gBAAgB,CAAClB,OAAO,EAAEQ,iBAAiB,CAAC;IAC9C,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDS,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAOH,EAAE,IAAK;IACtC,IAAI;MACF,MAAM5D,KAAK,CAAC6D,MAAM,CACf,kDAAiDD,EAAG,EACvD,CAAC;MACDF,KAAK,CAAC,4BAA4B,CAAC;MACnCL,WAAW,CAACpB,OAAO,CAAC;IACtB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CS,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,MAAMM,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,aAAa,GAAGlC,MAAM,CAACmC,GAAG,CAAEC,KAAK,KAAM;QAC3ChC,IAAI,EAAEgC,KAAK,CAAChC,IAAI;QAChBiC,QAAQ,EAAED,KAAK,CAACC,QAAQ;QACxBC,YAAY,EAAEF,KAAK,CAACE,YAAY;QAChCC,UAAU,EAAEH,KAAK,CAACG,UAAU;QAC5BC,MAAM,EAAEJ,KAAK,CAACI,MAAM;QACpBC,YAAY,EAAEL,KAAK,CAACK,YAAY;QAChCC,KAAK,EAAEN,KAAK,CAACM,KAAK,CAACP,GAAG,CAAEQ,IAAI,KAAM;UAChCd,EAAE,EAAEc,IAAI,CAACd,EAAE;UACXe,SAAS,EAAED,IAAI,CAACvC,IAAI;UACpBR,WAAW,EAAE+C,IAAI,CAAC/C,WAAW,CAACuC,GAAG,CAAEU,UAAU,KAAM;YACjDhB,EAAE,EAAEgB,UAAU,CAAChB,EAAE;YACjBzB,IAAI,EAAEyC,UAAU,CAACzC;UACnB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC;MAEHe,OAAO,CAAC2B,GAAG,CAAC,iBAAiB,EAAEZ,aAAa,CAAC;MAE7C,MAAMjE,KAAK,CAACyD,IAAI,CACd,+CAA+C,EAC/C;QACExB,OAAO;QACPF,MAAM,EAAEkC;MACV,CACF,CAAC;MAEDP,KAAK,CAAC,2BAA2B,CAAC;MAClCoB,oBAAoB,CAAC,CAAC;IACxB,CAAC,CAAC,OAAO7B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CS,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMoB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMhC,QAAQ,GAAG,MAAM9C,KAAK,CAAC+C,GAAG,CAC7B,gDAA+Cd,OAAQ,EAC1D,CAAC;MACD,MAAM8C,UAAU,GAAGjC,QAAQ,CAACE,IAAI;MAChCE,OAAO,CAAC2B,GAAG,CAAC,iCAAiC,EAAEE,UAAU,CAAC;MAE1D,MAAMC,eAAe,GAAGD,UAAU,CAACb,GAAG,CAAEC,KAAK,IAAK;QAChD,MAAMc,cAAc,GAAG,CAACd,KAAK,CAACM,KAAK,IAAI,EAAE,EAAEP,GAAG,CAAEQ,IAAI,IAAK;UACvD,MAAMQ,oBAAoB,GAAG,CAACR,IAAI,CAAC/C,WAAW,IAAI,EAAE,EAAEuC,GAAG,CAAEU,UAAU,KAAM;YACzEhB,EAAE,EAAEgB,UAAU,CAAChB,EAAE;YACjBzB,IAAI,EAAEyC,UAAU,CAACzC;UACnB,CAAC,CAAC,CAAC;UACH,OAAO;YACLyB,EAAE,EAAEc,IAAI,CAACd,EAAE;YACXzB,IAAI,EAAEuC,IAAI,CAACC,SAAS;YACpBhD,WAAW,EAAEuD;UACf,CAAC;QACH,CAAC,CAAC;QACFhC,OAAO,CAAC2B,GAAG,CAAC,4BAA4B,EAAEI,cAAc,CAAC;QACzD,OAAO;UACLrB,EAAE,EAAEO,KAAK,CAACP,EAAE;UACZzB,IAAI,EAAEgC,KAAK,CAACgB,UAAU;UACtBf,QAAQ,EAAED,KAAK,CAACC,QAAQ;UACxBC,YAAY,EAAEF,KAAK,CAACE,YAAY;UAChCC,UAAU,EAAEH,KAAK,CAACG,UAAU;UAC5BC,MAAM,EAAEJ,KAAK,CAACI,MAAM;UACpBC,YAAY,EAAEL,KAAK,CAACK,YAAY;UAChCC,KAAK,EAAEQ;QACT,CAAC;MACH,CAAC,CAAC;MAEF/B,OAAO,CAAC2B,GAAG,CAAC,8BAA8B,EAAEG,eAAe,CAAC;MAC5DhD,SAAS,CAACgD,eAAe,CAAC;IAC5B,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAGD,MAAMmC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACnD,OAAO,EAAE;MACZyB,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF;IAEA,MAAM2B,qBAAqB,GAAG,CAAC,CAAC;IAEhC1D,WAAW,CAAC2D,OAAO,CAAEV,UAAU,IAAK;MAClC,MAAMW,GAAG,GAAI,GAAEX,UAAU,CAACR,QAAS,IAAGQ,UAAU,CAACP,YAAa,IAAGO,UAAU,CAACN,UAAW,IAAGM,UAAU,CAACL,MAAO,IAAGK,UAAU,CAACJ,YAAa,EAAC;MACxI,IAAI,CAACa,qBAAqB,CAACE,GAAG,CAAC,EAAE;QAC/BF,qBAAqB,CAACE,GAAG,CAAC,GAAG,EAAE;MACjC;MACAF,qBAAqB,CAACE,GAAG,CAAC,CAACC,IAAI,CAACZ,UAAU,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAMa,SAAS,GAAG,EAAE;IAEpBC,MAAM,CAACC,IAAI,CAACN,qBAAqB,CAAC,CAACC,OAAO,CAAEC,GAAG,IAAK;MAClD,MAAMK,eAAe,GAAGP,qBAAqB,CAACE,GAAG,CAAC;MAClD,MAAMd,KAAK,GAAG,EAAE;MAEhB,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,eAAe,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;QAClD,MAAME,eAAe,GAAGH,eAAe,CAACI,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;QAEvDpB,KAAK,CAACe,IAAI,CAAC;UACT5B,EAAE,EAAG,QAAOa,KAAK,CAACqB,MAAM,GAAG,CAAE,EAAC;UAC9B3D,IAAI,EAAG,QAAOsC,KAAK,CAACqB,MAAM,GAAG,CAAE,EAAC;UAChCnE,WAAW,EAAEoE;QACf,CAAC,CAAC;MACJ;MAEAN,SAAS,CAACD,IAAI,CAAC;QACb5B,EAAE,EAAG,SAAQ6B,SAAS,CAACK,MAAM,GAAG,CAAE,EAAC;QACnC3D,IAAI,EAAG,YAAWoD,GAAI,GAAE;QACxBnB,QAAQ,EAAEwB,eAAe,CAAC,CAAC,CAAC,CAACxB,QAAQ;QACrCC,YAAY,EAAEuB,eAAe,CAAC,CAAC,CAAC,CAACvB,YAAY;QAC7CC,UAAU,EAAEsB,eAAe,CAAC,CAAC,CAAC,CAACtB,UAAU;QACzCC,MAAM,EAAEqB,eAAe,CAAC,CAAC,CAAC,CAACrB,MAAM;QACjCC,YAAY,EAAEoB,eAAe,CAAC,CAAC,CAAC,CAACpB,YAAY;QAC7CC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFzC,SAAS,CAACyD,SAAS,CAAC;IACpBvC,OAAO,CAAC2B,GAAG,CAAC,iBAAiB,EAAEY,SAAS,CAAC;EAC3C,CAAC;EAED,MAAMQ,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IAEtC,IAAI,CAACE,WAAW,EAAE;MAChB;IACF;IAEA,MAAMC,gBAAgB,GAAGC,QAAQ,CAACH,MAAM,CAACI,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,MAAMC,eAAe,GAAGH,QAAQ,CAACH,MAAM,CAACI,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,MAAME,cAAc,GAAGJ,QAAQ,CAACF,WAAW,CAACG,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,MAAMG,aAAa,GAAGL,QAAQ,CAACF,WAAW,CAACG,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAErE,MAAMI,WAAW,GAAG7E,MAAM,CAACsE,gBAAgB,CAAC;IAC5C,MAAMQ,SAAS,GAAG9E,MAAM,CAAC2E,cAAc,CAAC;IACxC,MAAMI,UAAU,GAAGF,WAAW,CAACnC,KAAK,CAACgC,eAAe,CAAC;IACrD,MAAMM,QAAQ,GAAGF,SAAS,CAACpC,KAAK,CAACkC,aAAa,CAAC;IAE/C,MAAM,CAACK,eAAe,CAAC,GAAGF,UAAU,CAACnF,WAAW,CAACsF,MAAM,CAACd,MAAM,CAACe,KAAK,EAAE,CAAC,CAAC;IACxEH,QAAQ,CAACpF,WAAW,CAACsF,MAAM,CAACb,WAAW,CAACc,KAAK,EAAE,CAAC,EAAEF,eAAe,CAAC;IAElE,MAAMvB,SAAS,GAAG,CAAC,GAAG1D,MAAM,CAAC;IAC7B0D,SAAS,CAACY,gBAAgB,CAAC,GAAG;MAC5B,GAAGO,WAAW;MACdnC,KAAK,EAAE,CAAC,GAAGmC,WAAW,CAACnC,KAAK;IAC9B,CAAC;IACDgB,SAAS,CAACiB,cAAc,CAAC,GAAG;MAAE,GAAGG,SAAS;MAAEpC,KAAK,EAAE,CAAC,GAAGoC,SAAS,CAACpC,KAAK;IAAE,CAAC;IAEzEzC,SAAS,CAACyD,SAAS,CAAC;EACtB,CAAC;EAED,oBACExE,OAAA,CAAChB,SAAS;IAACkH,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzBnG,OAAA;MAAAmG,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBvG,OAAA;MAAMwG,QAAQ,EAAEnE,iBAAkB;MAAC6D,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjDnG,OAAA;QAAKkG,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBnG,OAAA;UAAAmG,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BvG,OAAA;UACEyG,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAExF,IAAK;UACZyF,QAAQ,EAAGrE,CAAC,IAAKnB,OAAO,CAACmB,CAAC,CAACsE,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvG,OAAA;QAAKkG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BnG,OAAA;UAAAmG,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBvG,OAAA;UACEyG,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAEtF,IAAK;UACZuF,QAAQ,EAAGrE,CAAC,IAAKjB,OAAO,CAACiB,CAAC,CAACsE,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvG,OAAA;QAAKkG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BnG,OAAA;UAAAmG,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBvG,OAAA;UACEyG,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,cAAc;UACxBQ,KAAK,EAAEpF,QAAS;UAChBqF,QAAQ,EAAGrE,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACsE,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvG,OAAA;QAAQyG,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEPvG,OAAA,CAACR,UAAU;MACTgB,MAAM,EAAEA,MAAO;MACf0B,gBAAgB,EAAEA,CAACS,EAAE,EAAEzB,IAAI,KAAK;QAC9BP,cAAc,CAAC,EAAE,CAAC;QAClBuB,gBAAgB,CAACS,EAAE,EAAEzB,IAAI,CAAC;MAC5B,CAAE;MACFkB,WAAW,EAAEA,WAAY;MACzBM,iBAAiB,EAAEA;IAAkB;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EAEDvF,OAAO,gBACNhB,OAAA,CAAAE,SAAA;MAAAiG,QAAA,gBACEnG,OAAA;QAAAmG,QAAA,GAAI,yBAAuB,EAAC3E,iBAAiB;MAAA;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDvG,OAAA,CAACN,iBAAiB;QAChBsB,OAAO,EAAEA,OAAQ;QACjBkB,gBAAgB,EAAEA,gBAAiB;QACnCV,iBAAiB,EAAEA,iBAAkB;QACrCgC,KAAK,EAAE1C,MAAM,CAACgG,OAAO,CAAE5D,KAAK,IAAKA,KAAK,CAACM,KAAK;MAAE;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eAEFvG,OAAA,CAACP,eAAe;QACdiB,WAAW,EAAEA,WAAY;QACzBc,iBAAiB,EAAEA,iBAAkB;QACrCqB,sBAAsB,EAAEA;MAAuB;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eAEFvG,OAAA;QAAAmG,QAAA,GAAI,oBAAkB,EAAC3E,iBAAiB;MAAA;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CvG,OAAA,CAACJ,YAAY;QAACoB,OAAO,EAAEA,OAAQ;QAACoB,WAAW,EAAEA;MAAY;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE5DvG,OAAA,CAACL,UAAU;QACTiB,MAAM,EAAEA,MAAO;QACfY,iBAAiB,EAAEA,iBAAkB;QACrCsB,iBAAiB,EAAEA;MAAkB;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAEFvG,OAAA;QAAAmG,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfvG,OAAA;QAAQkG,SAAS,EAAC,sBAAsB;QAACa,OAAO,EAAE5C,kBAAmB;QAAAgC,QAAA,EAAC;MAEtE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTvG,OAAA;QAAQkG,SAAS,EAAC,sBAAsB;QAACa,OAAO,EAAEhE,gBAAiB;QAAAoD,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTvG,OAAA,CAACH,iBAAiB;QAACmB,OAAO,EAAEA;MAAQ;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEvCvG,OAAA,CAACZ,MAAM;QACL8G,SAAS,EAAC,mBAAmB;QAC7Ba,OAAO,EAAEA,CAAA,KAAMpF,aAAa,CAAC,CAACD,UAAU,CAAE;QAAAyE,QAAA,EAEzCzE,UAAU,GAAG,mBAAmB,GAAG;MAAmB;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,EAER7E,UAAU,iBAAI1B,OAAA,CAACF,aAAa;QAACkB,OAAO,EAAEA;MAAQ;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElDvG,OAAA,CAACX,eAAe;QAAC2F,SAAS,EAAEA,SAAU;QAAAmB,QAAA,EACnCrF,MAAM,CAACmC,GAAG,CAAC,CAACC,KAAK,EAAE8D,UAAU,kBAC5BhH,OAAA;UAAAmG,QAAA,gBACEnG,OAAA;YAAIkG,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEjD,KAAK,CAAChC;UAAI;YAAAkF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3CvG,OAAA,CAACf,GAAG;YAAAkH,QAAA,EACDjD,KAAK,CAACM,KAAK,CAACP,GAAG,CAAC,CAACQ,IAAI,EAAEwD,SAAS,kBAC/BjH,OAAA,CAACd,GAAG;cAAiBgI,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAACC,EAAE,EAAE,CAAE;cAAClB,SAAS,EAAC,MAAM;cAAAC,QAAA,eACzDnG,OAAA,CAACV,SAAS;gBACRgG,WAAW,EAAG,SAAQ0B,UAAW,SAAQC,SAAU,EAAE;gBAAAd,QAAA,EAEnDkB,QAAQ,iBACRrH,OAAA,CAACb,IAAI;kBACHmI,GAAG,EAAED,QAAQ,CAACE,QAAS;kBAAA,GACnBF,QAAQ,CAACG,cAAc;kBAAArB,QAAA,eAE3BnG,OAAA,CAACb,IAAI,CAACsI,IAAI;oBAAAtB,QAAA,gBACRnG,OAAA,CAACb,IAAI,CAACuI,KAAK;sBAAAvB,QAAA,GAAC,OAAK,EAACc,SAAS,GAAG,CAAC;oBAAA;sBAAAb,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAa,CAAC,eAC7CvG,OAAA;sBAAAmG,QAAA,GACG1C,IAAI,CAAC/C,WAAW,CAACuC,GAAG,CAAC,CAACU,UAAU,EAAEgE,GAAG,kBACpC3H,OAAA,CAACT,SAAS;wBAERqI,WAAW,EAAG,cAAajE,UAAU,CAAChB,EAAG,EAAE;wBAC3CsD,KAAK,EAAE0B,GAAI;wBAAAxB,QAAA,EAETkB,QAAQ,iBACRrH,OAAA;0BACEsH,GAAG,EAAED,QAAQ,CAACE,QAAS;0BAAA,GACnBF,QAAQ,CAACQ,cAAc;0BAAA,GACvBR,QAAQ,CAACS,eAAe;0BAAA3B,QAAA,EAE3BxC,UAAU,CAACzC;wBAAI;0BAAAkF,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACd;sBACL,GAZI5C,UAAU,CAAChB,EAAE;wBAAAyD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAaT,CACZ,CAAC,EACDc,QAAQ,CAACU,WAAW;oBAAA;sBAAA3B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnB,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR;cACP;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC,GAlCJU,SAAS;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmCd,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAzCES,UAAU;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0Cf,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACa,CAAC;IAAA,eAClB,CAAC,gBAEHvG,OAAA;MAAGkG,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAEpB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAChG,EAAA,CA5ZID,eAAe;AAAA0H,EAAA,GAAf1H,eAAe;AA8ZrB,eAAeA,eAAe;AAAC,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}