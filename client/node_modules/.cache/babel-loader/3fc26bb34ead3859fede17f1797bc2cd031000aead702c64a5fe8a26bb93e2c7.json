{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\EventManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categories = [\"Shortboard\", \"Longboard\"];\nconst subCategories = [\"Men\", \"Women\"];\nconst ageCategories = [\"Open\", \"Sub12\", \"Sub14\", \"Sub18\", \"Professional\", \"+40\", \"+45\", \"+50\", \"+60\", \"+65\", \"+70\"];\nconst EventManagement = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [competitors, setCompetitors] = useState([]);\n  const [judges, setJudges] = useState([]);\n  const [rounds, setRounds] = useState([]);\n  const [heats, setHeats] = useState([]);\n  const [eventId, setEventId] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [competitorName, setCompetitorName] = useState(\"\");\n  const [category, setCategory] = useState(categories[0]);\n  const [subCategory, setSubCategory] = useState(subCategories[0]);\n  const [boardType, setBoardType] = useState(categories[0]);\n  const [gender, setGender] = useState(subCategories[0]);\n  const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\n  const [judgeName, setJudgeName] = useState(\"\");\n  const [createdBy, setCreatedBy] = useState(1);\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/event-admin/get-events\");\n      setEvents(response.data);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n    }\n  };\n  const fetchCompetitors = async (eventId, eventName) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\n      setCompetitors(response.data);\n      setEventId(eventId);\n      setSelectedEventName(eventName);\n    } catch (error) {\n      console.error(\"Error fetching competitors:\", error);\n    }\n  };\n  const fetchJudges = async eventId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-judges/${eventId}`);\n      setJudges(response.data);\n    } catch (error) {\n      console.error(\"Error fetching judges:\", error);\n    }\n  };\n  const handleCreateEvent = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/create-event\", {\n        name,\n        date,\n        location,\n        created_by: createdBy\n      });\n      alert(\"Event created successfully\");\n      setName(\"\");\n      setDate(\"\");\n      setLocation(\"\");\n      fetchEvents();\n    } catch (error) {\n      console.error(\"Error creating event:\", error);\n      alert(\"Error creating event\");\n    }\n  };\n  const handleDeleteEvent = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\n      alert(\"Event deleted successfully\");\n      fetchEvents();\n    } catch (error) {\n      console.error(\"Error deleting event:\", error);\n      alert(\"Error deleting event\");\n    }\n  };\n  const handleAddCompetitor = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\n        name: competitorName,\n        event_id: eventId,\n        category,\n        sub_category: subCategory,\n        board_type: boardType,\n        gender,\n        age_category: ageCategory\n      });\n      alert(\"Competitor added successfully\");\n      setCompetitorName(\"\");\n      setCategory(categories[0]);\n      setSubCategory(subCategories[0]);\n      setBoardType(categories[0]);\n      setGender(subCategories[0]);\n      setAgeCategory(ageCategories[0]);\n      fetchCompetitors(eventId, selectedEventName);\n    } catch (error) {\n      console.error(\"Error adding competitor:\", error);\n      alert(\"Error adding competitor\");\n    }\n  };\n  const handleDeleteCompetitor = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\n      alert(\"Competitor deleted successfully\");\n      fetchCompetitors(eventId, selectedEventName);\n    } catch (error) {\n      console.error(\"Error deleting competitor:\", error);\n      alert(\"Error deleting competitor\");\n    }\n  };\n  const handleAddJudge = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\n        name: judgeName,\n        event_id: eventId\n      });\n      alert(\"Judge added successfully\");\n      setJudgeName(\"\");\n      fetchJudges(eventId);\n    } catch (error) {\n      console.error(\"Error adding judge:\", error);\n      alert(\"Error adding judge\");\n    }\n  };\n  const handleDeleteJudge = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-judge/${id}`);\n      alert(\"Judge deleted successfully\");\n      fetchJudges(eventId);\n    } catch (error) {\n      console.error(\"Error deleting judge:\", error);\n      alert(\"Error deleting judge\");\n    }\n  };\n  const handleSaveRounds = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/event-admin/save-rounds\", {\n        eventId,\n        rounds: rounds.map(round => ({\n          name: round.name,\n          category: round.category,\n          sub_category: round.sub_category,\n          board_type: round.board_type,\n          gender: round.gender,\n          age_category: round.age_category,\n          heats: round.heats.map(heat => ({\n            heat_name: heat.name,\n            competitors: heat.competitors\n          }))\n        }))\n      });\n      alert(\"Rounds saved successfully\");\n    } catch (error) {\n      console.error(\"Error saving rounds:\", error);\n      alert(\"Error saving rounds\");\n    }\n  };\n  const handleFetchRounds = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-rounds/${eventId}`);\n      const {\n        rounds,\n        heats\n      } = response.data;\n      console;\n      const processedRounds = rounds.map(round => {\n        return {\n          ...round,\n          heats: heats.filter(heat => heat.round_id === round.id).map(heat => ({\n            ...heat,\n            competitors: heat.competitors.map(h => ({\n              id: h.competitor_id,\n              name: h.competitor_name\n            }))\n          }))\n        };\n      });\n      setRounds(processedRounds);\n    } catch (error) {\n      console.error(\"Error fetching rounds:\", error);\n      alert(\"Error fetching rounds\");\n    }\n  };\n  const handleGeneratePDF = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"rounds.pdf\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      alert(\"Error generating PDF\");\n    }\n  };\n  const handleCreateRounds = () => {\n    const newRounds = [];\n    const competitorsByCategory = {};\n\n    // Organize competitors by their categories and sub-categories\n    competitors.forEach(competitor => {\n      const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\n      if (!competitorsByCategory[key]) {\n        competitorsByCategory[key] = [];\n      }\n      competitorsByCategory[key].push(competitor);\n    });\n\n    // Create rounds and heats for each category\n    Object.keys(competitorsByCategory).forEach(key => {\n      const competitorsList = competitorsByCategory[key];\n      let roundNumber = 1;\n      let heatNumber = 1;\n      for (let i = 0; i < competitorsList.length; i += 4) {\n        const roundName = `Round ${roundNumber} (${key})`;\n        const heatCompetitors = competitorsList.slice(i, i + 4);\n        let round = newRounds.find(r => r.name === roundName);\n        if (!round) {\n          round = {\n            name: roundName,\n            category: competitorsList[0].category,\n            sub_category: competitorsList[0].sub_category,\n            board_type: competitorsList[0].board_type,\n            gender: competitorsList[0].gender,\n            age_category: competitorsList[0].age_category,\n            heats: []\n          };\n          newRounds.push(round);\n        }\n        round.heats.push({\n          id: `heat-${roundNumber}-${heatNumber}`,\n          name: `Heat ${heatNumber}`,\n          competitors: heatCompetitors\n        });\n        heatNumber++;\n        if (heatNumber > 4) {\n          heatNumber = 1;\n          roundNumber++;\n        }\n      }\n    });\n    setRounds(newRounds);\n  };\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const sourceHeatIndex = heats.findIndex(heat => heat.id === result.source.droppableId);\n    const destinationHeatIndex = heats.findIndex(heat => heat.id === result.destination.droppableId);\n    if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\n      return;\n    }\n    const sourceHeat = heats[sourceHeatIndex];\n    const destinationHeat = heats[destinationHeatIndex];\n    const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\n    destinationHeat.competitors.splice(result.destination.index, 0, movedItem);\n    const updatedHeats = heats.map(heat => {\n      if (heat.id === sourceHeat.id) {\n        return sourceHeat;\n      }\n      if (heat.id === destinationHeat.id) {\n        return destinationHeat;\n      }\n      return heat;\n    });\n    setHeats(updatedHeats);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateEvent,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Event Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), events.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events available. Please create an event.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item d-flex justify-content-between align-items-center ${eventId === event.id ? \"active\" : \"\"}`,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: () => {\n          fetchCompetitors(event.id, event.name);\n          fetchJudges(event.id);\n        },\n        children: [event.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => handleDeleteEvent(event.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 15\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), eventId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Manage Competitors for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddCompetitor,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Competitor Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: competitorName,\n            onChange: e => setCompetitorName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sub Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: subCategory,\n            onChange: e => setSubCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Sub Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), subCategories.map(subCat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subCat,\n              children: subCat\n            }, subCat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Board Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: boardType,\n            onChange: e => setBoardType(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Board Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), categories.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: gender,\n            onChange: e => setGender(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), subCategories.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: g,\n              children: g\n            }, g, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Age Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: ageCategory,\n            onChange: e => setAgeCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Age Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this), ageCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          children: \"Add Competitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Competitors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: competitors.map(competitor => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [competitor.name, \" (Event: \", selectedEventName, \", Category:\", \" \", competitor.category, \", Sub Category: \", competitor.sub_category, \", Board Type: \", competitor.board_type, \", Gender: \", competitor.gender, \", Age Category: \", competitor.age_category, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteCompetitor(competitor.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 17\n          }, this)]\n        }, competitor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Manage Judges for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddJudge,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Judge Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: judgeName,\n            onChange: e => setJudgeName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          children: \"Add Judge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Judges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: judges.map(judge => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [judge.name, \" (Event: \", selectedEventName, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteJudge(judge.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 17\n          }, this)]\n        }, judge.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mb-0\",\n        onClick: handleCreateRounds,\n        children: \"Create Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-0\",\n        onClick: handleSaveRounds,\n        children: \"Save Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info mt-0\",\n        onClick: handleFetchRounds,\n        children: \"Show All Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mt-0\",\n        onClick: handleGeneratePDF,\n        children: \"Generate PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: rounds.map(round => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: round.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: round.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 21\n            }, this), heats.filter(heat => heat.id.startsWith(`heat-${round.id}`)).map((heat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Heat \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: heat.id,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"list-group\",\n                  children: [heat.competitors.map((competitor, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: competitor.id.toString(),\n                    index: idx,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"list-group-item\",\n                      children: competitor.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 39\n                    }, this)\n                  }, competitor.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 35\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 27\n              }, this)]\n            }, heat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 25\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 19\n          }, this)\n        }, round.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Rounds for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this), rounds.map((round, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Round \", roundIndex + 1, \" (\", round.category, \", \", round.sub_category, \",\", \" \", round.board_type, \", \", round.gender, \", \", round.age_category, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 15\n        }, this), round.heats.map((heat, heatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Heat \", heatIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: heat.competitors.map((competitor, competitorIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: competitor.name\n            }, competitorIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 19\n          }, this)]\n        }, heatIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 17\n        }, this))]\n      }, roundIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Please select an event to manage competitors and judges.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n};\n_s(EventManagement, \"oaWb9zM2YV2zTnPGuokIk4z2j74=\");\n_c = EventManagement;\nexport default EventManagement;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const categories = [\"Shortboard\", \"Longboard\"];\n// const subCategories = [\"Men\", \"Women\"];\n// const ageCategories = [\n//   \"Open\",\n//   \"Sub12\",\n//   \"Sub14\",\n//   \"Sub18\",\n//   \"Professional\",\n//   \"+40\",\n//   \"+45\",\n//   \"+50\",\n//   \"+60\",\n//   \"+65\",\n//   \"+70\",\n// ];\n\n// const EventManagement = () => {\n//   const [events, setEvents] = useState([]);\n//   const [competitors, setCompetitors] = useState([]);\n//   const [judges, setJudges] = useState([]);\n//   const [rounds, setRounds] = useState([]);\n//   const [heats, setHeats] = useState([]);\n//   const [eventId, setEventId] = useState(null);\n//   const [name, setName] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n//   const [location, setLocation] = useState(\"\");\n//   const [competitorName, setCompetitorName] = useState(\"\");\n//   const [category, setCategory] = useState(categories[0]);\n//   const [subCategory, setSubCategory] = useState(subCategories[0]);\n//   const [boardType, setBoardType] = useState(categories[0]);\n//   const [gender, setGender] = useState(subCategories[0]);\n//   const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\n//   const [judgeName, setJudgeName] = useState(\"\");\n//   const [createdBy, setCreatedBy] = useState(1);\n//   const [selectedEventName, setSelectedEventName] = useState(\"\");\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get(\n//         \"http://localhost:3000/event-admin/get-events\"\n//       );\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching events:\", error);\n//     }\n//   };\n\n//   const fetchCompetitors = async (eventId, eventName) => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-competitors/${eventId}`\n//       );\n//       setCompetitors(response.data);\n//       setEventId(eventId);\n//       setSelectedEventName(eventName);\n//     } catch (error) {\n//       console.error(\"Error fetching competitors:\", error);\n//     }\n//   };\n\n//   const fetchJudges = async (eventId) => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-judges/${eventId}`\n//       );\n//       setJudges(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching judges:\", error);\n//     }\n//   };\n\n//   const handleCreateEvent = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\"http://localhost:3000/event-admin/create-event\", {\n//         name,\n//         date,\n//         location,\n//         created_by: createdBy,\n//       });\n//       alert(\"Event created successfully\");\n//       setName(\"\");\n//       setDate(\"\");\n//       setLocation(\"\");\n//       fetchEvents();\n//     } catch (error) {\n//       console.error(\"Error creating event:\", error);\n//       alert(\"Error creating event\");\n//     }\n//   };\n\n//   const handleDeleteEvent = async (id) => {\n//     try {\n//       await axios.delete(\n//         `http://localhost:3000/event-admin/delete-event/${id}`\n//       );\n//       alert(\"Event deleted successfully\");\n//       fetchEvents();\n//     } catch (error) {\n//       console.error(\"Error deleting event:\", error);\n//       alert(\"Error deleting event\");\n//     }\n//   };\n\n//   const handleAddCompetitor = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\n//         name: competitorName,\n//         event_id: eventId,\n//         category,\n//         sub_category: subCategory,\n//         board_type: boardType,\n//         gender,\n//         age_category: ageCategory,\n//       });\n//       alert(\"Competitor added successfully\");\n//       setCompetitorName(\"\");\n//       setCategory(categories[0]);\n//       setSubCategory(subCategories[0]);\n//       setBoardType(categories[0]);\n//       setGender(subCategories[0]);\n//       setAgeCategory(ageCategories[0]);\n//       fetchCompetitors(eventId, selectedEventName);\n//     } catch (error) {\n//       console.error(\"Error adding competitor:\", error);\n//       alert(\"Error adding competitor\");\n//     }\n//   };\n\n//   const handleDeleteCompetitor = async (id) => {\n//     try {\n//       await axios.delete(\n//         `http://localhost:3000/event-admin/delete-competitor/${id}`\n//       );\n//       alert(\"Competitor deleted successfully\");\n//       fetchCompetitors(eventId, selectedEventName);\n//     } catch (error) {\n//       console.error(\"Error deleting competitor:\", error);\n//       alert(\"Error deleting competitor\");\n//     }\n//   };\n\n//   const handleAddJudge = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\n//         name: judgeName,\n//         event_id: eventId,\n//       });\n//       alert(\"Judge added successfully\");\n//       setJudgeName(\"\");\n//       fetchJudges(eventId);\n//     } catch (error) {\n//       console.error(\"Error adding judge:\", error);\n//       alert(\"Error adding judge\");\n//     }\n//   };\n\n//   const handleDeleteJudge = async (id) => {\n//     try {\n//       await axios.delete(\n//         `http://localhost:3000/event-admin/delete-judge/${id}`\n//       );\n//       alert(\"Judge deleted successfully\");\n//       fetchJudges(eventId);\n//     } catch (error) {\n//       console.error(\"Error deleting judge:\", error);\n//       alert(\"Error deleting judge\");\n//     }\n//   };\n\n//   const handleSaveRounds = async () => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3000/event-admin/save-rounds\",\n//         {\n//           eventId,\n//           rounds: rounds.map((round) => ({\n//             name: round.name,\n//             category: round.category,\n//             sub_category: round.sub_category,\n//             board_type: round.board_type,\n//             gender: round.gender,\n//             age_category: round.age_category,\n//             heats: round.heats.map((heat) => ({\n//               heat_name: heat.name,\n//               competitors: heat.competitors,\n//             })),\n//           })),\n//         }\n//       );\n//       alert(\"Rounds saved successfully\");\n//     } catch (error) {\n//       console.error(\"Error saving rounds:\", error);\n//       alert(\"Error saving rounds\");\n//     }\n//   };\n\n//   const handleFetchRounds = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//       );\n\n//       const rounds = response.data;\n//       const processedRounds = rounds.map((round) => {\n//         return {\n//           ...round,\n//           heats: round.heats.map((heat) => ({\n//             ...heat,\n//             competitors: heat.competitors.map((competitor) => ({\n//               id: competitor.id,\n//               name: competitor.name,\n//             })),\n//           })),\n//         };\n//       });\n\n//       setRounds(processedRounds);\n//     } catch (error) {\n//       console.error(\"Error fetching rounds:\", error);\n//       alert(\"Error fetching rounds\");\n//     }\n//   };\n\n//   const handleGeneratePDF = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`,\n//         { responseType: \"blob\" }\n//       );\n//       const url = window.URL.createObjectURL(new Blob([response.data]));\n//       const link = document.createElement(\"a\");\n//       link.href = url;\n//       link.setAttribute(\"download\", \"rounds.pdf\");\n//       document.body.appendChild(link);\n//       link.click();\n//     } catch (error) {\n//       console.error(\"Error generating PDF:\", error);\n//       alert(\"Error generating PDF\");\n//     }\n//   };\n\n//   const handleCreateRounds = () => {\n//     const newRounds = [];\n//     const competitorsByCategory = {};\n\n//     // Organize competitors by their categories and sub-categories\n//     competitors.forEach((competitor) => {\n//       const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\n//       if (!competitorsByCategory[key]) {\n//         competitorsByCategory[key] = [];\n//       }\n//       competitorsByCategory[key].push(competitor);\n//     });\n\n//     // Create rounds and heats for each category\n//     Object.keys(competitorsByCategory).forEach((key) => {\n//       const competitorsList = competitorsByCategory[key];\n//       let roundNumber = 1;\n//       let heatNumber = 1;\n\n//       for (let i = 0; i < competitorsList.length; i += 4) {\n//         const roundName = `Round ${roundNumber} (${key})`;\n//         const heatCompetitors = competitorsList.slice(i, i + 4);\n\n//         let round = newRounds.find((r) => r.name === roundName);\n//         if (!round) {\n//           round = {\n//             name: roundName,\n//             category: competitorsList[0].category,\n//             sub_category: competitorsList[0].sub_category,\n//             board_type: competitorsList[0].board_type,\n//             gender: competitorsList[0].gender,\n//             age_category: competitorsList[0].age_category,\n//             heats: [],\n//           };\n//           newRounds.push(round);\n//         }\n\n//         round.heats.push({\n//           id: `heat-${roundNumber}-${heatNumber}`,\n//           name: `Heat ${heatNumber}`,\n//           competitors: heatCompetitors,\n//         });\n\n//         heatNumber++;\n//         if (heatNumber > 4) {\n//           heatNumber = 1;\n//           roundNumber++;\n//         }\n//       }\n//     });\n\n//     setRounds(newRounds);\n//   };\n\n//   const handleDragEnd = (result) => {\n//     if (!result.destination) {\n//       return;\n//     }\n\n//     const sourceHeatIndex = heats.findIndex(\n//       (heat) => heat.id === result.source.droppableId\n//     );\n//     const destinationHeatIndex = heats.findIndex(\n//       (heat) => heat.id === result.destination.droppableId\n//     );\n\n//     if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\n//       return;\n//     }\n\n//     const sourceHeat = heats[sourceHeatIndex];\n//     const destinationHeat = heats[destinationHeatIndex];\n\n//     const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\n//     destinationHeat.competitors.splice(result.destination.index, 0, movedItem);\n\n//     const updatedHeats = heats.map((heat) => {\n//       if (heat.id === sourceHeat.id) {\n//         return sourceHeat;\n//       }\n//       if (heat.id === destinationHeat.id) {\n//         return destinationHeat;\n//       }\n//       return heat;\n//     });\n\n//     setHeats(updatedHeats);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Manage Events</h2>\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\n//         <div className=\"form-group\">\n//           <label>Event Name:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group mt-3\">\n//           <label>Date:</label>\n//           <input\n//             type=\"date\"\n//             className=\"form-control\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group mt-3\">\n//           <label>Location:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">\n//           Create Event\n//         </button>\n//       </form>\n\n//       <h3>Existing Events</h3>\n//       {events.length === 0 ? (\n//         <p>No events available. Please create an event.</p>\n//       ) : (\n//         <ul className=\"list-group\">\n//           {events.map((event) => (\n//             <li\n//               key={event.id}\n//               className={`list-group-item d-flex justify-content-between align-items-center ${\n//                 eventId === event.id ? \"active\" : \"\"\n//               }`}\n//               style={{ cursor: \"pointer\" }}\n//               onClick={() => {\n//                 fetchCompetitors(event.id, event.name);\n//                 fetchJudges(event.id);\n//               }}\n//             >\n//               {event.name}\n//               <button\n//                 className=\"btn btn-danger\"\n//                 onClick={() => handleDeleteEvent(event.id)}\n//               >\n//                 Delete\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n\n//       {eventId ? (\n//         <>\n//           <h3>Manage Competitors for {selectedEventName}</h3>\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\n//             <div className=\"form-group\">\n//               <label>Competitor Name:</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 value={competitorName}\n//                 onChange={(e) => setCompetitorName(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group mt-3\">\n//               <label>Category:</label>\n//               <select\n//                 className=\"form-control\"\n//                 value={category}\n//                 onChange={(e) => setCategory(e.target.value)}\n//                 required\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 {categories.map((cat) => (\n//                   <option key={cat} value={cat}>\n//                     {cat}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group mt-3\">\n//               <label>Sub Category:</label>\n//               <select\n//                 className=\"form-control\"\n//                 value={subCategory}\n//                 onChange={(e) => setSubCategory(e.target.value)}\n//                 required\n//               >\n//                 <option value=\"\">Select Sub Category</option>\n//                 {subCategories.map((subCat) => (\n//                   <option key={subCat} value={subCat}>\n//                     {subCat}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group mt-3\">\n//               <label>Board Type:</label>\n//               <select\n//                 className=\"form-control\"\n//                 value={boardType}\n//                 onChange={(e) => setBoardType(e.target.value)}\n//                 required\n//               >\n//                 <option value=\"\">Select Board Type</option>\n//                 {categories.map((type) => (\n//                   <option key={type} value={type}>\n//                     {type}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group mt-3\">\n//               <label>Gender:</label>\n//               <select\n//                 className=\"form-control\"\n//                 value={gender}\n//                 onChange={(e) => setGender(e.target.value)}\n//                 required\n//               >\n//                 <option value=\"\">Select Gender</option>\n//                 {subCategories.map((g) => (\n//                   <option key={g} value={g}>\n//                     {g}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group mt-3\">\n//               <label>Age Category:</label>\n//               <select\n//                 className=\"form-control\"\n//                 value={ageCategory}\n//                 onChange={(e) => setAgeCategory(e.target.value)}\n//                 required\n//               >\n//                 <option value=\"\">Select Age Category</option>\n//                 {ageCategories.map((cat) => (\n//                   <option key={cat} value={cat}>\n//                     {cat}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">\n//               Add Competitor\n//             </button>\n//           </form>\n\n//           <h3>Existing Competitors</h3>\n//           <ul className=\"list-group\">\n//             {competitors.map((competitor) => (\n//               <li\n//                 key={competitor.id}\n//                 className=\"list-group-item d-flex justify-content-between align-items-center\"\n//               >\n//                 {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\n//                 {competitor.category}, Sub Category: {competitor.sub_category},\n//                 Board Type: {competitor.board_type}, Gender: {competitor.gender}\n//                 , Age Category: {competitor.age_category})\n//                 <button\n//                   className=\"btn btn-danger\"\n//                   onClick={() => handleDeleteCompetitor(competitor.id)}\n//                 >\n//                   Delete\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n\n//           <h3>Manage Judges for {selectedEventName}</h3>\n//           <form onSubmit={handleAddJudge} className=\"mb-4\">\n//             <div className=\"form-group\">\n//               <label>Judge Name:</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 value={judgeName}\n//                 onChange={(e) => setJudgeName(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">\n//               Add Judge\n//             </button>\n//           </form>\n\n//           <h3>Existing Judges</h3>\n//           <ul className=\"list-group\">\n//             {judges.map((judge) => (\n//               <li\n//                 key={judge.id}\n//                 className=\"list-group-item d-flex justify-content-between align-items-center\"\n//               >\n//                 {judge.name} (Event: {selectedEventName})\n//                 <button\n//                   className=\"btn btn-danger\"\n//                   onClick={() => handleDeleteJudge(judge.id)}\n//                 >\n//                   Delete\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n\n//           <h3>Rounds</h3>\n//           <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\n//             Create Rounds\n//           </button>\n//           <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\n//             Save Rounds\n//           </button>\n//           <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\n//             Show All Rounds\n//           </button>\n//           <button\n//             className=\"btn btn-secondary mt-0\"\n//             onClick={handleGeneratePDF}\n//           >\n//             Generate PDF\n//           </button>\n\n//           <DragDropContext onDragEnd={handleDragEnd}>\n//             {rounds.map((round) => (\n//               <Droppable droppableId={round.id} key={round.id}>\n//                 {(provided) => (\n//                   <div\n//                     ref={provided.innerRef}\n//                     {...provided.droppableProps}\n//                     className=\"mb-4\"\n//                   >\n//                     <h4>{round.name}</h4>\n//                     {round.heats.map((heat, index) => (\n//                       <div key={heat.id}>\n//                         <h5>Heat {index + 1}</h5>\n//                         <Droppable droppableId={heat.id}>\n//                           {(provided) => (\n//                             <div\n//                               ref={provided.innerRef}\n//                               {...provided.droppableProps}\n//                               className=\"list-group\"\n//                             >\n//                               {heat.competitors.map((competitor, idx) => (\n//                                 <Draggable\n//                                   key={competitor.id}\n//                                   draggableId={competitor.id.toString()}\n//                                   index={idx}\n//                                 >\n//                                   {(provided) => (\n//                                     <div\n//                                       ref={provided.innerRef}\n//                                       {...provided.draggableProps}\n//                                       {...provided.dragHandleProps}\n//                                       className=\"list-group-item\"\n//                                     >\n//                                       {competitor.name}\n//                                     </div>\n//                                   )}\n//                                 </Draggable>\n//                               ))}\n//                               {provided.placeholder}\n//                             </div>\n//                           )}\n//                         </Droppable>\n//                       </div>\n//                     ))}\n//                     {provided.placeholder}\n//                   </div>\n//                 )}\n//               </Droppable>\n//             ))}\n//           </DragDropContext>\n\n//           <h3>Rounds for {selectedEventName}</h3>\n//           {rounds.map((round, roundIndex) => (\n//             <div key={roundIndex} className=\"mb-4\">\n//               <h4>\n//                 Round {roundIndex + 1} ({round.category}, {round.sub_category},{\" \"}\n//                 {round.board_type}, {round.gender}, {round.age_category})\n//               </h4>\n//               {round.heats.map((heat, heatIndex) => (\n//                 <div key={heatIndex} className=\"mb-2\">\n//                   <h5>Heat {heatIndex + 1}</h5>\n//                   <ul className=\"list-group\">\n//                     {heat.competitors.map((competitor, competitorIndex) => (\n//                       <li key={competitorIndex} className=\"list-group-item\">\n//                         {competitor.name}\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//               ))}\n//             </div>\n//           ))}\n//         </>\n//       ) : (\n//         <p className=\"mt-4\">\n//           Please select an event to manage competitors and judges.\n//         </p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default EventManagement;\nvar _c;\n$RefreshReg$(_c, \"EventManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","categories","subCategories","ageCategories","EventManagement","_s","events","setEvents","competitors","setCompetitors","judges","setJudges","rounds","setRounds","heats","setHeats","eventId","setEventId","name","setName","date","setDate","location","setLocation","competitorName","setCompetitorName","category","setCategory","subCategory","setSubCategory","boardType","setBoardType","gender","setGender","ageCategory","setAgeCategory","judgeName","setJudgeName","createdBy","setCreatedBy","selectedEventName","setSelectedEventName","fetchEvents","response","get","data","error","console","fetchCompetitors","eventName","fetchJudges","handleCreateEvent","e","preventDefault","post","created_by","alert","handleDeleteEvent","id","delete","handleAddCompetitor","event_id","sub_category","board_type","age_category","handleDeleteCompetitor","handleAddJudge","handleDeleteJudge","handleSaveRounds","map","round","heat","heat_name","handleFetchRounds","processedRounds","filter","round_id","h","competitor_id","competitor_name","handleGeneratePDF","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","handleCreateRounds","newRounds","competitorsByCategory","forEach","competitor","key","push","Object","keys","competitorsList","roundNumber","heatNumber","i","length","roundName","heatCompetitors","slice","find","r","handleDragEnd","result","destination","sourceHeatIndex","findIndex","source","droppableId","destinationHeatIndex","sourceHeat","destinationHeat","movedItem","splice","index","updatedHeats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","event","style","cursor","onClick","cat","subCat","g","judge","onDragEnd","provided","ref","innerRef","droppableProps","startsWith","idx","draggableId","toString","draggableProps","dragHandleProps","placeholder","roundIndex","heatIndex","competitorIndex","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst categories = [\"Shortboard\", \"Longboard\"];\r\nconst subCategories = [\"Men\", \"Women\"];\r\nconst ageCategories = [\r\n  \"Open\",\r\n  \"Sub12\",\r\n  \"Sub14\",\r\n  \"Sub18\",\r\n  \"Professional\",\r\n  \"+40\",\r\n  \"+45\",\r\n  \"+50\",\r\n  \"+60\",\r\n  \"+65\",\r\n  \"+70\",\r\n];\r\n\r\nconst EventManagement = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [competitors, setCompetitors] = useState([]);\r\n  const [judges, setJudges] = useState([]);\r\n  const [rounds, setRounds] = useState([]);\r\n  const [heats, setHeats] = useState([]);\r\n  const [eventId, setEventId] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [competitorName, setCompetitorName] = useState(\"\");\r\n  const [category, setCategory] = useState(categories[0]);\r\n  const [subCategory, setSubCategory] = useState(subCategories[0]);\r\n  const [boardType, setBoardType] = useState(categories[0]);\r\n  const [gender, setGender] = useState(subCategories[0]);\r\n  const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\r\n  const [judgeName, setJudgeName] = useState(\"\");\r\n  const [createdBy, setCreatedBy] = useState(1);\r\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:3000/event-admin/get-events\"\r\n      );\r\n      setEvents(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching events:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCompetitors = async (eventId, eventName) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-competitors/${eventId}`\r\n      );\r\n      setCompetitors(response.data);\r\n      setEventId(eventId);\r\n      setSelectedEventName(eventName);\r\n    } catch (error) {\r\n      console.error(\"Error fetching competitors:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchJudges = async (eventId) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-judges/${eventId}`\r\n      );\r\n      setJudges(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching judges:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCreateEvent = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/create-event\", {\r\n        name,\r\n        date,\r\n        location,\r\n        created_by: createdBy,\r\n      });\r\n      alert(\"Event created successfully\");\r\n      setName(\"\");\r\n      setDate(\"\");\r\n      setLocation(\"\");\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(\"Error creating event:\", error);\r\n      alert(\"Error creating event\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-event/${id}`\r\n      );\r\n      alert(\"Event deleted successfully\");\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error);\r\n      alert(\"Error deleting event\");\r\n    }\r\n  };\r\n\r\n  const handleAddCompetitor = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\r\n        name: competitorName,\r\n        event_id: eventId,\r\n        category,\r\n        sub_category: subCategory,\r\n        board_type: boardType,\r\n        gender,\r\n        age_category: ageCategory,\r\n      });\r\n      alert(\"Competitor added successfully\");\r\n      setCompetitorName(\"\");\r\n      setCategory(categories[0]);\r\n      setSubCategory(subCategories[0]);\r\n      setBoardType(categories[0]);\r\n      setGender(subCategories[0]);\r\n      setAgeCategory(ageCategories[0]);\r\n      fetchCompetitors(eventId, selectedEventName);\r\n    } catch (error) {\r\n      console.error(\"Error adding competitor:\", error);\r\n      alert(\"Error adding competitor\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteCompetitor = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-competitor/${id}`\r\n      );\r\n      alert(\"Competitor deleted successfully\");\r\n      fetchCompetitors(eventId, selectedEventName);\r\n    } catch (error) {\r\n      console.error(\"Error deleting competitor:\", error);\r\n      alert(\"Error deleting competitor\");\r\n    }\r\n  };\r\n\r\n  const handleAddJudge = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\r\n        name: judgeName,\r\n        event_id: eventId,\r\n      });\r\n      alert(\"Judge added successfully\");\r\n      setJudgeName(\"\");\r\n      fetchJudges(eventId);\r\n    } catch (error) {\r\n      console.error(\"Error adding judge:\", error);\r\n      alert(\"Error adding judge\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteJudge = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-judge/${id}`\r\n      );\r\n      alert(\"Judge deleted successfully\");\r\n      fetchJudges(eventId);\r\n    } catch (error) {\r\n      console.error(\"Error deleting judge:\", error);\r\n      alert(\"Error deleting judge\");\r\n    }\r\n  };\r\n\r\n  const handleSaveRounds = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/event-admin/save-rounds\",\r\n        {\r\n          eventId,\r\n          rounds: rounds.map((round) => ({\r\n            name: round.name,\r\n            category: round.category,\r\n            sub_category: round.sub_category,\r\n            board_type: round.board_type,\r\n            gender: round.gender,\r\n            age_category: round.age_category,\r\n            heats: round.heats.map((heat) => ({\r\n              heat_name: heat.name,\r\n              competitors: heat.competitors,\r\n            })),\r\n          })),\r\n        }\r\n      );\r\n      alert(\"Rounds saved successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error saving rounds:\", error);\r\n      alert(\"Error saving rounds\");\r\n    }\r\n  };\r\n\r\n  const handleFetchRounds = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n      );\r\n      const { rounds, heats } = response.data;\r\nconsole\r\n      const processedRounds = rounds.map((round) => {\r\n        return {\r\n          ...round,\r\n          heats: heats\r\n            .filter((heat) => heat.round_id === round.id)\r\n            .map((heat) => ({\r\n              ...heat,\r\n              competitors: heat.competitors.map((h) => ({\r\n                id: h.competitor_id,\r\n                name: h.competitor_name,\r\n              })),\r\n            })),\r\n        };\r\n      });\r\n\r\n      setRounds(processedRounds);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rounds:\", error);\r\n      alert(\"Error fetching rounds\");\r\n    }\r\n  };\r\n\r\n  const handleGeneratePDF = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`,\r\n        { responseType: \"blob\" }\r\n      );\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", \"rounds.pdf\");\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Error generating PDF:\", error);\r\n      alert(\"Error generating PDF\");\r\n    }\r\n  };\r\n\r\n  const handleCreateRounds = () => {\r\n    const newRounds = [];\r\n    const competitorsByCategory = {};\r\n\r\n    // Organize competitors by their categories and sub-categories\r\n    competitors.forEach((competitor) => {\r\n      const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\r\n      if (!competitorsByCategory[key]) {\r\n        competitorsByCategory[key] = [];\r\n      }\r\n      competitorsByCategory[key].push(competitor);\r\n    });\r\n\r\n    // Create rounds and heats for each category\r\n    Object.keys(competitorsByCategory).forEach((key) => {\r\n      const competitorsList = competitorsByCategory[key];\r\n      let roundNumber = 1;\r\n      let heatNumber = 1;\r\n\r\n      for (let i = 0; i < competitorsList.length; i += 4) {\r\n        const roundName = `Round ${roundNumber} (${key})`;\r\n        const heatCompetitors = competitorsList.slice(i, i + 4);\r\n\r\n        let round = newRounds.find((r) => r.name === roundName);\r\n        if (!round) {\r\n          round = {\r\n            name: roundName,\r\n            category: competitorsList[0].category,\r\n            sub_category: competitorsList[0].sub_category,\r\n            board_type: competitorsList[0].board_type,\r\n            gender: competitorsList[0].gender,\r\n            age_category: competitorsList[0].age_category,\r\n            heats: [],\r\n          };\r\n          newRounds.push(round);\r\n        }\r\n\r\n        round.heats.push({\r\n          id: `heat-${roundNumber}-${heatNumber}`,\r\n          name: `Heat ${heatNumber}`,\r\n          competitors: heatCompetitors,\r\n        });\r\n\r\n        heatNumber++;\r\n        if (heatNumber > 4) {\r\n          heatNumber = 1;\r\n          roundNumber++;\r\n        }\r\n      }\r\n    });\r\n\r\n    setRounds(newRounds);\r\n  };\r\n\r\n  const handleDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const sourceHeatIndex = heats.findIndex(\r\n      (heat) => heat.id === result.source.droppableId\r\n    );\r\n    const destinationHeatIndex = heats.findIndex(\r\n      (heat) => heat.id === result.destination.droppableId\r\n    );\r\n\r\n    if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    const sourceHeat = heats[sourceHeatIndex];\r\n    const destinationHeat = heats[destinationHeatIndex];\r\n\r\n    const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\r\n    destinationHeat.competitors.splice(result.destination.index, 0, movedItem);\r\n\r\n    const updatedHeats = heats.map((heat) => {\r\n      if (heat.id === sourceHeat.id) {\r\n        return sourceHeat;\r\n      }\r\n      if (heat.id === destinationHeat.id) {\r\n        return destinationHeat;\r\n      }\r\n      return heat;\r\n    });\r\n\r\n    setHeats(updatedHeats);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Manage Events</h2>\r\n      <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n        <div className=\"form-group\">\r\n          <label>Event Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <label>Location:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n          Create Event\r\n        </button>\r\n      </form>\r\n\r\n      <h3>Existing Events</h3>\r\n      {events.length === 0 ? (\r\n        <p>No events available. Please create an event.</p>\r\n      ) : (\r\n        <ul className=\"list-group\">\r\n          {events.map((event) => (\r\n            <li\r\n              key={event.id}\r\n              className={`list-group-item d-flex justify-content-between align-items-center ${\r\n                eventId === event.id ? \"active\" : \"\"\r\n              }`}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                fetchCompetitors(event.id, event.name);\r\n                fetchJudges(event.id);\r\n              }}\r\n            >\r\n              {event.name}\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDeleteEvent(event.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {eventId ? (\r\n        <>\r\n          <h3>Manage Competitors for {selectedEventName}</h3>\r\n          <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n            <div className=\"form-group\">\r\n              <label>Competitor Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={competitorName}\r\n                onChange={(e) => setCompetitorName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group mt-3\">\r\n              <label>Category:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((cat) => (\r\n                  <option key={cat} value={cat}>\r\n                    {cat}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group mt-3\">\r\n              <label>Sub Category:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                value={subCategory}\r\n                onChange={(e) => setSubCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Sub Category</option>\r\n                {subCategories.map((subCat) => (\r\n                  <option key={subCat} value={subCat}>\r\n                    {subCat}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group mt-3\">\r\n              <label>Board Type:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                value={boardType}\r\n                onChange={(e) => setBoardType(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Board Type</option>\r\n                {categories.map((type) => (\r\n                  <option key={type} value={type}>\r\n                    {type}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group mt-3\">\r\n              <label>Gender:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                value={gender}\r\n                onChange={(e) => setGender(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Gender</option>\r\n                {subCategories.map((g) => (\r\n                  <option key={g} value={g}>\r\n                    {g}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group mt-3\">\r\n              <label>Age Category:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                value={ageCategory}\r\n                onChange={(e) => setAgeCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Age Category</option>\r\n                {ageCategories.map((cat) => (\r\n                  <option key={cat} value={cat}>\r\n                    {cat}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n              Add Competitor\r\n            </button>\r\n          </form>\r\n\r\n          <h3>Existing Competitors</h3>\r\n          <ul className=\"list-group\">\r\n            {competitors.map((competitor) => (\r\n              <li\r\n                key={competitor.id}\r\n                className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n              >\r\n                {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\r\n                {competitor.category}, Sub Category: {competitor.sub_category},\r\n                Board Type: {competitor.board_type}, Gender: {competitor.gender}\r\n                , Age Category: {competitor.age_category})\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => handleDeleteCompetitor(competitor.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <h3>Manage Judges for {selectedEventName}</h3>\r\n          <form onSubmit={handleAddJudge} className=\"mb-4\">\r\n            <div className=\"form-group\">\r\n              <label>Judge Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={judgeName}\r\n                onChange={(e) => setJudgeName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n              Add Judge\r\n            </button>\r\n          </form>\r\n\r\n          <h3>Existing Judges</h3>\r\n          <ul className=\"list-group\">\r\n            {judges.map((judge) => (\r\n              <li\r\n                key={judge.id}\r\n                className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n              >\r\n                {judge.name} (Event: {selectedEventName})\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => handleDeleteJudge(judge.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <h3>Rounds</h3>\r\n          <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\r\n            Create Rounds\r\n          </button>\r\n          <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\r\n            Save Rounds\r\n          </button>\r\n          <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\r\n            Show All Rounds\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary mt-0\"\r\n            onClick={handleGeneratePDF}\r\n          >\r\n            Generate PDF\r\n          </button>\r\n\r\n          <DragDropContext onDragEnd={handleDragEnd}>\r\n            {rounds.map((round) => (\r\n              <Droppable droppableId={round.id} key={round.id}>\r\n                {(provided) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.droppableProps}\r\n                    className=\"mb-4\"\r\n                  >\r\n                    <h4>{round.name}</h4>\r\n                    {heats\r\n                      .filter((heat) => heat.id.startsWith(`heat-${round.id}`))\r\n                      .map((heat, index) => (\r\n                        <div key={heat.id}>\r\n                          <h5>Heat {index + 1}</h5>\r\n                          <Droppable droppableId={heat.id}>\r\n                            {(provided) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                className=\"list-group\"\r\n                              >\r\n                                {heat.competitors.map((competitor, idx) => (\r\n                                  <Draggable\r\n                                    key={competitor.id}\r\n                                    draggableId={competitor.id.toString()}\r\n                                    index={idx}\r\n                                  >\r\n                                    {(provided) => (\r\n                                      <div\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        className=\"list-group-item\"\r\n                                      >\r\n                                        {competitor.name}\r\n                                      </div>\r\n                                    )}\r\n                                  </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                              </div>\r\n                            )}\r\n                          </Droppable>\r\n                        </div>\r\n                      ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            ))}\r\n          </DragDropContext>\r\n\r\n          <h3>Rounds for {selectedEventName}</h3>\r\n          {rounds.map((round, roundIndex) => (\r\n            <div key={roundIndex} className=\"mb-4\">\r\n              <h4>\r\n                Round {roundIndex + 1} ({round.category}, {round.sub_category},{\" \"}\r\n                {round.board_type}, {round.gender}, {round.age_category})\r\n              </h4>\r\n              {round.heats.map((heat, heatIndex) => (\r\n                <div key={heatIndex} className=\"mb-2\">\r\n                  <h5>Heat {heatIndex + 1}</h5>\r\n                  <ul className=\"list-group\">\r\n                    {heat.competitors.map((competitor, competitorIndex) => (\r\n                      <li key={competitorIndex} className=\"list-group-item\">\r\n                        {competitor.name}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <p className=\"mt-4\">\r\n          Please select an event to manage competitors and judges.\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventManagement;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// const categories = [\"Shortboard\", \"Longboard\"];\r\n// const subCategories = [\"Men\", \"Women\"];\r\n// const ageCategories = [\r\n//   \"Open\",\r\n//   \"Sub12\",\r\n//   \"Sub14\",\r\n//   \"Sub18\",\r\n//   \"Professional\",\r\n//   \"+40\",\r\n//   \"+45\",\r\n//   \"+50\",\r\n//   \"+60\",\r\n//   \"+65\",\r\n//   \"+70\",\r\n// ];\r\n\r\n// const EventManagement = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [competitors, setCompetitors] = useState([]);\r\n//   const [judges, setJudges] = useState([]);\r\n//   const [rounds, setRounds] = useState([]);\r\n//   const [heats, setHeats] = useState([]);\r\n//   const [eventId, setEventId] = useState(null);\r\n//   const [name, setName] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [location, setLocation] = useState(\"\");\r\n//   const [competitorName, setCompetitorName] = useState(\"\");\r\n//   const [category, setCategory] = useState(categories[0]);\r\n//   const [subCategory, setSubCategory] = useState(subCategories[0]);\r\n//   const [boardType, setBoardType] = useState(categories[0]);\r\n//   const [gender, setGender] = useState(subCategories[0]);\r\n//   const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\r\n//   const [judgeName, setJudgeName] = useState(\"\");\r\n//   const [createdBy, setCreatedBy] = useState(1);\r\n//   const [selectedEventName, setSelectedEventName] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         \"http://localhost:3000/event-admin/get-events\"\r\n//       );\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching events:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCompetitors = async (eventId, eventName) => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-competitors/${eventId}`\r\n//       );\r\n//       setCompetitors(response.data);\r\n//       setEventId(eventId);\r\n//       setSelectedEventName(eventName);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching competitors:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchJudges = async (eventId) => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-judges/${eventId}`\r\n//       );\r\n//       setJudges(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching judges:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateEvent = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\"http://localhost:3000/event-admin/create-event\", {\r\n//         name,\r\n//         date,\r\n//         location,\r\n//         created_by: createdBy,\r\n//       });\r\n//       alert(\"Event created successfully\");\r\n//       setName(\"\");\r\n//       setDate(\"\");\r\n//       setLocation(\"\");\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error(\"Error creating event:\", error);\r\n//       alert(\"Error creating event\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteEvent = async (id) => {\r\n//     try {\r\n//       await axios.delete(\r\n//         `http://localhost:3000/event-admin/delete-event/${id}`\r\n//       );\r\n//       alert(\"Event deleted successfully\");\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting event:\", error);\r\n//       alert(\"Error deleting event\");\r\n//     }\r\n//   };\r\n\r\n//   const handleAddCompetitor = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\r\n//         name: competitorName,\r\n//         event_id: eventId,\r\n//         category,\r\n//         sub_category: subCategory,\r\n//         board_type: boardType,\r\n//         gender,\r\n//         age_category: ageCategory,\r\n//       });\r\n//       alert(\"Competitor added successfully\");\r\n//       setCompetitorName(\"\");\r\n//       setCategory(categories[0]);\r\n//       setSubCategory(subCategories[0]);\r\n//       setBoardType(categories[0]);\r\n//       setGender(subCategories[0]);\r\n//       setAgeCategory(ageCategories[0]);\r\n//       fetchCompetitors(eventId, selectedEventName);\r\n//     } catch (error) {\r\n//       console.error(\"Error adding competitor:\", error);\r\n//       alert(\"Error adding competitor\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteCompetitor = async (id) => {\r\n//     try {\r\n//       await axios.delete(\r\n//         `http://localhost:3000/event-admin/delete-competitor/${id}`\r\n//       );\r\n//       alert(\"Competitor deleted successfully\");\r\n//       fetchCompetitors(eventId, selectedEventName);\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting competitor:\", error);\r\n//       alert(\"Error deleting competitor\");\r\n//     }\r\n//   };\r\n\r\n//   const handleAddJudge = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\r\n//         name: judgeName,\r\n//         event_id: eventId,\r\n//       });\r\n//       alert(\"Judge added successfully\");\r\n//       setJudgeName(\"\");\r\n//       fetchJudges(eventId);\r\n//     } catch (error) {\r\n//       console.error(\"Error adding judge:\", error);\r\n//       alert(\"Error adding judge\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteJudge = async (id) => {\r\n//     try {\r\n//       await axios.delete(\r\n//         `http://localhost:3000/event-admin/delete-judge/${id}`\r\n//       );\r\n//       alert(\"Judge deleted successfully\");\r\n//       fetchJudges(eventId);\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting judge:\", error);\r\n//       alert(\"Error deleting judge\");\r\n//     }\r\n//   };\r\n\r\n//   const handleSaveRounds = async () => {\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"http://localhost:3000/event-admin/save-rounds\",\r\n//         {\r\n//           eventId,\r\n//           rounds: rounds.map((round) => ({\r\n//             name: round.name,\r\n//             category: round.category,\r\n//             sub_category: round.sub_category,\r\n//             board_type: round.board_type,\r\n//             gender: round.gender,\r\n//             age_category: round.age_category,\r\n//             heats: round.heats.map((heat) => ({\r\n//               heat_name: heat.name,\r\n//               competitors: heat.competitors,\r\n//             })),\r\n//           })),\r\n//         }\r\n//       );\r\n//       alert(\"Rounds saved successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error saving rounds:\", error);\r\n//       alert(\"Error saving rounds\");\r\n//     }\r\n//   };\r\n\r\n//   const handleFetchRounds = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//       );\r\n\r\n//       const rounds = response.data;\r\n//       const processedRounds = rounds.map((round) => {\r\n//         return {\r\n//           ...round,\r\n//           heats: round.heats.map((heat) => ({\r\n//             ...heat,\r\n//             competitors: heat.competitors.map((competitor) => ({\r\n//               id: competitor.id,\r\n//               name: competitor.name,\r\n//             })),\r\n//           })),\r\n//         };\r\n//       });\r\n\r\n//       setRounds(processedRounds);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rounds:\", error);\r\n//       alert(\"Error fetching rounds\");\r\n//     }\r\n//   };\r\n\r\n//   const handleGeneratePDF = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`,\r\n//         { responseType: \"blob\" }\r\n//       );\r\n//       const url = window.URL.createObjectURL(new Blob([response.data]));\r\n//       const link = document.createElement(\"a\");\r\n//       link.href = url;\r\n//       link.setAttribute(\"download\", \"rounds.pdf\");\r\n//       document.body.appendChild(link);\r\n//       link.click();\r\n//     } catch (error) {\r\n//       console.error(\"Error generating PDF:\", error);\r\n//       alert(\"Error generating PDF\");\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateRounds = () => {\r\n//     const newRounds = [];\r\n//     const competitorsByCategory = {};\r\n\r\n//     // Organize competitors by their categories and sub-categories\r\n//     competitors.forEach((competitor) => {\r\n//       const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\r\n//       if (!competitorsByCategory[key]) {\r\n//         competitorsByCategory[key] = [];\r\n//       }\r\n//       competitorsByCategory[key].push(competitor);\r\n//     });\r\n\r\n//     // Create rounds and heats for each category\r\n//     Object.keys(competitorsByCategory).forEach((key) => {\r\n//       const competitorsList = competitorsByCategory[key];\r\n//       let roundNumber = 1;\r\n//       let heatNumber = 1;\r\n\r\n//       for (let i = 0; i < competitorsList.length; i += 4) {\r\n//         const roundName = `Round ${roundNumber} (${key})`;\r\n//         const heatCompetitors = competitorsList.slice(i, i + 4);\r\n\r\n//         let round = newRounds.find((r) => r.name === roundName);\r\n//         if (!round) {\r\n//           round = {\r\n//             name: roundName,\r\n//             category: competitorsList[0].category,\r\n//             sub_category: competitorsList[0].sub_category,\r\n//             board_type: competitorsList[0].board_type,\r\n//             gender: competitorsList[0].gender,\r\n//             age_category: competitorsList[0].age_category,\r\n//             heats: [],\r\n//           };\r\n//           newRounds.push(round);\r\n//         }\r\n\r\n//         round.heats.push({\r\n//           id: `heat-${roundNumber}-${heatNumber}`,\r\n//           name: `Heat ${heatNumber}`,\r\n//           competitors: heatCompetitors,\r\n//         });\r\n\r\n//         heatNumber++;\r\n//         if (heatNumber > 4) {\r\n//           heatNumber = 1;\r\n//           roundNumber++;\r\n//         }\r\n//       }\r\n//     });\r\n\r\n//     setRounds(newRounds);\r\n//   };\r\n\r\n//   const handleDragEnd = (result) => {\r\n//     if (!result.destination) {\r\n//       return;\r\n//     }\r\n\r\n//     const sourceHeatIndex = heats.findIndex(\r\n//       (heat) => heat.id === result.source.droppableId\r\n//     );\r\n//     const destinationHeatIndex = heats.findIndex(\r\n//       (heat) => heat.id === result.destination.droppableId\r\n//     );\r\n\r\n//     if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\r\n//       return;\r\n//     }\r\n\r\n//     const sourceHeat = heats[sourceHeatIndex];\r\n//     const destinationHeat = heats[destinationHeatIndex];\r\n\r\n//     const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\r\n//     destinationHeat.competitors.splice(result.destination.index, 0, movedItem);\r\n\r\n//     const updatedHeats = heats.map((heat) => {\r\n//       if (heat.id === sourceHeat.id) {\r\n//         return sourceHeat;\r\n//       }\r\n//       if (heat.id === destinationHeat.id) {\r\n//         return destinationHeat;\r\n//       }\r\n//       return heat;\r\n//     });\r\n\r\n//     setHeats(updatedHeats);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2>Manage Events</h2>\r\n//       <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n//         <div className=\"form-group\">\r\n//           <label>Event Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             className=\"form-control\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group mt-3\">\r\n//           <label>Location:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={location}\r\n//             onChange={(e) => setLocation(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//           Create Event\r\n//         </button>\r\n//       </form>\r\n\r\n//       <h3>Existing Events</h3>\r\n//       {events.length === 0 ? (\r\n//         <p>No events available. Please create an event.</p>\r\n//       ) : (\r\n//         <ul className=\"list-group\">\r\n//           {events.map((event) => (\r\n//             <li\r\n//               key={event.id}\r\n//               className={`list-group-item d-flex justify-content-between align-items-center ${\r\n//                 eventId === event.id ? \"active\" : \"\"\r\n//               }`}\r\n//               style={{ cursor: \"pointer\" }}\r\n//               onClick={() => {\r\n//                 fetchCompetitors(event.id, event.name);\r\n//                 fetchJudges(event.id);\r\n//               }}\r\n//             >\r\n//               {event.name}\r\n//               <button\r\n//                 className=\"btn btn-danger\"\r\n//                 onClick={() => handleDeleteEvent(event.id)}\r\n//               >\r\n//                 Delete\r\n//               </button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n\r\n//       {eventId ? (\r\n//         <>\r\n//           <h3>Manage Competitors for {selectedEventName}</h3>\r\n//           <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n//             <div className=\"form-group\">\r\n//               <label>Competitor Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 value={competitorName}\r\n//                 onChange={(e) => setCompetitorName(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Category:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={category}\r\n//                 onChange={(e) => setCategory(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select Category</option>\r\n//                 {categories.map((cat) => (\r\n//                   <option key={cat} value={cat}>\r\n//                     {cat}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Sub Category:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={subCategory}\r\n//                 onChange={(e) => setSubCategory(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select Sub Category</option>\r\n//                 {subCategories.map((subCat) => (\r\n//                   <option key={subCat} value={subCat}>\r\n//                     {subCat}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Board Type:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={boardType}\r\n//                 onChange={(e) => setBoardType(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select Board Type</option>\r\n//                 {categories.map((type) => (\r\n//                   <option key={type} value={type}>\r\n//                     {type}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Gender:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={gender}\r\n//                 onChange={(e) => setGender(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select Gender</option>\r\n//                 {subCategories.map((g) => (\r\n//                   <option key={g} value={g}>\r\n//                     {g}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"form-group mt-3\">\r\n//               <label>Age Category:</label>\r\n//               <select\r\n//                 className=\"form-control\"\r\n//                 value={ageCategory}\r\n//                 onChange={(e) => setAgeCategory(e.target.value)}\r\n//                 required\r\n//               >\r\n//                 <option value=\"\">Select Age Category</option>\r\n//                 {ageCategories.map((cat) => (\r\n//                   <option key={cat} value={cat}>\r\n//                     {cat}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//               Add Competitor\r\n//             </button>\r\n//           </form>\r\n\r\n//           <h3>Existing Competitors</h3>\r\n//           <ul className=\"list-group\">\r\n//             {competitors.map((competitor) => (\r\n//               <li\r\n//                 key={competitor.id}\r\n//                 className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n//               >\r\n//                 {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\r\n//                 {competitor.category}, Sub Category: {competitor.sub_category},\r\n//                 Board Type: {competitor.board_type}, Gender: {competitor.gender}\r\n//                 , Age Category: {competitor.age_category})\r\n//                 <button\r\n//                   className=\"btn btn-danger\"\r\n//                   onClick={() => handleDeleteCompetitor(competitor.id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n\r\n//           <h3>Manage Judges for {selectedEventName}</h3>\r\n//           <form onSubmit={handleAddJudge} className=\"mb-4\">\r\n//             <div className=\"form-group\">\r\n//               <label>Judge Name:</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 value={judgeName}\r\n//                 onChange={(e) => setJudgeName(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//               Add Judge\r\n//             </button>\r\n//           </form>\r\n\r\n//           <h3>Existing Judges</h3>\r\n//           <ul className=\"list-group\">\r\n//             {judges.map((judge) => (\r\n//               <li\r\n//                 key={judge.id}\r\n//                 className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n//               >\r\n//                 {judge.name} (Event: {selectedEventName})\r\n//                 <button\r\n//                   className=\"btn btn-danger\"\r\n//                   onClick={() => handleDeleteJudge(judge.id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n\r\n//           <h3>Rounds</h3>\r\n//           <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\r\n//             Create Rounds\r\n//           </button>\r\n//           <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\r\n//             Save Rounds\r\n//           </button>\r\n//           <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\r\n//             Show All Rounds\r\n//           </button>\r\n//           <button\r\n//             className=\"btn btn-secondary mt-0\"\r\n//             onClick={handleGeneratePDF}\r\n//           >\r\n//             Generate PDF\r\n//           </button>\r\n\r\n//           <DragDropContext onDragEnd={handleDragEnd}>\r\n//             {rounds.map((round) => (\r\n//               <Droppable droppableId={round.id} key={round.id}>\r\n//                 {(provided) => (\r\n//                   <div\r\n//                     ref={provided.innerRef}\r\n//                     {...provided.droppableProps}\r\n//                     className=\"mb-4\"\r\n//                   >\r\n//                     <h4>{round.name}</h4>\r\n//                     {round.heats.map((heat, index) => (\r\n//                       <div key={heat.id}>\r\n//                         <h5>Heat {index + 1}</h5>\r\n//                         <Droppable droppableId={heat.id}>\r\n//                           {(provided) => (\r\n//                             <div\r\n//                               ref={provided.innerRef}\r\n//                               {...provided.droppableProps}\r\n//                               className=\"list-group\"\r\n//                             >\r\n//                               {heat.competitors.map((competitor, idx) => (\r\n//                                 <Draggable\r\n//                                   key={competitor.id}\r\n//                                   draggableId={competitor.id.toString()}\r\n//                                   index={idx}\r\n//                                 >\r\n//                                   {(provided) => (\r\n//                                     <div\r\n//                                       ref={provided.innerRef}\r\n//                                       {...provided.draggableProps}\r\n//                                       {...provided.dragHandleProps}\r\n//                                       className=\"list-group-item\"\r\n//                                     >\r\n//                                       {competitor.name}\r\n//                                     </div>\r\n//                                   )}\r\n//                                 </Draggable>\r\n//                               ))}\r\n//                               {provided.placeholder}\r\n//                             </div>\r\n//                           )}\r\n//                         </Droppable>\r\n//                       </div>\r\n//                     ))}\r\n//                     {provided.placeholder}\r\n//                   </div>\r\n//                 )}\r\n//               </Droppable>\r\n//             ))}\r\n//           </DragDropContext>\r\n\r\n//           <h3>Rounds for {selectedEventName}</h3>\r\n//           {rounds.map((round, roundIndex) => (\r\n//             <div key={roundIndex} className=\"mb-4\">\r\n//               <h4>\r\n//                 Round {roundIndex + 1} ({round.category}, {round.sub_category},{\" \"}\r\n//                 {round.board_type}, {round.gender}, {round.age_category})\r\n//               </h4>\r\n//               {round.heats.map((heat, heatIndex) => (\r\n//                 <div key={heatIndex} className=\"mb-2\">\r\n//                   <h5>Heat {heatIndex + 1}</h5>\r\n//                   <ul className=\"list-group\">\r\n//                     {heat.competitors.map((competitor, competitorIndex) => (\r\n//                       <li key={competitorIndex} className=\"list-group-item\">\r\n//                         {competitor.name}\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           ))}\r\n//         </>\r\n//       ) : (\r\n//         <p className=\"mt-4\">\r\n//           Please select an event to manage competitors and judges.\r\n//         </p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EventManagement;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}