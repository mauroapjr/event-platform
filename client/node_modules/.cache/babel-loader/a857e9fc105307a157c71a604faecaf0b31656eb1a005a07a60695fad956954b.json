{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const RoundsDisplay = ({ eventId }) => {\n//   const [rounds, setRounds] = useState([]);\n\n//   const fetchRounds = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//       );\n//       const roundsData = response.data;\n//       console.log(\"Rounds data:\", roundsData);\n\n//       const processedRounds = roundsData.map((round) => ({\n//         id: round.id,\n//         name: round.name, \n//         category: round.category,\n//         sub_category: round.sub_category,\n//         board_type: round.board_type,\n//         gender: round.gender,\n//         age_category: round.age_category,\n//         heats: (round.heats || []).map((heat) => ({\n//           id: heat.id,\n//           name: heat.heat_name,\n//           competitors: (heat.competitors || []).map((competitor) => ({\n//             id: competitor.id,\n//             name: competitor.name,\n//           })),\n//         })),\n//       }));\n\n//       console.log(\"Processed rounds:\", processedRounds);\n\n//       const roundsWithHeats = processedRounds.filter(\n//         (round) => round.heats.length > 0\n//       );\n\n//       setRounds(roundsWithHeats);\n//     } catch (error) {\n//       console.error(\"Error fetching rounds:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (eventId) {\n//       fetchRounds();\n//     }\n//   }, [eventId]);\n\n//   return (\n//     <div>\n//       <h3>Rounds</h3>\n//       {rounds.length === 0 ? (\n//         <p>No rounds with heats available.</p>\n//       ) : (\n//         rounds.map((round) => (\n//           <div key={round.id}>\n//             <h4>{round.name}</h4>\n//             {round.heats.map((heat) => (\n//               <div key={heat.id}>\n//                 <h5>{heat.name}</h5>\n//                 <ul>\n//                   {heat.competitors.map((competitor) => (\n//                     <li key={competitor.id}>{competitor.name}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             ))}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default RoundsDisplay;","map":{"version":3,"names":[],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/RoundsDisplay.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const RoundsDisplay = ({ eventId }) => {\r\n//   const [rounds, setRounds] = useState([]);\r\n\r\n//   const fetchRounds = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//       );\r\n//       const roundsData = response.data;\r\n//       console.log(\"Rounds data:\", roundsData);\r\n\r\n//       const processedRounds = roundsData.map((round) => ({\r\n//         id: round.id,\r\n//         name: round.name, \r\n//         category: round.category,\r\n//         sub_category: round.sub_category,\r\n//         board_type: round.board_type,\r\n//         gender: round.gender,\r\n//         age_category: round.age_category,\r\n//         heats: (round.heats || []).map((heat) => ({\r\n//           id: heat.id,\r\n//           name: heat.heat_name,\r\n//           competitors: (heat.competitors || []).map((competitor) => ({\r\n//             id: competitor.id,\r\n//             name: competitor.name,\r\n//           })),\r\n//         })),\r\n//       }));\r\n\r\n//       console.log(\"Processed rounds:\", processedRounds);\r\n\r\n//       const roundsWithHeats = processedRounds.filter(\r\n//         (round) => round.heats.length > 0\r\n//       );\r\n\r\n//       setRounds(roundsWithHeats);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rounds:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (eventId) {\r\n//       fetchRounds();\r\n//     }\r\n//   }, [eventId]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Rounds</h3>\r\n//       {rounds.length === 0 ? (\r\n//         <p>No rounds with heats available.</p>\r\n//       ) : (\r\n//         rounds.map((round) => (\r\n//           <div key={round.id}>\r\n//             <h4>{round.name}</h4>\r\n//             {round.heats.map((heat) => (\r\n//               <div key={heat.id}>\r\n//                 <h5>{heat.name}</h5>\r\n//                 <ul>\r\n//                   {heat.competitors.map((competitor) => (\r\n//                     <li key={competitor.id}>{competitor.name}</li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RoundsDisplay;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}