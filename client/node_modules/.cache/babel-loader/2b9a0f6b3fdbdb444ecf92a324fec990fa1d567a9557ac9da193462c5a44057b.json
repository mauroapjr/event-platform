{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\EventList.jsx\";\nimport React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsList = ({\n  events = [],\n  fetchCompetitors,\n  fetchJudges,\n  handleDeleteEvent\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: events.map(event => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Location: \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            fetchCompetitors(event.id, event.name);\n            fetchJudges(event.id);\n          },\n          children: \"Manage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          className: \"ml-2\",\n          onClick: () => handleDeleteEvent(event.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = EventsList;\nexport default EventsList;\nvar _c;\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"names":["React","Card","Button","jsxDEV","_jsxDEV","EventsList","events","fetchCompetitors","fetchJudges","handleDeleteEvent","children","map","event","className","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","Date","date","toLocaleDateString","location","variant","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nconst EventsList = ({\r\n  events = [],\r\n  fetchCompetitors,\r\n  fetchJudges,\r\n  handleDeleteEvent,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {events.map((event) => (\r\n        <Card key={event.id} className=\"mb-3\">\r\n          <Card.Body>\r\n            <Card.Title>{event.name}</Card.Title>\r\n            <Card.Text>\r\n              Date: {new Date(event.date).toLocaleDateString()}\r\n            </Card.Text>\r\n            <Card.Text>Location: {event.location}</Card.Text>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                fetchCompetitors(event.id, event.name);\r\n                fetchJudges(event.id);\r\n              }}\r\n            >\r\n              Manage\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"ml-2\"\r\n              onClick={() => handleDeleteEvent(event.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAC;EAClBC,MAAM,GAAG,EAAE;EACXC,gBAAgB;EAChBC,WAAW;EACXC;AACF,CAAC,KAAK;EACJ,oBACEL,OAAA;IAAAM,QAAA,EACGJ,MAAM,CAACK,GAAG,CAAEC,KAAK,iBAChBR,OAAA,CAACH,IAAI;MAAgBY,SAAS,EAAC,MAAM;MAAAH,QAAA,eACnCN,OAAA,CAACH,IAAI,CAACa,IAAI;QAAAJ,QAAA,gBACRN,OAAA,CAACH,IAAI,CAACc,KAAK;UAAAL,QAAA,EAAEE,KAAK,CAACI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACrChB,OAAA,CAACH,IAAI,CAACoB,IAAI;UAAAX,QAAA,GAAC,QACH,EAAC,IAAIY,IAAI,CAACV,KAAK,CAACW,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACZhB,OAAA,CAACH,IAAI,CAACoB,IAAI;UAAAX,QAAA,GAAC,YAAU,EAACE,KAAK,CAACa,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACjDhB,OAAA,CAACF,MAAM;UACLwB,OAAO,EAAC,SAAS;UACjBC,OAAO,EAAEA,CAAA,KAAM;YACbpB,gBAAgB,CAACK,KAAK,CAACgB,EAAE,EAAEhB,KAAK,CAACI,IAAI,CAAC;YACtCR,WAAW,CAACI,KAAK,CAACgB,EAAE,CAAC;UACvB,CAAE;UAAAlB,QAAA,EACH;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThB,OAAA,CAACF,MAAM;UACLwB,OAAO,EAAC,QAAQ;UAChBb,SAAS,EAAC,MAAM;UAChBc,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACG,KAAK,CAACgB,EAAE,CAAE;UAAAlB,QAAA,EAC5C;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC,GAvBHR,KAAK,CAACgB,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwBb,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACS,EAAA,GArCIxB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}