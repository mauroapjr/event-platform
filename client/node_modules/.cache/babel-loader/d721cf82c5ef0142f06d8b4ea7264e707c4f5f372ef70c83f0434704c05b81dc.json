{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\RoundsDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Card, ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundsDisplay = ({\n  eventId\n}) => {\n  _s();\n  const [rounds, setRounds] = useState([]);\n  const fetchRounds = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-rounds/${eventId}`);\n      const roundsData = response.data;\n      console.log(\"Rounds data:\", roundsData);\n      const processedRounds = roundsData.map(round => ({\n        id: round.id,\n        name: round.round_name,\n        category: round.category,\n        sub_category: round.sub_category,\n        board_type: round.board_type,\n        gender: round.gender,\n        age_category: round.age_category,\n        heats: (round.heats || []).map(heat => ({\n          id: heat.id,\n          name: heat.heat_name,\n          competitors: (heat.competitors || []).map(competitor => ({\n            id: competitor.id,\n            name: competitor.name\n          }))\n        }))\n      }));\n      console.log(\"Processed rounds:\", processedRounds);\n\n      // Filter only rounds with heats\n      const roundsWithHeats = processedRounds.filter(round => round.heats.length > 0);\n      setRounds(roundsWithHeats);\n    } catch (error) {\n      console.error(\"Error fetching rounds:\", error);\n    }\n  };\n  useEffect(() => {\n    if (eventId) {\n      fetchRounds();\n    }\n  }, [eventId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rounds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), rounds.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rounds with heats available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: rounds.map(round => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: round.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: [round.category, \", \", round.sub_category, \", \", round.board_type, \", \", round.gender, \", \", round.age_category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), round.heats.map(heat => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: heat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: heat.competitors.map(competitor => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: competitor.name\n                }, competitor.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this)]\n            }, heat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, round.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(RoundsDisplay, \"mcpu5iWVfb9q488nYSdJKBDnof4=\");\n_c = RoundsDisplay;\nexport default RoundsDisplay;\nvar _c;\n$RefreshReg$(_c, \"RoundsDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Row","Col","Card","ListGroup","jsxDEV","_jsxDEV","RoundsDisplay","eventId","_s","rounds","setRounds","fetchRounds","response","get","roundsData","data","console","log","processedRounds","map","round","id","name","round_name","category","sub_category","board_type","gender","age_category","heats","heat","heat_name","competitors","competitor","roundsWithHeats","filter","length","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sm","md","lg","Body","Title","Subtitle","Item","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/RoundsDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col, Card, ListGroup } from \"react-bootstrap\";\r\n\r\nconst RoundsDisplay = ({ eventId }) => {\r\n  const [rounds, setRounds] = useState([]);\r\n\r\n  const fetchRounds = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n      );\r\n      const roundsData = response.data;\r\n      console.log(\"Rounds data:\", roundsData);\r\n      \r\n      const processedRounds = roundsData.map((round) => ({\r\n        id: round.id,\r\n        name: round.round_name,\r\n        category: round.category,\r\n        sub_category: round.sub_category,\r\n        board_type: round.board_type,\r\n        gender: round.gender,\r\n        age_category: round.age_category,\r\n        heats: (round.heats || []).map((heat) => ({\r\n          id: heat.id,\r\n          name: heat.heat_name,\r\n          competitors: (heat.competitors || []).map((competitor) => ({\r\n            id: competitor.id,\r\n            name: competitor.name,\r\n          })),\r\n        })),\r\n      }));\r\n\r\n      console.log(\"Processed rounds:\", processedRounds);\r\n\r\n      // Filter only rounds with heats\r\n      const roundsWithHeats = processedRounds.filter(round => round.heats.length > 0);\r\n\r\n      setRounds(roundsWithHeats);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rounds:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventId) {\r\n      fetchRounds();\r\n    }\r\n  }, [eventId]);\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <h3>Rounds</h3>\r\n      {rounds.length === 0 ? (\r\n        <p>No rounds with heats available.</p>\r\n      ) : (\r\n        <Row>\r\n          {rounds.map((round) => (\r\n            <Col key={round.id} sm={12} md={6} lg={4} className=\"mb-4\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title>{round.name}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">\r\n                    {round.category}, {round.sub_category}, {round.board_type}, {round.gender}, {round.age_category}\r\n                  </Card.Subtitle>\r\n                  {round.heats.map((heat) => (\r\n                    <div key={heat.id}>\r\n                      <h5>{heat.name}</h5>\r\n                      <ListGroup>\r\n                        {heat.competitors.map((competitor) => (\r\n                          <ListGroup.Item key={competitor.id}>\r\n                            {competitor.name}\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>\r\n                    </div>\r\n                  ))}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RoundsDisplay;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}