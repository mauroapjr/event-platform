{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React_Projects\\\\event-platform\\\\client\\\\src\\\\components\\\\EventManagement.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const categories = [\"Shortboard\", \"Longboard\"];\n// const subCategories = [\"Men\", \"Women\"];\n// const ageCategories = [\n//   \"Open\",\n//   \"Sub12\",\n//   \"Sub14\",\n//   \"Sub18\",\n//   \"Professional\",\n//   \"+40\",\n//   \"+45\",\n//   \"+50\",\n//   \"+60\",\n//   \"+65\",\n//   \"+70\",\n// ];\n\n// const EventManagement = () => {\n//   const [events, setEvents] = useState([]);\n//   const [competitors, setCompetitors] = useState([]);\n//   const [judges, setJudges] = useState([]);\n//   const [rounds, setRounds] = useState([]);\n//   const [showRounds, setShowRounds] = useState(false);\n//   const [eventId, setEventId] = useState(null);\n//   const [name, setName] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n//   const [location, setLocation] = useState(\"\");\n//   const [competitorName, setCompetitorName] = useState(\"\");\n//   const [category, setCategory] = useState(categories[0]);\n//   const [subCategory, setSubCategory] = useState(subCategories[0]);\n//   const [boardType, setBoardType] = useState(categories[0]);\n//   const [gender, setGender] = useState(subCategories[0]);\n//   const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\n//   const [judgeName, setJudgeName] = useState(\"\");\n//   const [createdBy, setCreatedBy] = useState(1);\n//   const [selectedEventName, setSelectedEventName] = useState(\"\");\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get(\n//         \"http://localhost:3000/event-admin/get-events\"\n//       );\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching events:\", error);\n//     }\n//   };\n\n//   const fetchCompetitors = async (eventId, eventName) => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-competitors/${eventId}`\n//       );\n//       setCompetitors(response.data);\n//       setEventId(eventId);\n//       setSelectedEventName(eventName);\n//     } catch (error) {\n//       console.error(\"Error fetching competitors:\", error);\n//     }\n//   };\n\n//   const fetchJudges = async (eventId) => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-judges/${eventId}`\n//       );\n//       setJudges(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching judges:\", error);\n//     }\n//   };\n\n//   const handleCreateEvent = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\"http://localhost:3000/event-admin/create-event\", {\n//         name,\n//         date,\n//         location,\n//         created_by: createdBy,\n//       });\n//       alert(\"Event created successfully\");\n//       setName(\"\");\n//       setDate(\"\");\n//       setLocation(\"\");\n//       fetchEvents();\n//     } catch (error) {\n//       console.error(\"Error creating event:\", error);\n//       alert(\"Error creating event\");\n//     }\n//   };\n\n//   const handleDeleteEvent = async (id) => {\n//     try {\n//       await axios.delete(\n//         `http://localhost:3000/event-admin/delete-event/${id}`\n//       );\n//       alert(\"Event deleted successfully\");\n//       fetchEvents();\n//     } catch (error) {\n//       console.error(\"Error deleting event:\", error);\n//       alert(\"Error deleting event\");\n//     }\n//   };\n\n//   const handleAddCompetitor = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\n//         name: competitorName,\n//         event_id: eventId,\n//         category,\n//         sub_category: subCategory,\n//         board_type: boardType,\n//         gender,\n//         age_category: ageCategory,\n//       });\n//       alert(\"Competitor added successfully\");\n//       setCompetitorName(\"\");\n//       setCategory(categories[0]);\n//       setSubCategory(subCategories[0]);\n//       setBoardType(categories[0]);\n//       setGender(subCategories[0]);\n//       setAgeCategory(ageCategories[0]);\n//       fetchCompetitors(eventId, selectedEventName);\n//     } catch (error) {\n//       console.error(\"Error adding competitor:\", error);\n//       alert(\"Error adding competitor\");\n//     }\n//   };\n\n//   const handleDeleteCompetitor = async (id) => {\n//     try {\n//       await axios.delete(\n//         `http://localhost:3000/event-admin/delete-competitor/${id}`\n//       );\n//       alert(\"Competitor deleted successfully\");\n//       fetchCompetitors(eventId, selectedEventName);\n//     } catch (error) {\n//       console.error(\"Error deleting competitor:\", error);\n//       alert(\"Error deleting competitor\");\n//     }\n//   };\n\n//   const handleAddJudge = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\n//         name: judgeName,\n//         event_id: eventId,\n//       });\n//       alert(\"Judge added successfully\");\n//       setJudgeName(\"\");\n//       fetchJudges(eventId);\n//     } catch (error) {\n//       console.error(\"Error adding judge:\", error);\n//       alert(\"Error adding judge\");\n//     }\n//   };\n\n//   const handleDeleteJudge = async (id) => {\n//     try {\n//       await axios.delete(\n//         `http://localhost:3000/event-admin/delete-judge/${id}`\n//       );\n//       alert(\"Judge deleted successfully\");\n//       fetchJudges(eventId);\n//     } catch (error) {\n//       console.error(\"Error deleting judge:\", error);\n//       alert(\"Error deleting judge\");\n//     }\n//   };\n\n//   const handleSaveRounds = async () => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3000/event-admin/save-rounds\",\n//         {\n//           eventId,\n//           rounds: rounds.map((round) => ({\n//             name: round.name,\n//             category: round.category,\n//             sub_category: round.sub_category,\n//             board_type: round.board_type,\n//             gender: round.gender,\n//             age_category: round.age_category,\n//             heats: round.heats.map((heat) => ({\n//               heat_name: heat.name,\n//               competitors: heat.competitors.map((competitor) => ({\n//                 id: competitor.id,\n//                 name: competitor.name,\n//               })),\n//             })),\n//           })),\n//         }\n//       );\n\n//       console.log(\"Rounds and heats saved successfully:\", response.data);\n//       alert(\"Rounds saved successfully\");\n//     } catch (error) {\n//       console.error(\"Error saving rounds:\", error);\n//       alert(\"Error saving rounds\");\n//     }\n//   };\n\n//   // const handleSaveRounds = async () => {\n//   //   try {\n//   //     const response = await axios.post(\n//   //       \"http://localhost:3000/event-admin/save-rounds\",\n//   //       {\n//   //         eventId,\n//   //         rounds: rounds.map((round) => ({\n//   //           name: round.name,\n//   //           category: round.category,\n//   //           sub_category: round.sub_category,\n//   //           board_type: round.board_type,\n//   //           gender: round.gender,\n//   //           age_category: round.age_category,\n//   //           heats: round.heats.map((heat) => ({\n//   //             heat_name: heat.name,\n//   //             competitors: heat.competitors.map((competitor) => ({\n//   //               id: competitor.id,\n//   //               name: competitor.name,\n//   //             })),\n//   //           })),\n//   //         })),\n//   //       }\n//   //     );\n\n//   //     console.log(\"Rounds and heats saved successfully:\", response.data);\n//   //     alert(\"Rounds saved successfully\");\n//   //   } catch (error) {\n//   //     console.error(\"Error saving rounds:\", error);\n//   //     alert(\"Error saving rounds\");\n//   //   }\n//   // };\n\n//   const handleFetchRounds = async () => {\n//     try {\n//       console.log(\"Fetching rounds for event ID:\", eventId);\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//       );\n//       console.log(\"Response received from server:\", response);\n\n//       const rounds = response.data;\n//       console.log(\"Rounds data:\", rounds);\n\n//       const processedRounds = rounds.map((round) => {\n//         console.log(\"Processing round:\", round);\n//         return {\n//           ...round,\n//           heats: round.heats.map((heat) => {\n//             console.log(\"Processing heat:\", heat);\n//             return {\n//               ...heat,\n//               competitors: heat.competitors.map((competitor) => ({\n//                 id: competitor.id,\n//                 name: competitor.name,\n//               })),\n//             };\n//           }),\n//         };\n//       });\n\n//       console.log(\"Processed rounds:\", processedRounds);\n//       setRounds(processedRounds);\n//       setShowRounds(true);\n//     } catch (error) {\n//       console.error(\"Error fetching rounds:\", error);\n//       alert(\"Error fetching rounds\");\n//     }\n//   };\n\n//   // const handleFetchRounds = async () => {\n//   //   try {\n//   //     console.log(\"Fetching rounds for event ID:\", eventId);\n//   //     const response = await axios.get(\n//   //       `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//   //     );\n//   //     console.log(\"Response received from server:\", response);\n\n//   //     const rounds = response.data;\n//   //     console.log(\"Rounds data:\", rounds);\n\n//   //     const processedRounds = rounds.map((round) => {\n//   //       console.log(\"Processing round:\", round);\n//   //       return {\n//   //         ...round,\n//   //         heats: (round.heats || []).map((heat) => {\n//   //           console.log(\"Processing heat:\", heat);\n//   //           return {\n//   //             ...heat,\n//   //             competitors: (heat.competitors || []).map((competitor) => ({\n//   //               id: competitor.id,\n//   //               name: competitor.name,\n//   //             })),\n//   //           };\n//   //         }),\n//   //       };\n//   //     });\n\n//   //     console.log(\"Processed rounds:\", processedRounds);\n//   //     setRounds(processedRounds);\n//   //     setShowRounds(true);\n//   //   } catch (error) {\n//   //     console.error(\"Error fetching rounds:\", error);\n//   //     alert(\"Error fetching rounds\");\n//   //   }\n//   // };\n\n//   // const handleFetchRounds = async () => {\n//   //   try {\n//   //     const response = await axios.get(\n//   //       `http://localhost:3000/event-admin/get-rounds/${eventId}`\n//   //     );\n//   //     const { rounds } = response.data;\n\n//   //     const processedRounds = rounds.map((round) => {\n//   //       return {\n//   //         ...round,\n//   //         heats: round.heats.map((heat) => ({\n//   //           ...heat,\n//   //           competitors: heat.competitors.map((competitor) => ({\n//   //             id: competitor.id,\n//   //             name: competitor.name,\n//   //           })),\n//   //         })),\n//   //       };\n//   //     });\n\n//   //     setRounds(processedRounds);\n//   //   } catch (error) {\n//   //     console.error(\"Error fetching rounds:\", error);\n//   //     alert(\"Error fetching rounds\");\n//   //   }\n//   // };\n\n//   const handleGeneratePDF = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`,\n//         { responseType: \"blob\" }\n//       );\n//       const url = window.URL.createObjectURL(new Blob([response.data]));\n//       const link = document.createElement(\"a\");\n//       link.href = url;\n//       link.setAttribute(\"download\", \"rounds.pdf\");\n//       document.body.appendChild(link);\n//       link.click();\n//     } catch (error) {\n//       console.error(\"Error generating PDF:\", error);\n//       alert(\"Error generating PDF\");\n//     }\n//   };\n\n//   const handleCreateRounds = () => {\n//     if (!eventId) {\n//       alert(\"Please select an event first.\");\n//       return;\n//     }\n\n//     const competitorsByCategory = {};\n\n//     // Organize competitors by their categories and sub-categories\n//     competitors.forEach((competitor) => {\n//       const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\n//       if (!competitorsByCategory[key]) {\n//         competitorsByCategory[key] = [];\n//       }\n//       competitorsByCategory[key].push(competitor);\n//     });\n\n//     const newRounds = [];\n\n//     // Create one round for each category and add heats\n//     Object.keys(competitorsByCategory).forEach((key) => {\n//       const competitorsList = competitorsByCategory[key];\n//       const heats = [];\n\n//       for (let i = 0; i < competitorsList.length; i += 4) {\n//         const heatCompetitors = competitorsList.slice(i, i + 4);\n\n//         heats.push({\n//           id: `heat-1-${heats.length + 1}`,\n//           name: `Heat ${heats.length + 1}`,\n//           competitors: heatCompetitors,\n//         });\n//       }\n\n//       newRounds.push({\n//         name: `Round 1 (${key})`,\n//         category: competitorsList[0].category,\n//         sub_category: competitorsList[0].sub_category,\n//         board_type: competitorsList[0].board_type,\n//         gender: competitorsList[0].gender,\n//         age_category: competitorsList[0].age_category,\n//         heats,\n//       });\n//     });\n\n//     setRounds(newRounds);\n//     console.log(\"Created rounds:\", newRounds);\n//   };\n\n//   // const handleCreateRounds = () => {\n//   //   const newRounds = [];\n//   //   const competitorsByCategory = {};\n\n//   //   // Organize competitors by their categories and sub-categories\n//   //   competitors.forEach((competitor) => {\n//   //     const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\n//   //     if (!competitorsByCategory[key]) {\n//   //       competitorsByCategory[key] = [];\n//   //     }\n//   //     competitorsByCategory[key].push(competitor);\n//   //   });\n\n//   //   // Create rounds and heats for each category\n//   //   Object.keys(competitorsByCategory).forEach((key) => {\n//   //     const competitorsList = competitorsByCategory[key];\n//   //     let roundNumber = 1;\n//   //     let heatNumber = 1;\n\n//   //     for (let i = 0; i < competitorsList.length; i += 4) {\n//   //       const roundName = `Round ${roundNumber} (${key})`;\n//   //       const heatCompetitors = competitorsList.slice(i, i + 4);\n\n//   //       let round = newRounds.find((r) => r.name === roundName);\n//   //       if (!round) {\n//   //         round = {\n//   //           name: roundName,\n//   //           category: competitorsList[0].category,\n//   //           sub_category: competitorsList[0].sub_category,\n//   //           board_type: competitorsList[0].board_type,\n//   //           gender: competitorsList[0].gender,\n//   //           age_category: competitorsList[0].age_category,\n//   //           heats: [],\n//   //         };\n//   //         newRounds.push(round);\n//   //       }\n\n//   //       round.heats.push({\n//   //         id: `heat-${roundNumber}-${heatNumber}`,\n//   //         name: `Heat ${heatNumber}`,\n//   //         competitors: heatCompetitors,\n//   //       });\n\n//   //       heatNumber++;\n//   //       if (heatNumber > 4) {\n//   //         heatNumber = 1;\n//   //         roundNumber++;\n//   //       }\n//   //     }\n//   //   });\n\n//   //   setRounds(newRounds);\n//   // };\n\n//   const handleDragEnd = (result) => {\n//     if (!result.destination) {\n//       return;\n//     }\n\n//     const sourceHeatIndex = rounds.findIndex((round) =>\n//       round.heats.some((heat) => heat.id === result.source.droppableId)\n//     );\n//     const destinationHeatIndex = rounds.findIndex((round) =>\n//       round.heats.some((heat) => heat.id === result.destination.droppableId)\n//     );\n\n//     if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\n//       return;\n//     }\n\n//     const sourceRound = rounds[sourceHeatIndex];\n//     const destinationRound = rounds[destinationHeatIndex];\n\n//     const sourceHeat = sourceRound.heats.find(\n//       (heat) => heat.id === result.source.droppableId\n//     );\n//     const destinationHeat = destinationRound.heats.find(\n//       (heat) => heat.id === result.destination.droppableId\n//     );\n\n//     const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\n//     destinationHeat.competitors.splice(\n//       result.destination.index,\n//       0,\n//       movedItem\n//     );\n\n//     const updatedRounds = rounds.map((round) => {\n//       if (round.id === sourceRound.id) {\n//         return sourceRound;\n//       }\n//       if (round.id === destinationRound.id) {\n//         return destinationRound;\n//       }\n//       return round;\n//     });\n\n//     setRounds(updatedRounds);\n//   };\n\n//   return (\n//   <div className=\"container mt-5\">\n//     <h2>Manage Events</h2>\n//     <form onSubmit={handleCreateEvent} className=\"mb-4\">\n//       <div className=\"form-group\">\n//         <label>Event Name:</label>\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"form-group mt-3\">\n//         <label>Date:</label>\n//         <input\n//           type=\"date\"\n//           className=\"form-control\"\n//           value={date}\n//           onChange={(e) => setDate(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"form-group mt-3\">\n//         <label>Location:</label>\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           value={location}\n//           onChange={(e) => setLocation(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\" className=\"btn btn-primary mt-3\">\n//         Create Event\n//       </button>\n//     </form>\n\n//     <h3>Existing Events</h3>\n//     {events.length === 0 ? (\n//       <p>No events available. Please create an event.</p>\n//     ) : (\n//       <ul className=\"list-group\">\n//         {events.map((event) => (\n//           <li\n//             key={event.id}\n//             className={`list-group-item d-flex justify-content-between align-items-center ${\n//               eventId === event.id ? \"active\" : \"\"\n//             }`}\n//             style={{ cursor: \"pointer\" }}\n//             onClick={() => {\n//               fetchCompetitors(event.id, event.name);\n//               fetchJudges(event.id);\n//             }}\n//           >\n//             {event.name}\n//             <button\n//               className=\"btn btn-danger\"\n//               onClick={() => handleDeleteEvent(event.id)}\n//             >\n//               Delete\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//     )}\n\n//     {eventId ? (\n//       <>\n//         <h3>Manage Competitors for {selectedEventName}</h3>\n//         <form onSubmit={handleAddCompetitor} className=\"mb-4\">\n//           <div className=\"form-group\">\n//             <label>Competitor Name:</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               value={competitorName}\n//               onChange={(e) => setCompetitorName(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <div className=\"form-group mt-3\">\n//             <label>Category:</label>\n//             <select\n//               className=\"form-control\"\n//               value={category}\n//               onChange={(e) => setCategory(e.target.value)}\n//               required\n//             >\n//               <option value=\"\">Select Category</option>\n//               {categories.map((cat) => (\n//                 <option key={cat} value={cat}>\n//                   {cat}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group mt-3\">\n//             <label>Sub Category:</label>\n//             <select\n//               className=\"form-control\"\n//               value={subCategory}\n//               onChange={(e) => setSubCategory(e.target.value)}\n//               required\n//             >\n//               <option value=\"\">Select Sub Category</option>\n//               {subCategories.map((subCat) => (\n//                 <option key={subCat} value={subCat}>\n//                   {subCat}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group mt-3\">\n//             <label>Board Type:</label>\n//             <select\n//               className=\"form-control\"\n//               value={boardType}\n//               onChange={(e) => setBoardType(e.target.value)}\n//               required\n//             >\n//               <option value=\"\">Select Board Type</option>\n//               {categories.map((type) => (\n//                 <option key={type} value={type}>\n//                   {type}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group mt-3\">\n//             <label>Gender:</label>\n//             <select\n//               className=\"form-control\"\n//               value={gender}\n//               onChange={(e) => setGender(e.target.value)}\n//               required\n//             >\n//               <option value=\"\">Select Gender</option>\n//               {subCategories.map((g) => (\n//                 <option key={g} value={g}>\n//                   {g}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group mt-3\">\n//             <label>Age Category:</label>\n//             <select\n//               className=\"form-control\"\n//               value={ageCategory}\n//               onChange={(e) => setAgeCategory(e.target.value)}\n//               required\n//             >\n//               <option value=\"\">Select Age Category</option>\n//               {ageCategories.map((cat) => (\n//                 <option key={cat} value={cat}>\n//                   {cat}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary mt-3\">\n//             Add Competitor\n//           </button>\n//         </form>\n\n//         <h3>Existing Competitors</h3>\n//         <ul className=\"list-group\">\n//           {competitors.map((competitor) => (\n//             <li\n//               key={competitor.id}\n//               className=\"list-group-item d-flex justify-content-between align-items-center\"\n//             >\n//               {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\n//               {competitor.category}, Sub Category: {competitor.sub_category},\n//               Board Type: {competitor.board_type}, Gender: {competitor.gender}\n//               , Age Category: {competitor.age_category})\n//               <button\n//                 className=\"btn btn-danger\"\n//                 onClick={() => handleDeleteCompetitor(competitor.id)}\n//               >\n//                 Delete\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n\n//         <h3>Manage Judges for {selectedEventName}</h3>\n//         <form onSubmit={handleAddJudge} className=\"mb-4\">\n//           <div className=\"form-group\">\n//             <label>Judge Name:</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               value={judgeName}\n//               onChange={(e) => setJudgeName(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary mt-3\">\n//             Add Judge\n//           </button>\n//         </form>\n\n//         <h3>Existing Judges</h3>\n//         <ul className=\"list-group\">\n//           {judges.map((judge) => (\n//             <li\n//               key={judge.id}\n//               className=\"list-group-item d-flex justify-content-between align-items-center\"\n//             >\n//               {judge.name} (Event: {selectedEventName})\n//               <button\n//                 className=\"btn btn-danger\"\n//                 onClick={() => handleDeleteJudge(judge.id)}\n//               >\n//                 Delete\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n\n//         <h3>Rounds</h3>\n//       <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\n//         Create Rounds\n//       </button>\n//       <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\n//         Save Rounds\n//       </button>\n//       <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\n//         Show All Rounds\n//       </button>\n//       <button\n//         className=\"btn btn-secondary mt-0\"\n//         onClick={handleGeneratePDF}\n//       >\n//         Generate PDF\n//       </button>\n\n//       <DragDropContext onDragEnd={handleDragEnd}>\n//         {rounds.map((round) => (\n//           <Droppable droppableId={round.id.toString()} key={round.id}>\n//             {(provided) => (\n//               <div\n//                 ref={provided.innerRef}\n//                 {...provided.droppableProps}\n//                 className=\"mb-4\"\n//               >\n//                 <h4>{round.name}</h4>\n//                 {round.heats.map((heat, index) => (\n//                   <Droppable droppableId={`heat-${heat.id}`} key={heat.id}>\n//                     {(provided) => (\n//                       <div\n//                         ref={provided.innerRef}\n//                         {...provided.droppableProps}\n//                         className=\"list-group mb-3\"\n//                       >\n//                         <h5>Heat {index + 1}</h5>\n//                         {heat.competitors.map((competitor, idx) => (\n//                           <Draggable\n//                             key={competitor.id}\n//                             draggableId={competitor.id.toString()}\n//                             index={idx}\n//                           >\n//                             {(provided) => (\n//                               <div\n//                                 ref={provided.innerRef}\n//                                 {...provided.draggableProps}\n//                                 {...provided.dragHandleProps}\n//                                 className=\"list-group-item\"\n//                               >\n//                                 {competitor.name}\n//                               </div>\n//                             )}\n//                           </Draggable>\n//                         ))}\n//                         {provided.placeholder}\n//                       </div>\n//                     )}\n//                   </Droppable>\n//                 ))}\n//                 {provided.placeholder}\n//               </div>\n//             )}\n//           </Droppable>\n//         ))}\n//       </DragDropContext>\n\n//       {showRounds && (\n//         <>\n//           <h3>Rounds for {selectedEventName}</h3>\n//           {rounds.map((round, roundIndex) => (\n//             <div key={roundIndex} className=\"mb-4\">\n//               <h4>\n//                 Round {roundIndex + 1} ({round.category}, {round.sub_category},{\" \"}\n//                 {round.board_type}, {round.gender}, {round.age_category})\n//               </h4>\n//               {round.heats.map((heat, heatIndex) => (\n//                 <div key={heatIndex} className=\"mb-2\">\n//                   <h5>Heat {heatIndex + 1}</h5>\n//                   <ul className=\"list-group\">\n//                     {heat.competitors.map((competitor, competitorIndex) => (\n//                       <li key={competitorIndex} className=\"list-group-item\">\n//                         {competitor.name}\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//               ))}\n//             </div>\n//           ))}\n//         </>\n//         )}\n//       </>\n//     ) : (\n//       <p className=\"mt-4\">\n//         Please select an event to manage competitors and judges.\n//       </p>\n//     )}\n//   </div>\n// );\n// };\n\n// export default EventManagement;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventManagement = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  //   const [competitors, setCompetitors] = useState([]);\n  //   const [judges, setJudges] = useState([]);\n  //   const [rounds, setRounds] = useState([]);\n  //   const [showRounds, setShowRounds] = useState(false);\n  //   const [eventId, setEventId] = useState(null);\n  //   const [name, setName] = useState(\"\");\n  //   const [date, setDate] = useState(\"\");\n  //   const [location, setLocation] = useState(\"\");\n  //   const [competitorName, setCompetitorName] = useState(\"\");\n  //   const [category, setCategory] = useState(categories[0]);\n  //   const [subCategory, setSubCategory] = useState(subCategories[0]);\n  //   const [boardType, setBoardType] = useState(categories[0]);\n  //   const [gender, setGender] = useState(subCategories[0]);\n  //   const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\n  //   const [judgeName, setJudgeName] = useState(\"\");\n  //   const [createdBy, setCreatedBy] = useState(1);\n  //   const [selectedEventName, setSelectedEventName] = useState(\"\");\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/event-admin/get-events\");\n      setEvents(response.data);\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n    }\n  };\n  const fetchCompetitors = async (eventId, eventName) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-competitors/${eventId}`);\n      setCompetitors(response.data);\n      setEventId(eventId);\n      setSelectedEventName(eventName);\n    } catch (error) {\n      console.error(\"Error fetching competitors:\", error);\n    }\n  };\n  const fetchJudges = async eventId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/get-judges/${eventId}`);\n      setJudges(response.data);\n    } catch (error) {\n      console.error(\"Error fetching judges:\", error);\n    }\n  };\n  const handleCreateEvent = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/create-event\", {\n        name,\n        date,\n        location,\n        created_by: createdBy\n      });\n      alert(\"Event created successfully\");\n      setName(\"\");\n      setDate(\"\");\n      setLocation(\"\");\n      fetchEvents();\n    } catch (error) {\n      console.error(\"Error creating event:\", error);\n      alert(\"Error creating event\");\n    }\n  };\n  const handleDeleteEvent = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-event/${id}`);\n      alert(\"Event deleted successfully\");\n      fetchEvents();\n    } catch (error) {\n      console.error(\"Error deleting event:\", error);\n      alert(\"Error deleting event\");\n    }\n  };\n  const handleAddCompetitor = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\n        name: competitorName,\n        event_id: eventId,\n        category,\n        sub_category: subCategory,\n        board_type: boardType,\n        gender,\n        age_category: ageCategory\n      });\n      alert(\"Competitor added successfully\");\n      setCompetitorName(\"\");\n      setCategory(\"Shortboard\");\n      setSubCategory(\"Men\");\n      setBoardType(\"Shortboard\");\n      setGender(\"Men\");\n      setAgeCategory(\"Professional\");\n      fetchCompetitors(eventId, selectedEventName);\n    } catch (error) {\n      console.error(\"Error adding competitor:\", error);\n      alert(\"Error adding competitor\");\n    }\n  };\n  const handleDeleteCompetitor = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-competitor/${id}`);\n      alert(\"Competitor deleted successfully\");\n      fetchCompetitors(eventId, selectedEventName);\n    } catch (error) {\n      console.error(\"Error deleting competitor:\", error);\n      alert(\"Error deleting competitor\");\n    }\n  };\n  const handleAddJudge = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\n        name: judgeName,\n        event_id: eventId\n      });\n      alert(\"Judge added successfully\");\n      setJudgeName(\"\");\n      fetchJudges(eventId);\n    } catch (error) {\n      console.error(\"Error adding judge:\", error);\n      alert(\"Error adding judge\");\n    }\n  };\n  const handleDeleteJudge = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/event-admin/delete-judge/${id}`);\n      alert(\"Judge deleted successfully\");\n      fetchJudges(eventId);\n    } catch (error) {\n      console.error(\"Error deleting judge:\", error);\n      alert(\"Error deleting judge\");\n    }\n  };\n  const handleSaveRounds = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/event-admin/save-rounds\", {\n        eventId,\n        rounds: rounds.map(round => ({\n          name: round.name,\n          category: round.category,\n          sub_category: round.sub_category,\n          board_type: round.board_type,\n          gender: round.gender,\n          age_category: round.age_category,\n          heats: round.heats.map(heat => ({\n            heat_name: heat.name,\n            competitors: heat.competitors.map(competitor => ({\n              id: competitor.id,\n              name: competitor.name\n            }))\n          }))\n        }))\n      });\n      console.log(\"Rounds and heats saved successfully:\", response.data);\n      alert(\"Rounds saved successfully\");\n    } catch (error) {\n      console.error(\"Error saving rounds:\", error);\n      alert(\"Error saving rounds\");\n    }\n  };\n  const handleFetchRounds = async () => {\n    try {\n      console.log(\"Fetching rounds for event ID:\", eventId);\n      const response = await axios.get(`http://localhost:3000/event-admin/get-rounds/${eventId}`);\n      console.log(\"Response received from server:\", response);\n      const rounds = response.data;\n      console.log(\"Rounds data:\", rounds);\n      const processedRounds = rounds.map(round => {\n        console.log(\"Processing round:\", round);\n        return {\n          ...round,\n          heats: round.heats.map(heat => {\n            console.log(\"Processing heat:\", heat);\n            return {\n              ...heat,\n              competitors: heat.competitors.map(competitor => ({\n                id: competitor.id.toString(),\n                // Ensure id is a string\n                name: competitor.name\n              }))\n            };\n          })\n        };\n      });\n      console.log(\"Processed rounds:\", processedRounds);\n      setRounds(processedRounds);\n      setShowRounds(true);\n    } catch (error) {\n      console.error(\"Error fetching rounds:\", error);\n      alert(\"Error fetching rounds\");\n    }\n  };\n  const handleGeneratePDF = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"rounds.pdf\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      alert(\"Error generating PDF\");\n    }\n  };\n  const handleCreateRounds = () => {\n    if (!eventId) {\n      alert(\"Please select an event first.\");\n      return;\n    }\n    const competitorsByCategory = {};\n\n    // Organize competitors by their categories and sub-categories\n    competitors.forEach(competitor => {\n      const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\n      if (!competitorsByCategory[key]) {\n        competitorsByCategory[key] = [];\n      }\n      competitorsByCategory[key].push(competitor);\n    });\n    const newRounds = [];\n\n    // Create one round for each category and add heats\n    Object.keys(competitorsByCategory).forEach(key => {\n      const competitorsList = competitorsByCategory[key];\n      let heatNumber = 1;\n      const heats = [];\n      for (let i = 0; i < competitorsList.length; i += 4) {\n        const heatCompetitors = competitorsList.slice(i, i + 4);\n        heats.push({\n          id: `heat-1-${heatNumber}`,\n          name: `Heat ${heatNumber}`,\n          competitors: heatCompetitors\n        });\n        heatNumber++;\n      }\n      newRounds.push({\n        name: `Round 1 (${key})`,\n        category: competitorsList[0].category,\n        sub_category: competitorsList[0].sub_category,\n        board_type: competitorsList[0].board_type,\n        gender: competitorsList[0].gender,\n        age_category: competitorsList[0].age_category,\n        heats\n      });\n    });\n    setRounds(newRounds);\n    console.log(\"Created rounds:\", newRounds);\n  };\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const sourceHeatIndex = rounds.findIndex(round => round.heats.some(heat => heat.id === result.source.droppableId));\n    const destinationHeatIndex = rounds.findIndex(round => round.heats.some(heat => heat.id === result.destination.droppableId));\n    if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\n      return;\n    }\n    const sourceRound = rounds[sourceHeatIndex];\n    const destinationRound = rounds[destinationHeatIndex];\n    const sourceHeat = sourceRound.heats.find(heat => heat.id === result.source.droppableId);\n    const destinationHeat = destinationRound.heats.find(heat => heat.id === result.destination.droppableId);\n    const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\n    destinationHeat.competitors.splice(result.destination.index, 0, movedItem);\n    const updatedRounds = rounds.map(round => {\n      if (round.id === sourceRound.id) {\n        return sourceRound;\n      }\n      if (round.id === destinationRound.id) {\n        return destinationRound;\n      }\n      return round;\n    });\n    setRounds(updatedRounds);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1209,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateEvent,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Event Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1232,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 5\n    }, this), events.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events available. Please create an event.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item d-flex justify-content-between align-items-center ${eventId === event.id ? \"active\" : \"\"}`,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: () => {\n          fetchCompetitors(event.id, event.name);\n          fetchJudges(event.id);\n        },\n        children: [event.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => handleDeleteEvent(event.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 7\n    }, this), eventId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Manage Competitors for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddCompetitor,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Competitor Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: competitorName,\n            onChange: e => setCompetitorName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: category,\n            onChange: e => setCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 15\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1299,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sub Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: subCategory,\n            onChange: e => setSubCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Sub Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 15\n            }, this), subCategories.map(subCat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subCat,\n              children: subCat\n            }, subCat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Board Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: boardType,\n            onChange: e => setBoardType(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Board Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1329,\n              columnNumber: 15\n            }, this), categories.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1331,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: gender,\n            onChange: e => setGender(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1345,\n              columnNumber: 15\n            }, this), subCategories.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: g,\n              children: g\n            }, g, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1347,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Age Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: ageCategory,\n            onChange: e => setAgeCategory(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Age Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 15\n            }, this), ageCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1363,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          children: \"Add Competitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Competitors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: competitors.map(competitor => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [competitor.name, \" (Event: \", selectedEventName, \", Category:\", \" \", competitor.category, \", Sub Category: \", competitor.sub_category, \", Board Type: \", competitor.board_type, \", Gender: \", competitor.gender, \", Age Category: \", competitor.age_category, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteCompetitor(competitor.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 15\n          }, this)]\n        }, competitor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1377,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Manage Judges for \", selectedEventName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddJudge,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Judge Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: judgeName,\n            onChange: e => setJudgeName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          children: \"Add Judge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Judges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: judges.map(judge => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [judge.name, \" (Event: \", selectedEventName, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteJudge(judge.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 15\n          }, this)]\n        }, judge.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mb-0\",\n        onClick: handleCreateRounds,\n        children: \"Create Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-0\",\n        onClick: handleSaveRounds,\n        children: \"Save Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info mt-0\",\n        onClick: handleFetchRounds,\n        children: \"Show All Rounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mt-0\",\n        onClick: handleGeneratePDF,\n        children: \"Generate PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: rounds.map(round => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: round.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: round.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1457,\n              columnNumber: 23\n            }, this), round.heats.map((heat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Heat \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1460,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: heat.id,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  className: \"list-group\",\n                  children: [heat.competitors.map((competitor, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: competitor.id.toString(),\n                    index: idx,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"list-group-item\",\n                      children: competitor.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1475,\n                      columnNumber: 39\n                    }, this)\n                  }, competitor.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1469,\n                    columnNumber: 35\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1463,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1461,\n                columnNumber: 27\n              }, this)]\n            }, heat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1459,\n              columnNumber: 25\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1452,\n            columnNumber: 21\n          }, this)\n        }, round.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1448,\n        columnNumber: 13\n      }, this), showRounds && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Rounds for \", selectedEventName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1500,\n          columnNumber: 13\n        }, this), rounds.map((round, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Round \", roundIndex + 1, \" (\", round.category, \", \", round.sub_category, \",\", \" \", round.board_type, \", \", round.gender, \", \", round.age_category, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 17\n          }, this), round.heats.map((heat, heatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Heat \", heatIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1509,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: heat.competitors.map((competitor, competitorIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: competitor.name\n              }, competitorIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1512,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1510,\n              columnNumber: 21\n            }, this)]\n          }, heatIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1508,\n            columnNumber: 19\n          }, this))]\n        }, roundIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Please select an event to manage competitors and judges.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1525,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1208,\n    columnNumber: 3\n  }, this);\n};\n_s(EventManagement, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventManagement;\nexport default EventManagement;\nvar _c;\n$RefreshReg$(_c, \"EventManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","EventManagement","_s","events","setEvents","fetchEvents","response","get","data","error","console","fetchCompetitors","eventId","eventName","setCompetitors","setEventId","setSelectedEventName","fetchJudges","setJudges","handleCreateEvent","e","preventDefault","post","name","date","location","created_by","createdBy","alert","setName","setDate","setLocation","handleDeleteEvent","id","delete","handleAddCompetitor","competitorName","event_id","category","sub_category","subCategory","board_type","boardType","gender","age_category","ageCategory","setCompetitorName","setCategory","setSubCategory","setBoardType","setGender","setAgeCategory","selectedEventName","handleDeleteCompetitor","handleAddJudge","judgeName","setJudgeName","handleDeleteJudge","handleSaveRounds","rounds","map","round","heats","heat","heat_name","competitors","competitor","log","handleFetchRounds","processedRounds","toString","setRounds","setShowRounds","handleGeneratePDF","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","handleCreateRounds","competitorsByCategory","forEach","key","push","newRounds","Object","keys","competitorsList","heatNumber","i","length","heatCompetitors","slice","handleDragEnd","result","destination","sourceHeatIndex","findIndex","some","source","droppableId","destinationHeatIndex","sourceRound","destinationRound","sourceHeat","find","destinationHeat","movedItem","splice","index","updatedRounds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","event","style","cursor","onClick","categories","cat","subCategories","subCat","g","ageCategories","judges","judge","onDragEnd","provided","ref","innerRef","droppableProps","idx","draggableId","draggableProps","dragHandleProps","placeholder","showRounds","roundIndex","heatIndex","competitorIndex","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React_Projects/event-platform/client/src/components/EventManagement.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// const categories = [\"Shortboard\", \"Longboard\"];\r\n// const subCategories = [\"Men\", \"Women\"];\r\n// const ageCategories = [\r\n//   \"Open\",\r\n//   \"Sub12\",\r\n//   \"Sub14\",\r\n//   \"Sub18\",\r\n//   \"Professional\",\r\n//   \"+40\",\r\n//   \"+45\",\r\n//   \"+50\",\r\n//   \"+60\",\r\n//   \"+65\",\r\n//   \"+70\",\r\n// ];\r\n\r\n// const EventManagement = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [competitors, setCompetitors] = useState([]);\r\n//   const [judges, setJudges] = useState([]);\r\n//   const [rounds, setRounds] = useState([]);\r\n//   const [showRounds, setShowRounds] = useState(false);\r\n//   const [eventId, setEventId] = useState(null);\r\n//   const [name, setName] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [location, setLocation] = useState(\"\");\r\n//   const [competitorName, setCompetitorName] = useState(\"\");\r\n//   const [category, setCategory] = useState(categories[0]);\r\n//   const [subCategory, setSubCategory] = useState(subCategories[0]);\r\n//   const [boardType, setBoardType] = useState(categories[0]);\r\n//   const [gender, setGender] = useState(subCategories[0]);\r\n//   const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\r\n//   const [judgeName, setJudgeName] = useState(\"\");\r\n//   const [createdBy, setCreatedBy] = useState(1);\r\n//   const [selectedEventName, setSelectedEventName] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         \"http://localhost:3000/event-admin/get-events\"\r\n//       );\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching events:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCompetitors = async (eventId, eventName) => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-competitors/${eventId}`\r\n//       );\r\n//       setCompetitors(response.data);\r\n//       setEventId(eventId);\r\n//       setSelectedEventName(eventName);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching competitors:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchJudges = async (eventId) => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-judges/${eventId}`\r\n//       );\r\n//       setJudges(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching judges:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateEvent = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\"http://localhost:3000/event-admin/create-event\", {\r\n//         name,\r\n//         date,\r\n//         location,\r\n//         created_by: createdBy,\r\n//       });\r\n//       alert(\"Event created successfully\");\r\n//       setName(\"\");\r\n//       setDate(\"\");\r\n//       setLocation(\"\");\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error(\"Error creating event:\", error);\r\n//       alert(\"Error creating event\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteEvent = async (id) => {\r\n//     try {\r\n//       await axios.delete(\r\n//         `http://localhost:3000/event-admin/delete-event/${id}`\r\n//       );\r\n//       alert(\"Event deleted successfully\");\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting event:\", error);\r\n//       alert(\"Error deleting event\");\r\n//     }\r\n//   };\r\n\r\n//   const handleAddCompetitor = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\r\n//         name: competitorName,\r\n//         event_id: eventId,\r\n//         category,\r\n//         sub_category: subCategory,\r\n//         board_type: boardType,\r\n//         gender,\r\n//         age_category: ageCategory,\r\n//       });\r\n//       alert(\"Competitor added successfully\");\r\n//       setCompetitorName(\"\");\r\n//       setCategory(categories[0]);\r\n//       setSubCategory(subCategories[0]);\r\n//       setBoardType(categories[0]);\r\n//       setGender(subCategories[0]);\r\n//       setAgeCategory(ageCategories[0]);\r\n//       fetchCompetitors(eventId, selectedEventName);\r\n//     } catch (error) {\r\n//       console.error(\"Error adding competitor:\", error);\r\n//       alert(\"Error adding competitor\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteCompetitor = async (id) => {\r\n//     try {\r\n//       await axios.delete(\r\n//         `http://localhost:3000/event-admin/delete-competitor/${id}`\r\n//       );\r\n//       alert(\"Competitor deleted successfully\");\r\n//       fetchCompetitors(eventId, selectedEventName);\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting competitor:\", error);\r\n//       alert(\"Error deleting competitor\");\r\n//     }\r\n//   };\r\n\r\n//   const handleAddJudge = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\r\n//         name: judgeName,\r\n//         event_id: eventId,\r\n//       });\r\n//       alert(\"Judge added successfully\");\r\n//       setJudgeName(\"\");\r\n//       fetchJudges(eventId);\r\n//     } catch (error) {\r\n//       console.error(\"Error adding judge:\", error);\r\n//       alert(\"Error adding judge\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteJudge = async (id) => {\r\n//     try {\r\n//       await axios.delete(\r\n//         `http://localhost:3000/event-admin/delete-judge/${id}`\r\n//       );\r\n//       alert(\"Judge deleted successfully\");\r\n//       fetchJudges(eventId);\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting judge:\", error);\r\n//       alert(\"Error deleting judge\");\r\n//     }\r\n//   };\r\n\r\n\r\n\r\n\r\n//   const handleSaveRounds = async () => {\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"http://localhost:3000/event-admin/save-rounds\",\r\n//         {\r\n//           eventId,\r\n//           rounds: rounds.map((round) => ({\r\n//             name: round.name,\r\n//             category: round.category,\r\n//             sub_category: round.sub_category,\r\n//             board_type: round.board_type,\r\n//             gender: round.gender,\r\n//             age_category: round.age_category,\r\n//             heats: round.heats.map((heat) => ({\r\n//               heat_name: heat.name,\r\n//               competitors: heat.competitors.map((competitor) => ({\r\n//                 id: competitor.id,\r\n//                 name: competitor.name,\r\n//               })),\r\n//             })),\r\n//           })),\r\n//         }\r\n//       );\r\n  \r\n//       console.log(\"Rounds and heats saved successfully:\", response.data);\r\n//       alert(\"Rounds saved successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error saving rounds:\", error);\r\n//       alert(\"Error saving rounds\");\r\n//     }\r\n//   };\r\n  \r\n//   // const handleSaveRounds = async () => {\r\n//   //   try {\r\n//   //     const response = await axios.post(\r\n//   //       \"http://localhost:3000/event-admin/save-rounds\",\r\n//   //       {\r\n//   //         eventId,\r\n//   //         rounds: rounds.map((round) => ({\r\n//   //           name: round.name,\r\n//   //           category: round.category,\r\n//   //           sub_category: round.sub_category,\r\n//   //           board_type: round.board_type,\r\n//   //           gender: round.gender,\r\n//   //           age_category: round.age_category,\r\n//   //           heats: round.heats.map((heat) => ({\r\n//   //             heat_name: heat.name,\r\n//   //             competitors: heat.competitors.map((competitor) => ({\r\n//   //               id: competitor.id,\r\n//   //               name: competitor.name,\r\n//   //             })),\r\n//   //           })),\r\n//   //         })),\r\n//   //       }\r\n//   //     );\r\n  \r\n//   //     console.log(\"Rounds and heats saved successfully:\", response.data);\r\n//   //     alert(\"Rounds saved successfully\");\r\n//   //   } catch (error) {\r\n//   //     console.error(\"Error saving rounds:\", error);\r\n//   //     alert(\"Error saving rounds\");\r\n//   //   }\r\n//   // };\r\n  \r\n\r\n\r\n//   const handleFetchRounds = async () => {\r\n//     try {\r\n//       console.log(\"Fetching rounds for event ID:\", eventId);\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//       );\r\n//       console.log(\"Response received from server:\", response);\r\n  \r\n//       const rounds = response.data;\r\n//       console.log(\"Rounds data:\", rounds);\r\n  \r\n//       const processedRounds = rounds.map((round) => {\r\n//         console.log(\"Processing round:\", round);\r\n//         return {\r\n//           ...round,\r\n//           heats: round.heats.map((heat) => {\r\n//             console.log(\"Processing heat:\", heat);\r\n//             return {\r\n//               ...heat,\r\n//               competitors: heat.competitors.map((competitor) => ({\r\n//                 id: competitor.id,\r\n//                 name: competitor.name,\r\n//               })),\r\n//             };\r\n//           }),\r\n//         };\r\n//       });\r\n  \r\n//       console.log(\"Processed rounds:\", processedRounds);\r\n//       setRounds(processedRounds);\r\n//       setShowRounds(true);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rounds:\", error);\r\n//       alert(\"Error fetching rounds\");\r\n//     }\r\n//   };\r\n  \r\n\r\n//   // const handleFetchRounds = async () => {\r\n//   //   try {\r\n//   //     console.log(\"Fetching rounds for event ID:\", eventId);\r\n//   //     const response = await axios.get(\r\n//   //       `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//   //     );\r\n//   //     console.log(\"Response received from server:\", response);\r\n  \r\n//   //     const rounds = response.data;\r\n//   //     console.log(\"Rounds data:\", rounds);\r\n  \r\n//   //     const processedRounds = rounds.map((round) => {\r\n//   //       console.log(\"Processing round:\", round);\r\n//   //       return {\r\n//   //         ...round,\r\n//   //         heats: (round.heats || []).map((heat) => {\r\n//   //           console.log(\"Processing heat:\", heat);\r\n//   //           return {\r\n//   //             ...heat,\r\n//   //             competitors: (heat.competitors || []).map((competitor) => ({\r\n//   //               id: competitor.id,\r\n//   //               name: competitor.name,\r\n//   //             })),\r\n//   //           };\r\n//   //         }),\r\n//   //       };\r\n//   //     });\r\n  \r\n//   //     console.log(\"Processed rounds:\", processedRounds);\r\n//   //     setRounds(processedRounds);\r\n//   //     setShowRounds(true);\r\n//   //   } catch (error) {\r\n//   //     console.error(\"Error fetching rounds:\", error);\r\n//   //     alert(\"Error fetching rounds\");\r\n//   //   }\r\n//   // };\r\n  \r\n\r\n\r\n  \r\n\r\n//   // const handleFetchRounds = async () => {\r\n//   //   try {\r\n//   //     const response = await axios.get(\r\n//   //       `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n//   //     );\r\n//   //     const { rounds } = response.data;\r\n\r\n//   //     const processedRounds = rounds.map((round) => {\r\n//   //       return {\r\n//   //         ...round,\r\n//   //         heats: round.heats.map((heat) => ({\r\n//   //           ...heat,\r\n//   //           competitors: heat.competitors.map((competitor) => ({\r\n//   //             id: competitor.id,\r\n//   //             name: competitor.name,\r\n//   //           })),\r\n//   //         })),\r\n//   //       };\r\n//   //     });\r\n\r\n//   //     setRounds(processedRounds);\r\n//   //   } catch (error) {\r\n//   //     console.error(\"Error fetching rounds:\", error);\r\n//   //     alert(\"Error fetching rounds\");\r\n//   //   }\r\n//   // };\r\n\r\n\r\n\r\n//   const handleGeneratePDF = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`,\r\n//         { responseType: \"blob\" }\r\n//       );\r\n//       const url = window.URL.createObjectURL(new Blob([response.data]));\r\n//       const link = document.createElement(\"a\");\r\n//       link.href = url;\r\n//       link.setAttribute(\"download\", \"rounds.pdf\");\r\n//       document.body.appendChild(link);\r\n//       link.click();\r\n//     } catch (error) {\r\n//       console.error(\"Error generating PDF:\", error);\r\n//       alert(\"Error generating PDF\");\r\n//     }\r\n//   };\r\n\r\n\r\n\r\n//   const handleCreateRounds = () => {\r\n//     if (!eventId) {\r\n//       alert(\"Please select an event first.\");\r\n//       return;\r\n//     }\r\n  \r\n//     const competitorsByCategory = {};\r\n  \r\n//     // Organize competitors by their categories and sub-categories\r\n//     competitors.forEach((competitor) => {\r\n//       const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\r\n//       if (!competitorsByCategory[key]) {\r\n//         competitorsByCategory[key] = [];\r\n//       }\r\n//       competitorsByCategory[key].push(competitor);\r\n//     });\r\n  \r\n//     const newRounds = [];\r\n  \r\n//     // Create one round for each category and add heats\r\n//     Object.keys(competitorsByCategory).forEach((key) => {\r\n//       const competitorsList = competitorsByCategory[key];\r\n//       const heats = [];\r\n  \r\n//       for (let i = 0; i < competitorsList.length; i += 4) {\r\n//         const heatCompetitors = competitorsList.slice(i, i + 4);\r\n  \r\n//         heats.push({\r\n//           id: `heat-1-${heats.length + 1}`,\r\n//           name: `Heat ${heats.length + 1}`,\r\n//           competitors: heatCompetitors,\r\n//         });\r\n//       }\r\n  \r\n//       newRounds.push({\r\n//         name: `Round 1 (${key})`,\r\n//         category: competitorsList[0].category,\r\n//         sub_category: competitorsList[0].sub_category,\r\n//         board_type: competitorsList[0].board_type,\r\n//         gender: competitorsList[0].gender,\r\n//         age_category: competitorsList[0].age_category,\r\n//         heats,\r\n//       });\r\n//     });\r\n  \r\n//     setRounds(newRounds);\r\n//     console.log(\"Created rounds:\", newRounds);\r\n//   };\r\n  \r\n  \r\n\r\n//   // const handleCreateRounds = () => {\r\n//   //   const newRounds = [];\r\n//   //   const competitorsByCategory = {};\r\n\r\n//   //   // Organize competitors by their categories and sub-categories\r\n//   //   competitors.forEach((competitor) => {\r\n//   //     const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\r\n//   //     if (!competitorsByCategory[key]) {\r\n//   //       competitorsByCategory[key] = [];\r\n//   //     }\r\n//   //     competitorsByCategory[key].push(competitor);\r\n//   //   });\r\n\r\n//   //   // Create rounds and heats for each category\r\n//   //   Object.keys(competitorsByCategory).forEach((key) => {\r\n//   //     const competitorsList = competitorsByCategory[key];\r\n//   //     let roundNumber = 1;\r\n//   //     let heatNumber = 1;\r\n\r\n//   //     for (let i = 0; i < competitorsList.length; i += 4) {\r\n//   //       const roundName = `Round ${roundNumber} (${key})`;\r\n//   //       const heatCompetitors = competitorsList.slice(i, i + 4);\r\n\r\n//   //       let round = newRounds.find((r) => r.name === roundName);\r\n//   //       if (!round) {\r\n//   //         round = {\r\n//   //           name: roundName,\r\n//   //           category: competitorsList[0].category,\r\n//   //           sub_category: competitorsList[0].sub_category,\r\n//   //           board_type: competitorsList[0].board_type,\r\n//   //           gender: competitorsList[0].gender,\r\n//   //           age_category: competitorsList[0].age_category,\r\n//   //           heats: [],\r\n//   //         };\r\n//   //         newRounds.push(round);\r\n//   //       }\r\n\r\n//   //       round.heats.push({\r\n//   //         id: `heat-${roundNumber}-${heatNumber}`,\r\n//   //         name: `Heat ${heatNumber}`,\r\n//   //         competitors: heatCompetitors,\r\n//   //       });\r\n\r\n//   //       heatNumber++;\r\n//   //       if (heatNumber > 4) {\r\n//   //         heatNumber = 1;\r\n//   //         roundNumber++;\r\n//   //       }\r\n//   //     }\r\n//   //   });\r\n\r\n//   //   setRounds(newRounds);\r\n//   // };\r\n\r\n//   const handleDragEnd = (result) => {\r\n//     if (!result.destination) {\r\n//       return;\r\n//     }\r\n\r\n//     const sourceHeatIndex = rounds.findIndex((round) =>\r\n//       round.heats.some((heat) => heat.id === result.source.droppableId)\r\n//     );\r\n//     const destinationHeatIndex = rounds.findIndex((round) =>\r\n//       round.heats.some((heat) => heat.id === result.destination.droppableId)\r\n//     );\r\n\r\n//     if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\r\n//       return;\r\n//     }\r\n\r\n//     const sourceRound = rounds[sourceHeatIndex];\r\n//     const destinationRound = rounds[destinationHeatIndex];\r\n\r\n//     const sourceHeat = sourceRound.heats.find(\r\n//       (heat) => heat.id === result.source.droppableId\r\n//     );\r\n//     const destinationHeat = destinationRound.heats.find(\r\n//       (heat) => heat.id === result.destination.droppableId\r\n//     );\r\n\r\n//     const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\r\n//     destinationHeat.competitors.splice(\r\n//       result.destination.index,\r\n//       0,\r\n//       movedItem\r\n//     );\r\n\r\n//     const updatedRounds = rounds.map((round) => {\r\n//       if (round.id === sourceRound.id) {\r\n//         return sourceRound;\r\n//       }\r\n//       if (round.id === destinationRound.id) {\r\n//         return destinationRound;\r\n//       }\r\n//       return round;\r\n//     });\r\n\r\n//     setRounds(updatedRounds);\r\n//   };\r\n\r\n//   return (\r\n//   <div className=\"container mt-5\">\r\n//     <h2>Manage Events</h2>\r\n//     <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n//       <div className=\"form-group\">\r\n//         <label>Event Name:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div className=\"form-group mt-3\">\r\n//         <label>Date:</label>\r\n//         <input\r\n//           type=\"date\"\r\n//           className=\"form-control\"\r\n//           value={date}\r\n//           onChange={(e) => setDate(e.target.value)}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div className=\"form-group mt-3\">\r\n//         <label>Location:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           value={location}\r\n//           onChange={(e) => setLocation(e.target.value)}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//         Create Event\r\n//       </button>\r\n//     </form>\r\n\r\n//     <h3>Existing Events</h3>\r\n//     {events.length === 0 ? (\r\n//       <p>No events available. Please create an event.</p>\r\n//     ) : (\r\n//       <ul className=\"list-group\">\r\n//         {events.map((event) => (\r\n//           <li\r\n//             key={event.id}\r\n//             className={`list-group-item d-flex justify-content-between align-items-center ${\r\n//               eventId === event.id ? \"active\" : \"\"\r\n//             }`}\r\n//             style={{ cursor: \"pointer\" }}\r\n//             onClick={() => {\r\n//               fetchCompetitors(event.id, event.name);\r\n//               fetchJudges(event.id);\r\n//             }}\r\n//           >\r\n//             {event.name}\r\n//             <button\r\n//               className=\"btn btn-danger\"\r\n//               onClick={() => handleDeleteEvent(event.id)}\r\n//             >\r\n//               Delete\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     )}\r\n\r\n//     {eventId ? (\r\n//       <>\r\n//         <h3>Manage Competitors for {selectedEventName}</h3>\r\n//         <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n//           <div className=\"form-group\">\r\n//             <label>Competitor Name:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               value={competitorName}\r\n//               onChange={(e) => setCompetitorName(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group mt-3\">\r\n//             <label>Category:</label>\r\n//             <select\r\n//               className=\"form-control\"\r\n//               value={category}\r\n//               onChange={(e) => setCategory(e.target.value)}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select Category</option>\r\n//               {categories.map((cat) => (\r\n//                 <option key={cat} value={cat}>\r\n//                   {cat}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group mt-3\">\r\n//             <label>Sub Category:</label>\r\n//             <select\r\n//               className=\"form-control\"\r\n//               value={subCategory}\r\n//               onChange={(e) => setSubCategory(e.target.value)}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select Sub Category</option>\r\n//               {subCategories.map((subCat) => (\r\n//                 <option key={subCat} value={subCat}>\r\n//                   {subCat}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group mt-3\">\r\n//             <label>Board Type:</label>\r\n//             <select\r\n//               className=\"form-control\"\r\n//               value={boardType}\r\n//               onChange={(e) => setBoardType(e.target.value)}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select Board Type</option>\r\n//               {categories.map((type) => (\r\n//                 <option key={type} value={type}>\r\n//                   {type}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group mt-3\">\r\n//             <label>Gender:</label>\r\n//             <select\r\n//               className=\"form-control\"\r\n//               value={gender}\r\n//               onChange={(e) => setGender(e.target.value)}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select Gender</option>\r\n//               {subCategories.map((g) => (\r\n//                 <option key={g} value={g}>\r\n//                   {g}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group mt-3\">\r\n//             <label>Age Category:</label>\r\n//             <select\r\n//               className=\"form-control\"\r\n//               value={ageCategory}\r\n//               onChange={(e) => setAgeCategory(e.target.value)}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select Age Category</option>\r\n//               {ageCategories.map((cat) => (\r\n//                 <option key={cat} value={cat}>\r\n//                   {cat}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//             Add Competitor\r\n//           </button>\r\n//         </form>\r\n\r\n//         <h3>Existing Competitors</h3>\r\n//         <ul className=\"list-group\">\r\n//           {competitors.map((competitor) => (\r\n//             <li\r\n//               key={competitor.id}\r\n//               className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n//             >\r\n//               {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\r\n//               {competitor.category}, Sub Category: {competitor.sub_category},\r\n//               Board Type: {competitor.board_type}, Gender: {competitor.gender}\r\n//               , Age Category: {competitor.age_category})\r\n//               <button\r\n//                 className=\"btn btn-danger\"\r\n//                 onClick={() => handleDeleteCompetitor(competitor.id)}\r\n//               >\r\n//                 Delete\r\n//               </button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n\r\n//         <h3>Manage Judges for {selectedEventName}</h3>\r\n//         <form onSubmit={handleAddJudge} className=\"mb-4\">\r\n//           <div className=\"form-group\">\r\n//             <label>Judge Name:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               value={judgeName}\r\n//               onChange={(e) => setJudgeName(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n//             Add Judge\r\n//           </button>\r\n//         </form>\r\n\r\n//         <h3>Existing Judges</h3>\r\n//         <ul className=\"list-group\">\r\n//           {judges.map((judge) => (\r\n//             <li\r\n//               key={judge.id}\r\n//               className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n//             >\r\n//               {judge.name} (Event: {selectedEventName})\r\n//               <button\r\n//                 className=\"btn btn-danger\"\r\n//                 onClick={() => handleDeleteJudge(judge.id)}\r\n//               >\r\n//                 Delete\r\n//               </button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n\r\n//         <h3>Rounds</h3>\r\n//       <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\r\n//         Create Rounds\r\n//       </button>\r\n//       <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\r\n//         Save Rounds\r\n//       </button>\r\n//       <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\r\n//         Show All Rounds\r\n//       </button>\r\n//       <button\r\n//         className=\"btn btn-secondary mt-0\"\r\n//         onClick={handleGeneratePDF}\r\n//       >\r\n//         Generate PDF\r\n//       </button>\r\n\r\n//       <DragDropContext onDragEnd={handleDragEnd}>\r\n//         {rounds.map((round) => (\r\n//           <Droppable droppableId={round.id.toString()} key={round.id}>\r\n//             {(provided) => (\r\n//               <div\r\n//                 ref={provided.innerRef}\r\n//                 {...provided.droppableProps}\r\n//                 className=\"mb-4\"\r\n//               >\r\n//                 <h4>{round.name}</h4>\r\n//                 {round.heats.map((heat, index) => (\r\n//                   <Droppable droppableId={`heat-${heat.id}`} key={heat.id}>\r\n//                     {(provided) => (\r\n//                       <div\r\n//                         ref={provided.innerRef}\r\n//                         {...provided.droppableProps}\r\n//                         className=\"list-group mb-3\"\r\n//                       >\r\n//                         <h5>Heat {index + 1}</h5>\r\n//                         {heat.competitors.map((competitor, idx) => (\r\n//                           <Draggable\r\n//                             key={competitor.id}\r\n//                             draggableId={competitor.id.toString()}\r\n//                             index={idx}\r\n//                           >\r\n//                             {(provided) => (\r\n//                               <div\r\n//                                 ref={provided.innerRef}\r\n//                                 {...provided.draggableProps}\r\n//                                 {...provided.dragHandleProps}\r\n//                                 className=\"list-group-item\"\r\n//                               >\r\n//                                 {competitor.name}\r\n//                               </div>\r\n//                             )}\r\n//                           </Draggable>\r\n//                         ))}\r\n//                         {provided.placeholder}\r\n//                       </div>\r\n//                     )}\r\n//                   </Droppable>\r\n//                 ))}\r\n//                 {provided.placeholder}\r\n//               </div>\r\n//             )}\r\n//           </Droppable>\r\n//         ))}\r\n//       </DragDropContext>\r\n\r\n//       {showRounds && (\r\n//         <>\r\n//           <h3>Rounds for {selectedEventName}</h3>\r\n//           {rounds.map((round, roundIndex) => (\r\n//             <div key={roundIndex} className=\"mb-4\">\r\n//               <h4>\r\n//                 Round {roundIndex + 1} ({round.category}, {round.sub_category},{\" \"}\r\n//                 {round.board_type}, {round.gender}, {round.age_category})\r\n//               </h4>\r\n//               {round.heats.map((heat, heatIndex) => (\r\n//                 <div key={heatIndex} className=\"mb-2\">\r\n//                   <h5>Heat {heatIndex + 1}</h5>\r\n//                   <ul className=\"list-group\">\r\n//                     {heat.competitors.map((competitor, competitorIndex) => (\r\n//                       <li key={competitorIndex} className=\"list-group-item\">\r\n//                         {competitor.name}\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           ))}\r\n//         </>\r\n//         )}\r\n//       </>\r\n//     ) : (\r\n//       <p className=\"mt-4\">\r\n//         Please select an event to manage competitors and judges.\r\n//       </p>\r\n//     )}\r\n//   </div>\r\n// );\r\n// };\r\n\r\n// export default EventManagement;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst EventManagement = () => {\r\n  const [events, setEvents] = useState([]);\r\n//   const [competitors, setCompetitors] = useState([]);\r\n//   const [judges, setJudges] = useState([]);\r\n//   const [rounds, setRounds] = useState([]);\r\n//   const [showRounds, setShowRounds] = useState(false);\r\n//   const [eventId, setEventId] = useState(null);\r\n//   const [name, setName] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [location, setLocation] = useState(\"\");\r\n//   const [competitorName, setCompetitorName] = useState(\"\");\r\n//   const [category, setCategory] = useState(categories[0]);\r\n//   const [subCategory, setSubCategory] = useState(subCategories[0]);\r\n//   const [boardType, setBoardType] = useState(categories[0]);\r\n//   const [gender, setGender] = useState(subCategories[0]);\r\n//   const [ageCategory, setAgeCategory] = useState(ageCategories[0]);\r\n//   const [judgeName, setJudgeName] = useState(\"\");\r\n//   const [createdBy, setCreatedBy] = useState(1);\r\n//   const [selectedEventName, setSelectedEventName] = useState(\"\");\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:3000/event-admin/get-events\"\r\n      );\r\n      setEvents(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching events:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCompetitors = async (eventId, eventName) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-competitors/${eventId}`\r\n      );\r\n      setCompetitors(response.data);\r\n      setEventId(eventId);\r\n      setSelectedEventName(eventName);\r\n    } catch (error) {\r\n      console.error(\"Error fetching competitors:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchJudges = async (eventId) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/get-judges/${eventId}`\r\n      );\r\n      setJudges(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching judges:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCreateEvent = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/create-event\", {\r\n        name,\r\n        date,\r\n        location,\r\n        created_by: createdBy,\r\n      });\r\n      alert(\"Event created successfully\");\r\n      setName(\"\");\r\n      setDate(\"\");\r\n      setLocation(\"\");\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(\"Error creating event:\", error);\r\n      alert(\"Error creating event\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-event/${id}`\r\n      );\r\n      alert(\"Event deleted successfully\");\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error);\r\n      alert(\"Error deleting event\");\r\n    }\r\n  };\r\n\r\n  const handleAddCompetitor = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/add-competitor\", {\r\n        name: competitorName,\r\n        event_id: eventId,\r\n        category,\r\n        sub_category: subCategory,\r\n        board_type: boardType,\r\n        gender,\r\n        age_category: ageCategory,\r\n      });\r\n      alert(\"Competitor added successfully\");\r\n      setCompetitorName(\"\");\r\n      setCategory(\"Shortboard\");\r\n      setSubCategory(\"Men\");\r\n      setBoardType(\"Shortboard\");\r\n      setGender(\"Men\");\r\n      setAgeCategory(\"Professional\");\r\n      fetchCompetitors(eventId, selectedEventName);\r\n    } catch (error) {\r\n      console.error(\"Error adding competitor:\", error);\r\n      alert(\"Error adding competitor\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteCompetitor = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-competitor/${id}`\r\n      );\r\n      alert(\"Competitor deleted successfully\");\r\n      fetchCompetitors(eventId, selectedEventName);\r\n    } catch (error) {\r\n      console.error(\"Error deleting competitor:\", error);\r\n      alert(\"Error deleting competitor\");\r\n    }\r\n  };\r\n\r\n  const handleAddJudge = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3000/event-admin/add-judge\", {\r\n        name: judgeName,\r\n        event_id: eventId,\r\n      });\r\n      alert(\"Judge added successfully\");\r\n      setJudgeName(\"\");\r\n      fetchJudges(eventId);\r\n    } catch (error) {\r\n      console.error(\"Error adding judge:\", error);\r\n      alert(\"Error adding judge\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteJudge = async (id) => {\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3000/event-admin/delete-judge/${id}`\r\n      );\r\n      alert(\"Judge deleted successfully\");\r\n      fetchJudges(eventId);\r\n    } catch (error) {\r\n      console.error(\"Error deleting judge:\", error);\r\n      alert(\"Error deleting judge\");\r\n    }\r\n  };\r\n\r\n  const handleSaveRounds = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/event-admin/save-rounds\",\r\n        {\r\n          eventId,\r\n          rounds: rounds.map((round) => ({\r\n            name: round.name,\r\n            category: round.category,\r\n            sub_category: round.sub_category,\r\n            board_type: round.board_type,\r\n            gender: round.gender,\r\n            age_category: round.age_category,\r\n            heats: round.heats.map((heat) => ({\r\n              heat_name: heat.name,\r\n              competitors: heat.competitors.map((competitor) => ({\r\n                id: competitor.id,\r\n                name: competitor.name,\r\n              })),\r\n            })),\r\n          })),\r\n        }\r\n      );\r\n  \r\n      console.log(\"Rounds and heats saved successfully:\", response.data);\r\n      alert(\"Rounds saved successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error saving rounds:\", error);\r\n      alert(\"Error saving rounds\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleFetchRounds = async () => {\r\n  try {\r\n    console.log(\"Fetching rounds for event ID:\", eventId);\r\n    const response = await axios.get(\r\n      `http://localhost:3000/event-admin/get-rounds/${eventId}`\r\n    );\r\n    console.log(\"Response received from server:\", response);\r\n\r\n    const rounds = response.data;\r\n    console.log(\"Rounds data:\", rounds);\r\n\r\n    const processedRounds = rounds.map((round) => {\r\n      console.log(\"Processing round:\", round);\r\n      return {\r\n        ...round,\r\n        heats: round.heats.map((heat) => {\r\n          console.log(\"Processing heat:\", heat);\r\n          return {\r\n            ...heat,\r\n            competitors: heat.competitors.map((competitor) => ({\r\n              id: competitor.id.toString(), // Ensure id is a string\r\n              name: competitor.name,\r\n            })),\r\n          };\r\n        }),\r\n      };\r\n    });\r\n\r\n    console.log(\"Processed rounds:\", processedRounds);\r\n    setRounds(processedRounds);\r\n    setShowRounds(true);\r\n  } catch (error) {\r\n    console.error(\"Error fetching rounds:\", error);\r\n    alert(\"Error fetching rounds\");\r\n  }\r\n};\r\n\r\n\r\n  const handleGeneratePDF = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3000/event-admin/generate-rounds-pdf/${eventId}`,\r\n        { responseType: \"blob\" }\r\n      );\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", \"rounds.pdf\");\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Error generating PDF:\", error);\r\n      alert(\"Error generating PDF\");\r\n    }\r\n  };\r\n\r\n  const handleCreateRounds = () => {\r\n    if (!eventId) {\r\n      alert(\"Please select an event first.\");\r\n      return;\r\n    }\r\n  \r\n    const competitorsByCategory = {};\r\n  \r\n    // Organize competitors by their categories and sub-categories\r\n    competitors.forEach((competitor) => {\r\n      const key = `${competitor.category}-${competitor.sub_category}-${competitor.board_type}-${competitor.gender}-${competitor.age_category}`;\r\n      if (!competitorsByCategory[key]) {\r\n        competitorsByCategory[key] = [];\r\n      }\r\n      competitorsByCategory[key].push(competitor);\r\n    });\r\n  \r\n    const newRounds = [];\r\n  \r\n    // Create one round for each category and add heats\r\n    Object.keys(competitorsByCategory).forEach((key) => {\r\n      const competitorsList = competitorsByCategory[key];\r\n      let heatNumber = 1;\r\n      const heats = [];\r\n  \r\n      for (let i = 0; i < competitorsList.length; i += 4) {\r\n        const heatCompetitors = competitorsList.slice(i, i + 4);\r\n  \r\n        heats.push({\r\n          id: `heat-1-${heatNumber}`,\r\n          name: `Heat ${heatNumber}`,\r\n          competitors: heatCompetitors,\r\n        });\r\n  \r\n        heatNumber++;\r\n      }\r\n  \r\n      newRounds.push({\r\n        name: `Round 1 (${key})`,\r\n        category: competitorsList[0].category,\r\n        sub_category: competitorsList[0].sub_category,\r\n        board_type: competitorsList[0].board_type,\r\n        gender: competitorsList[0].gender,\r\n        age_category: competitorsList[0].age_category,\r\n        heats,\r\n      });\r\n    });\r\n  \r\n    setRounds(newRounds);\r\n    console.log(\"Created rounds:\", newRounds);\r\n  };\r\n\r\n  const handleDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const sourceHeatIndex = rounds.findIndex((round) =>\r\n      round.heats.some((heat) => heat.id === result.source.droppableId)\r\n    );\r\n    const destinationHeatIndex = rounds.findIndex((round) =>\r\n      round.heats.some((heat) => heat.id === result.destination.droppableId)\r\n    );\r\n\r\n    if (sourceHeatIndex === -1 || destinationHeatIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    const sourceRound = rounds[sourceHeatIndex];\r\n    const destinationRound = rounds[destinationHeatIndex];\r\n\r\n    const sourceHeat = sourceRound.heats.find(\r\n      (heat) => heat.id === result.source.droppableId\r\n    );\r\n    const destinationHeat = destinationRound.heats.find(\r\n      (heat) => heat.id === result.destination.droppableId\r\n    );\r\n\r\n    const [movedItem] = sourceHeat.competitors.splice(result.source.index, 1);\r\n    destinationHeat.competitors.splice(\r\n      result.destination.index,\r\n      0,\r\n      movedItem\r\n    );\r\n\r\n    const updatedRounds = rounds.map((round) => {\r\n      if (round.id === sourceRound.id) {\r\n        return sourceRound;\r\n      }\r\n      if (round.id === destinationRound.id) {\r\n        return destinationRound;\r\n      }\r\n      return round;\r\n    });\r\n\r\n    setRounds(updatedRounds);\r\n  };\r\n\r\n  return (\r\n  <div className=\"container mt-5\">\r\n    <h2>Manage Events</h2>\r\n    <form onSubmit={handleCreateEvent} className=\"mb-4\">\r\n      <div className=\"form-group\">\r\n        <label>Event Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-3\">\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          className=\"form-control\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-3\">\r\n        <label>Location:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={location}\r\n          onChange={(e) => setLocation(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n        Create Event\r\n      </button>\r\n    </form>\r\n\r\n    <h3>Existing Events</h3>\r\n    {events.length === 0 ? (\r\n      <p>No events available. Please create an event.</p>\r\n    ) : (\r\n      <ul className=\"list-group\">\r\n        {events.map((event) => (\r\n          <li\r\n            key={event.id}\r\n            className={`list-group-item d-flex justify-content-between align-items-center ${\r\n              eventId === event.id ? \"active\" : \"\"\r\n            }`}\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              fetchCompetitors(event.id, event.name);\r\n              fetchJudges(event.id);\r\n            }}\r\n          >\r\n            {event.name}\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => handleDeleteEvent(event.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n\r\n    {eventId ? (\r\n      <>\r\n        <h3>Manage Competitors for {selectedEventName}</h3>\r\n        <form onSubmit={handleAddCompetitor} className=\"mb-4\">\r\n          <div className=\"form-group\">\r\n            <label>Competitor Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={competitorName}\r\n              onChange={(e) => setCompetitorName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Category:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Category</option>\r\n              {categories.map((cat) => (\r\n                <option key={cat} value={cat}>\r\n                  {cat}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Sub Category:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={subCategory}\r\n              onChange={(e) => setSubCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Sub Category</option>\r\n              {subCategories.map((subCat) => (\r\n                <option key={subCat} value={subCat}>\r\n                  {subCat}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Board Type:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={boardType}\r\n              onChange={(e) => setBoardType(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Board Type</option>\r\n              {categories.map((type) => (\r\n                <option key={type} value={type}>\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Gender:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={gender}\r\n              onChange={(e) => setGender(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Gender</option>\r\n              {subCategories.map((g) => (\r\n                <option key={g} value={g}>\r\n                  {g}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Age Category:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={ageCategory}\r\n              onChange={(e) => setAgeCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Age Category</option>\r\n              {ageCategories.map((cat) => (\r\n                <option key={cat} value={cat}>\r\n                  {cat}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n            Add Competitor\r\n          </button>\r\n        </form>\r\n\r\n        <h3>Existing Competitors</h3>\r\n        <ul className=\"list-group\">\r\n          {competitors.map((competitor) => (\r\n            <li\r\n              key={competitor.id}\r\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n              {competitor.name} (Event: {selectedEventName}, Category:{\" \"}\r\n              {competitor.category}, Sub Category: {competitor.sub_category},\r\n              Board Type: {competitor.board_type}, Gender: {competitor.gender}\r\n              , Age Category: {competitor.age_category})\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDeleteCompetitor(competitor.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <h3>Manage Judges for {selectedEventName}</h3>\r\n        <form onSubmit={handleAddJudge} className=\"mb-4\">\r\n          <div className=\"form-group\">\r\n            <label>Judge Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={judgeName}\r\n              onChange={(e) => setJudgeName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n            Add Judge\r\n          </button>\r\n        </form>\r\n\r\n        <h3>Existing Judges</h3>\r\n        <ul className=\"list-group\">\r\n          {judges.map((judge) => (\r\n            <li\r\n              key={judge.id}\r\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n              {judge.name} (Event: {selectedEventName})\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDeleteJudge(judge.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <h3>Rounds</h3>\r\n        <button className=\"btn btn-primary mb-0\" onClick={handleCreateRounds}>\r\n          Create Rounds\r\n        </button>\r\n        <button className=\"btn btn-success mt-0\" onClick={handleSaveRounds}>\r\n          Save Rounds\r\n        </button>\r\n        <button className=\"btn btn-info mt-0\" onClick={handleFetchRounds}>\r\n          Show All Rounds\r\n        </button>\r\n        <button\r\n          className=\"btn btn-secondary mt-0\"\r\n          onClick={handleGeneratePDF}\r\n        >\r\n          Generate PDF\r\n        </button>\r\n\r\n       \r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n              {rounds.map((round) => (\r\n                <Droppable droppableId={round.id} key={round.id}>\r\n                  {(provided) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className=\"mb-4\"\r\n                    >\r\n                      <h4>{round.name}</h4>\r\n                      {round.heats.map((heat, index) => (\r\n                        <div key={heat.id}>\r\n                          <h5>Heat {index + 1}</h5>\r\n                          <Droppable droppableId={heat.id}>\r\n                            {(provided) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                className=\"list-group\"\r\n                              >\r\n                                {heat.competitors.map((competitor, idx) => (\r\n                                  <Draggable\r\n                                    key={competitor.id}\r\n                                    draggableId={competitor.id.toString()}\r\n                                    index={idx}\r\n                                  >\r\n                                    {(provided) => (\r\n                                      <div\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        className=\"list-group-item\"\r\n                                      >\r\n                                        {competitor.name}\r\n                                      </div>\r\n                                    )}\r\n                                  </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                              </div>\r\n                            )}\r\n                          </Droppable>\r\n                        </div>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              ))}\r\n            </DragDropContext>\r\n {showRounds && (\r\n          <>\r\n            <h3>Rounds for {selectedEventName}</h3>\r\n            {rounds.map((round, roundIndex) => (\r\n              <div key={roundIndex} className=\"mb-4\">\r\n                <h4>\r\n                  Round {roundIndex + 1} ({round.category}, {round.sub_category},{\" \"}\r\n                  {round.board_type}, {round.gender}, {round.age_category})\r\n                </h4>\r\n                {round.heats.map((heat, heatIndex) => (\r\n                  <div key={heatIndex} className=\"mb-2\">\r\n                    <h5>Heat {heatIndex + 1}</h5>\r\n                    <ul className=\"list-group\">\r\n                      {heat.competitors.map((competitor, competitorIndex) => (\r\n                        <li key={competitorIndex} className=\"list-group-item\">\r\n                          {competitor.name}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <p className=\"mt-4\">\r\n        Please select an event to manage competitors and judges.\r\n      </p>\r\n    )}\r\n  </div>\r\n);\r\n};\r\n\r\nexport default EventManagement;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}